{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nconst command_1 = require(\"../command\");\n\nconst requireDatabaseInstance_1 = require(\"../requireDatabaseInstance\");\n\nconst requirePermissions_1 = require(\"../requirePermissions\");\n\nconst metadata = require(\"../database/metadata\");\n\nconst types_1 = require(\"../emulator/types\");\n\nconst commandUtils_1 = require(\"../emulator/commandUtils\");\n\nexports.default = new command_1.Command(\"database:rules:release <rulesetId>\").description(\"mark a staged ruleset as the stable ruleset\").option(\"--instance <instance>\", \"use the database <instance>.firebaseio.com (if omitted, uses default database instance)\").before(requirePermissions_1.requirePermissions, [\"firebasedatabase.instances.update\"]).before(requireDatabaseInstance_1.requireDatabaseInstance).before(commandUtils_1.warnEmulatorNotSupported, types_1.Emulators.DATABASE).action(async (rulesetId, options) => {\n  const oldLabels = await metadata.getRulesetLabels(options.instance);\n  const newLabels = {\n    stable: rulesetId,\n    canary: oldLabels.canary\n  };\n  await metadata.setRulesetLabels(options.instance, newLabels);\n  return newLabels;\n});","map":{"version":3,"sources":["/home/dev/Documentos/Projects/github-clone/node_modules/firebase-tools/lib/commands/database-rules-release.js"],"names":["Object","defineProperty","exports","value","command_1","require","requireDatabaseInstance_1","requirePermissions_1","metadata","types_1","commandUtils_1","default","Command","description","option","before","requirePermissions","requireDatabaseInstance","warnEmulatorNotSupported","Emulators","DATABASE","action","rulesetId","options","oldLabels","getRulesetLabels","instance","newLabels","stable","canary","setRulesetLabels"],"mappings":"AAAA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;;AACA,MAAMC,SAAS,GAAGC,OAAO,CAAC,YAAD,CAAzB;;AACA,MAAMC,yBAAyB,GAAGD,OAAO,CAAC,4BAAD,CAAzC;;AACA,MAAME,oBAAoB,GAAGF,OAAO,CAAC,uBAAD,CAApC;;AACA,MAAMG,QAAQ,GAAGH,OAAO,CAAC,sBAAD,CAAxB;;AACA,MAAMI,OAAO,GAAGJ,OAAO,CAAC,mBAAD,CAAvB;;AACA,MAAMK,cAAc,GAAGL,OAAO,CAAC,0BAAD,CAA9B;;AACAH,OAAO,CAACS,OAAR,GAAkB,IAAIP,SAAS,CAACQ,OAAd,CAAsB,oCAAtB,EACbC,WADa,CACD,6CADC,EAEbC,MAFa,CAEN,uBAFM,EAEmB,yFAFnB,EAGbC,MAHa,CAGNR,oBAAoB,CAACS,kBAHf,EAGmC,CAAC,mCAAD,CAHnC,EAIbD,MAJa,CAINT,yBAAyB,CAACW,uBAJpB,EAKbF,MALa,CAKNL,cAAc,CAACQ,wBALT,EAKmCT,OAAO,CAACU,SAAR,CAAkBC,QALrD,EAMbC,MANa,CAMN,OAAOC,SAAP,EAAkBC,OAAlB,KAA8B;AACtC,QAAMC,SAAS,GAAG,MAAMhB,QAAQ,CAACiB,gBAAT,CAA0BF,OAAO,CAACG,QAAlC,CAAxB;AACA,QAAMC,SAAS,GAAG;AACdC,IAAAA,MAAM,EAAEN,SADM;AAEdO,IAAAA,MAAM,EAAEL,SAAS,CAACK;AAFJ,GAAlB;AAIA,QAAMrB,QAAQ,CAACsB,gBAAT,CAA0BP,OAAO,CAACG,QAAlC,EAA4CC,SAA5C,CAAN;AACA,SAAOA,SAAP;AACH,CAdiB,CAAlB","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst command_1 = require(\"../command\");\nconst requireDatabaseInstance_1 = require(\"../requireDatabaseInstance\");\nconst requirePermissions_1 = require(\"../requirePermissions\");\nconst metadata = require(\"../database/metadata\");\nconst types_1 = require(\"../emulator/types\");\nconst commandUtils_1 = require(\"../emulator/commandUtils\");\nexports.default = new command_1.Command(\"database:rules:release <rulesetId>\")\n    .description(\"mark a staged ruleset as the stable ruleset\")\n    .option(\"--instance <instance>\", \"use the database <instance>.firebaseio.com (if omitted, uses default database instance)\")\n    .before(requirePermissions_1.requirePermissions, [\"firebasedatabase.instances.update\"])\n    .before(requireDatabaseInstance_1.requireDatabaseInstance)\n    .before(commandUtils_1.warnEmulatorNotSupported, types_1.Emulators.DATABASE)\n    .action(async (rulesetId, options) => {\n    const oldLabels = await metadata.getRulesetLabels(options.instance);\n    const newLabels = {\n        stable: rulesetId,\n        canary: oldLabels.canary,\n    };\n    await metadata.setRulesetLabels(options.instance, newLabels);\n    return newLabels;\n});\n"]},"metadata":{},"sourceType":"script"}