{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nconst rcGet = require(\"../remoteconfig/get\");\n\nconst command_1 = require(\"../command\");\n\nconst requireAuth_1 = require(\"../requireAuth\");\n\nconst logger_1 = require(\"../logger\");\n\nconst projectUtils_1 = require(\"../projectUtils\");\n\nconst requirePermissions_1 = require(\"../requirePermissions\");\n\nconst get_1 = require(\"../remoteconfig/get\");\n\nconst utils = require(\"../utils\");\n\nconst Table = require(\"cli-table\");\n\nconst fs = require(\"fs\");\n\nconst util = require(\"util\");\n\nconst tableHead = [\"Entry Name\", \"Value\"];\nconst MAX_DISPLAY_ITEMS = 20;\n\nfunction checkValidNumber(versionNumber) {\n  if (typeof Number(versionNumber) == \"number\") {\n    return versionNumber;\n  }\n\n  return \"null\";\n}\n\nmodule.exports = new command_1.Command(\"remoteconfig:get\").description(\"get a Firebase project's Remote Config template\").option(\"-v, --version-number <versionNumber>\", \"grabs the specified version of the template\").option(\"-o, --output [filename]\", \"write config output to a filename (if omitted, will use the default file path)\").before(requireAuth_1.requireAuth).before(requirePermissions_1.requirePermissions, [\"cloudconfig.configs.get\"]).action(async options => {\n  utils.assertIsString(options.versionNumber);\n  const template = await rcGet.getTemplate(projectUtils_1.needProjectId(options), checkValidNumber(options.versionNumber));\n  const table = new Table({\n    head: tableHead,\n    style: {\n      head: [\"green\"]\n    }\n  });\n\n  if (template.conditions) {\n    let updatedConditions = template.conditions.map(condition => condition.name).slice(0, MAX_DISPLAY_ITEMS).join(\"\\n\");\n\n    if (template.conditions.length > MAX_DISPLAY_ITEMS) {\n      updatedConditions += \"+more... \\n\";\n    }\n\n    table.push([\"conditions\", updatedConditions]);\n  }\n\n  const updatedParameters = get_1.parseTemplateForTable(template.parameters);\n  table.push([\"parameters\", updatedParameters]);\n  const updatedParameterGroups = get_1.parseTemplateForTable(template.parameterGroups);\n  table.push([\"parameterGroups\", updatedParameterGroups]);\n  table.push([\"version\", util.inspect(template.version, {\n    showHidden: false,\n    depth: null\n  })]);\n  const fileOut = !!options.output;\n\n  if (fileOut) {\n    const shouldUseDefaultFilename = options.output === true || options.output === \"\";\n    let filename = undefined;\n\n    if (shouldUseDefaultFilename) {\n      filename = options.config.src.remoteconfig.template;\n    } else {\n      utils.assertIsString(options.output);\n      filename = options.output;\n    }\n\n    const outTemplate = Object.assign({}, template);\n    delete outTemplate.version;\n    fs.writeFileSync(filename, JSON.stringify(outTemplate, null, 2));\n  } else {\n    logger_1.logger.info(table.toString());\n  }\n\n  return template;\n});","map":{"version":3,"sources":["/home/dev/Documentos/Projects/github-clone/node_modules/firebase-tools/lib/commands/remoteconfig-get.js"],"names":["Object","defineProperty","exports","value","rcGet","require","command_1","requireAuth_1","logger_1","projectUtils_1","requirePermissions_1","get_1","utils","Table","fs","util","tableHead","MAX_DISPLAY_ITEMS","checkValidNumber","versionNumber","Number","module","Command","description","option","before","requireAuth","requirePermissions","action","options","assertIsString","template","getTemplate","needProjectId","table","head","style","conditions","updatedConditions","map","condition","name","slice","join","length","push","updatedParameters","parseTemplateForTable","parameters","updatedParameterGroups","parameterGroups","inspect","version","showHidden","depth","fileOut","output","shouldUseDefaultFilename","filename","undefined","config","src","remoteconfig","outTemplate","assign","writeFileSync","JSON","stringify","logger","info","toString"],"mappings":"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","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst rcGet = require(\"../remoteconfig/get\");\nconst command_1 = require(\"../command\");\nconst requireAuth_1 = require(\"../requireAuth\");\nconst logger_1 = require(\"../logger\");\nconst projectUtils_1 = require(\"../projectUtils\");\nconst requirePermissions_1 = require(\"../requirePermissions\");\nconst get_1 = require(\"../remoteconfig/get\");\nconst utils = require(\"../utils\");\nconst Table = require(\"cli-table\");\nconst fs = require(\"fs\");\nconst util = require(\"util\");\nconst tableHead = [\"Entry Name\", \"Value\"];\nconst MAX_DISPLAY_ITEMS = 20;\nfunction checkValidNumber(versionNumber) {\n    if (typeof Number(versionNumber) == \"number\") {\n        return versionNumber;\n    }\n    return \"null\";\n}\nmodule.exports = new command_1.Command(\"remoteconfig:get\")\n    .description(\"get a Firebase project's Remote Config template\")\n    .option(\"-v, --version-number <versionNumber>\", \"grabs the specified version of the template\")\n    .option(\"-o, --output [filename]\", \"write config output to a filename (if omitted, will use the default file path)\")\n    .before(requireAuth_1.requireAuth)\n    .before(requirePermissions_1.requirePermissions, [\"cloudconfig.configs.get\"])\n    .action(async (options) => {\n    utils.assertIsString(options.versionNumber);\n    const template = await rcGet.getTemplate(projectUtils_1.needProjectId(options), checkValidNumber(options.versionNumber));\n    const table = new Table({ head: tableHead, style: { head: [\"green\"] } });\n    if (template.conditions) {\n        let updatedConditions = template.conditions\n            .map((condition) => condition.name)\n            .slice(0, MAX_DISPLAY_ITEMS)\n            .join(\"\\n\");\n        if (template.conditions.length > MAX_DISPLAY_ITEMS) {\n            updatedConditions += \"+more... \\n\";\n        }\n        table.push([\"conditions\", updatedConditions]);\n    }\n    const updatedParameters = get_1.parseTemplateForTable(template.parameters);\n    table.push([\"parameters\", updatedParameters]);\n    const updatedParameterGroups = get_1.parseTemplateForTable(template.parameterGroups);\n    table.push([\"parameterGroups\", updatedParameterGroups]);\n    table.push([\"version\", util.inspect(template.version, { showHidden: false, depth: null })]);\n    const fileOut = !!options.output;\n    if (fileOut) {\n        const shouldUseDefaultFilename = options.output === true || options.output === \"\";\n        let filename = undefined;\n        if (shouldUseDefaultFilename) {\n            filename = options.config.src.remoteconfig.template;\n        }\n        else {\n            utils.assertIsString(options.output);\n            filename = options.output;\n        }\n        const outTemplate = Object.assign({}, template);\n        delete outTemplate.version;\n        fs.writeFileSync(filename, JSON.stringify(outTemplate, null, 2));\n    }\n    else {\n        logger_1.logger.info(table.toString());\n    }\n    return template;\n});\n"]},"metadata":{},"sourceType":"script"}