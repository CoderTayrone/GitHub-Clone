{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Queue = void 0;\n\nconst throttler_1 = require(\"./throttler\");\n\nclass Queue extends throttler_1.Throttler {\n  constructor(options) {\n    super(options);\n    this.cursor = 0;\n    this.name = this.name || \"queue\";\n  }\n\n  hasWaitingTask() {\n    return this.cursor !== this.total;\n  }\n\n  nextWaitingTaskIndex() {\n    if (this.cursor >= this.total) {\n      throw new Error(\"There is no more task in queue\");\n    }\n\n    this.cursor++;\n    return this.cursor - 1;\n  }\n\n}\n\nexports.Queue = Queue;\nexports.default = Queue;","map":{"version":3,"sources":["/home/dev/Documentos/Projects/github-clone/node_modules/firebase-tools/lib/throttler/queue.js"],"names":["Object","defineProperty","exports","value","Queue","throttler_1","require","Throttler","constructor","options","cursor","name","hasWaitingTask","total","nextWaitingTaskIndex","Error","default"],"mappings":"AAAA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;AACAD,OAAO,CAACE,KAAR,GAAgB,KAAK,CAArB;;AACA,MAAMC,WAAW,GAAGC,OAAO,CAAC,aAAD,CAA3B;;AACA,MAAMF,KAAN,SAAoBC,WAAW,CAACE,SAAhC,CAA0C;AACtCC,EAAAA,WAAW,CAACC,OAAD,EAAU;AACjB,UAAMA,OAAN;AACA,SAAKC,MAAL,GAAc,CAAd;AACA,SAAKC,IAAL,GAAY,KAAKA,IAAL,IAAa,OAAzB;AACH;;AACDC,EAAAA,cAAc,GAAG;AACb,WAAO,KAAKF,MAAL,KAAgB,KAAKG,KAA5B;AACH;;AACDC,EAAAA,oBAAoB,GAAG;AACnB,QAAI,KAAKJ,MAAL,IAAe,KAAKG,KAAxB,EAA+B;AAC3B,YAAM,IAAIE,KAAJ,CAAU,gCAAV,CAAN;AACH;;AACD,SAAKL,MAAL;AACA,WAAO,KAAKA,MAAL,GAAc,CAArB;AACH;;AAfqC;;AAiB1CR,OAAO,CAACE,KAAR,GAAgBA,KAAhB;AACAF,OAAO,CAACc,OAAR,GAAkBZ,KAAlB","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Queue = void 0;\nconst throttler_1 = require(\"./throttler\");\nclass Queue extends throttler_1.Throttler {\n    constructor(options) {\n        super(options);\n        this.cursor = 0;\n        this.name = this.name || \"queue\";\n    }\n    hasWaitingTask() {\n        return this.cursor !== this.total;\n    }\n    nextWaitingTaskIndex() {\n        if (this.cursor >= this.total) {\n            throw new Error(\"There is no more task in queue\");\n        }\n        this.cursor++;\n        return this.cursor - 1;\n    }\n}\nexports.Queue = Queue;\nexports.default = Queue;\n"]},"metadata":{},"sourceType":"script"}