{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nfunction isGenerator(fn) {\n  return fn && fn.next && fn.throw;\n}\n\nfunction isGeneratorFunction(fn) {\n  return typeof fn == 'function' && fn.constructor.name == 'GeneratorFunction';\n}\n\nfunction createDeferred() {\n  let r;\n  let j;\n  const promise = new Promise((resolve, reject) => {\n    r = resolve;\n    j = reject;\n  });\n\n  if (!r || !j) {\n    throw new Error('Creating Deferred failed');\n  }\n\n  return {\n    promise,\n    resolve: r,\n    reject: j\n  };\n}\n\nfunction generatorFnToPromise(generatorFunction) {\n  if (!isGeneratorFunction(generatorFunction)) {\n    if (typeof generatorFunction === 'function') {\n      return function (...args) {\n        return Promise.resolve(true).then(() => {\n          return generatorFunction.apply(this, args);\n        });\n      };\n    }\n\n    throw new Error('The given function must be a generator function');\n  }\n\n  return function (...args) {\n    const generator = generatorFunction.apply(this, args);\n    return generatorToPromise(generator);\n  };\n}\n\nexports.default = generatorFnToPromise;\n\nfunction generatorToPromise(generator) {\n  const deferred = createDeferred();\n\n  (function next(err, value) {\n    let genState = null;\n\n    try {\n      if (err) {\n        genState = generator.throw(err);\n      } else {\n        genState = generator.next(value);\n      }\n    } catch (e) {\n      genState = {\n        value: Promise.reject(e),\n        done: true\n      };\n    }\n\n    if (isGenerator(genState.value)) {\n      genState.value = generatorToPromise(genState.value);\n    }\n\n    if (genState.done) {\n      deferred.resolve(genState.value);\n    } else {\n      Promise.resolve(genState.value).then(promiseResult => next(null, promiseResult)).catch(err => next(err));\n    }\n  })();\n\n  return deferred.promise;\n}","map":{"version":3,"sources":["../../src/generator-to-promise.ts"],"names":[],"mappings":";;;;;;AAMA,SAAS,WAAT,CAAqB,EAArB,EAA4B;AAC3B,SAAO,EAAE,IAAI,EAAE,CAAC,IAAT,IAAiB,EAAE,CAAC,KAA3B;AACA;;AAED,SAAS,mBAAT,CAA6B,EAA7B,EAAoC;AACnC,SACC,OAAO,EAAP,IAAa,UAAb,IAA2B,EAAE,CAAC,WAAH,CAAe,IAAf,IAAuB,mBADnD;AAGA;;AAED,SAAS,cAAT,GAAuB;AACtB,MAAI,CAAJ;AACA,MAAI,CAAJ;AACA,QAAM,OAAO,GAAG,IAAI,OAAJ,CACf,CACC,OADD,EAEC,MAFD,KAGU;AACT,IAAA,CAAC,GAAG,OAAJ;AACA,IAAA,CAAC,GAAG,MAAJ;AACA,GAPc,CAAhB;;AASA,MAAI,CAAC,CAAD,IAAM,CAAC,CAAX,EAAc;AACb,UAAM,IAAI,KAAJ,CAAU,0BAAV,CAAN;AACA;;AACD,SAAO;AAAE,IAAA,OAAF;AAAW,IAAA,OAAO,EAAE,CAApB;AAAuB,IAAA,MAAM,EAAE;AAA/B,GAAP;AACA;;AAED,SAAwB,oBAAxB,CACC,iBADD,EACuB;AAEtB,MAAI,CAAC,mBAAmB,CAAC,iBAAD,CAAxB,EAA6C;AAC5C,QAAI,OAAO,iBAAP,KAA6B,UAAjC,EAA6C;AAC5C,aAAO,UAAoB,GAAG,IAAvB,EAAkC;AACxC,eAAO,OAAO,CAAC,OAAR,CAAgB,IAAhB,EAAsB,IAAtB,CAA2B,MAAK;AACtC,iBAAO,iBAAiB,CAAC,KAAlB,CAAwB,IAAxB,EAA8B,IAA9B,CAAP;AACA,SAFM,CAAP;AAGA,OAJD;AAKA;;AACD,UAAM,IAAI,KAAJ,CAAU,iDAAV,CAAN;AACA;;AAED,SAAO,UAAoB,GAAG,IAAvB,EAAkC;AACxC,UAAM,SAAS,GAAG,iBAAiB,CAAC,KAAlB,CAAwB,IAAxB,EAA8B,IAA9B,CAAlB;AACA,WAAO,kBAAkB,CAAC,SAAD,CAAzB;AACA,GAHD;AAIA;;AAlBD,OAAA,CAAA,OAAA,GAAA,oBAAA;;AAoBA,SAAS,kBAAT,CAA0C,SAA1C,EAAwD;AACvD,QAAM,QAAQ,GAAG,cAAc,EAA/B;;AACA,GAAC,SAAS,IAAT,CAAc,GAAd,EAAkC,KAAlC,EAA6C;AAC7C,QAAI,QAAQ,GAAG,IAAf;;AACA,QAAI;AACH,UAAI,GAAJ,EAAS;AACR,QAAA,QAAQ,GAAG,SAAS,CAAC,KAAV,CAAgB,GAAhB,CAAX;AACA,OAFD,MAEO;AACN,QAAA,QAAQ,GAAG,SAAS,CAAC,IAAV,CAAe,KAAf,CAAX;AACA;AACD,KAND,CAME,OAAO,CAAP,EAAU;AACX,MAAA,QAAQ,GAAG;AAAE,QAAA,KAAK,EAAE,OAAO,CAAC,MAAR,CAAe,CAAf,CAAT;AAA4B,QAAA,IAAI,EAAE;AAAlC,OAAX;AACA;;AAED,QAAI,WAAW,CAAC,QAAQ,CAAC,KAAV,CAAf,EAAiC;AAChC,MAAA,QAAQ,CAAC,KAAT,GAAiB,kBAAkB,CAAC,QAAQ,CAAC,KAAV,CAAnC;AACA;;AAED,QAAI,QAAQ,CAAC,IAAb,EAAmB;AAClB,MAAA,QAAQ,CAAC,OAAT,CAAiB,QAAQ,CAAC,KAA1B;AACA,KAFD,MAEO;AACN,MAAA,OAAO,CAAC,OAAR,CAAgB,QAAQ,CAAC,KAAzB,EACE,IADF,CACO,aAAa,IAAI,IAAI,CAAC,IAAD,EAAO,aAAP,CAD5B,EAEE,KAFF,CAEQ,GAAG,IAAI,IAAI,CAAC,GAAD,CAFnB;AAGA;AACD,GAvBD;;AAyBA,SAAO,QAAQ,CAAC,OAAhB;AACA","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction isGenerator(fn) {\n    return fn && fn.next && fn.throw;\n}\nfunction isGeneratorFunction(fn) {\n    return (typeof fn == 'function' && fn.constructor.name == 'GeneratorFunction');\n}\nfunction createDeferred() {\n    let r;\n    let j;\n    const promise = new Promise((resolve, reject) => {\n        r = resolve;\n        j = reject;\n    });\n    if (!r || !j) {\n        throw new Error('Creating Deferred failed');\n    }\n    return { promise, resolve: r, reject: j };\n}\nfunction generatorFnToPromise(generatorFunction) {\n    if (!isGeneratorFunction(generatorFunction)) {\n        if (typeof generatorFunction === 'function') {\n            return function (...args) {\n                return Promise.resolve(true).then(() => {\n                    return generatorFunction.apply(this, args);\n                });\n            };\n        }\n        throw new Error('The given function must be a generator function');\n    }\n    return function (...args) {\n        const generator = generatorFunction.apply(this, args);\n        return generatorToPromise(generator);\n    };\n}\nexports.default = generatorFnToPromise;\nfunction generatorToPromise(generator) {\n    const deferred = createDeferred();\n    (function next(err, value) {\n        let genState = null;\n        try {\n            if (err) {\n                genState = generator.throw(err);\n            }\n            else {\n                genState = generator.next(value);\n            }\n        }\n        catch (e) {\n            genState = { value: Promise.reject(e), done: true };\n        }\n        if (isGenerator(genState.value)) {\n            genState.value = generatorToPromise(genState.value);\n        }\n        if (genState.done) {\n            deferred.resolve(genState.value);\n        }\n        else {\n            Promise.resolve(genState.value)\n                .then(promiseResult => next(null, promiseResult))\n                .catch(err => next(err));\n        }\n    })();\n    return deferred.promise;\n}\n//# sourceMappingURL=generator-to-promise.js.map"]},"metadata":{},"sourceType":"script"}