{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.toSerializedDate = exports.CloudStorageObjectMetadata = exports.CloudStorageObjectAccessControlMetadata = exports.CloudStorageBucketMetadata = exports.OutgoingFirebaseMetadata = exports.StoredFileMetadata = void 0;\n\nconst uuid = require(\"uuid\");\n\nconst crypto = require(\"crypto\");\n\nconst registry_1 = require(\"../registry\");\n\nconst types_1 = require(\"../types\");\n\nconst crc_1 = require(\"./crc\");\n\nclass StoredFileMetadata {\n  constructor(opts, _cloudFunctions, bytes, incomingMetadata) {\n    this._cloudFunctions = _cloudFunctions;\n    this.name = opts.name;\n    this.bucket = opts.bucket;\n    this.contentType = opts.contentType;\n    this.metageneration = opts.metageneration || 1;\n    this.generation = opts.generation || Date.now();\n    this.storageClass = opts.storageClass || \"STANDARD\";\n    this.etag = opts.etag || \"someETag\";\n    this.contentDisposition = opts.contentDisposition || \"inline\";\n    this.cacheControl = opts.cacheControl;\n    this.contentLanguage = opts.contentLanguage;\n    this.customTime = opts.customTime;\n    this.contentEncoding = opts.contentEncoding || \"identity\";\n    this.customMetadata = opts.customMetadata;\n    this.downloadTokens = opts.downloadTokens || [];\n    this.timeCreated = opts.timeCreated ? new Date(opts.timeCreated) : new Date();\n    this.updated = opts.updated ? new Date(opts.updated) : this.timeCreated;\n\n    if (bytes) {\n      this.size = bytes.byteLength;\n      this.md5Hash = generateMd5Hash(bytes);\n      this.crc32c = `${crc_1.crc32c(bytes)}`;\n    } else if (opts.size !== undefined && opts.md5Hash && opts.crc32c) {\n      this.size = opts.size;\n      this.md5Hash = opts.md5Hash;\n      this.crc32c = opts.crc32c;\n    } else {\n      throw new Error(\"Must pass bytes array or opts object with size, md5hash, and crc32c\");\n    }\n\n    if (incomingMetadata) {\n      this.update(incomingMetadata);\n    }\n\n    this.deleteFieldsSetAsNull();\n    this.setDownloadTokensFromCustomMetadata();\n  }\n\n  asRulesResource(proposedChanges) {\n    let rulesResource = {\n      name: this.name,\n      bucket: this.bucket,\n      generation: this.generation,\n      metageneration: this.metageneration,\n      size: this.size,\n      timeCreated: this.timeCreated,\n      updated: this.updated,\n      md5Hash: this.md5Hash,\n      crc32c: this.crc32c,\n      etag: this.etag,\n      contentDisposition: this.contentDisposition,\n      contentEncoding: this.contentEncoding,\n      contentType: this.contentType,\n      metadata: this.customMetadata || {}\n    };\n\n    if (proposedChanges) {\n      if (proposedChanges.md5Hash !== rulesResource.md5Hash) {\n        rulesResource.generation = Date.now();\n        rulesResource.metageneration = 1;\n        rulesResource.timeCreated = new Date();\n        rulesResource.updated = rulesResource.timeCreated;\n      } else {\n        rulesResource.metageneration++;\n      }\n\n      rulesResource = Object.assign(Object.assign({}, rulesResource), proposedChanges);\n    }\n\n    return rulesResource;\n  }\n\n  setDownloadTokensFromCustomMetadata() {\n    if (!this.customMetadata) {\n      return;\n    }\n\n    if (this.customMetadata.firebaseStorageDownloadTokens) {\n      this.downloadTokens = [...this.downloadTokens, ...this.customMetadata.firebaseStorageDownloadTokens.split(\",\")];\n      delete this.customMetadata.firebaseStorageDownloadTokens;\n    }\n  }\n\n  deleteFieldsSetAsNull() {\n    const deletableFields = [\"contentDisposition\", \"contentType\", \"contentLanguage\", \"contentEncoding\", \"cacheControl\"];\n    deletableFields.map(field => {\n      if (this[field] === null) {\n        delete this[field];\n      }\n    });\n\n    if (this.customMetadata) {\n      Object.keys(this.customMetadata).map(key => {\n        if (!this.customMetadata) return;\n\n        if (this.customMetadata[key] === null) {\n          delete this.customMetadata[key];\n        }\n      });\n    }\n  }\n\n  update(incoming) {\n    if (incoming.contentDisposition) {\n      this.contentDisposition = incoming.contentDisposition;\n    }\n\n    if (incoming.contentType) {\n      this.contentType = incoming.contentType;\n    }\n\n    if (incoming.metadata) {\n      this.customMetadata = incoming.metadata;\n    }\n\n    if (incoming.contentLanguage) {\n      this.contentLanguage = incoming.contentLanguage;\n    }\n\n    if (incoming.contentEncoding) {\n      this.contentEncoding = incoming.contentEncoding;\n    }\n\n    if (this.generation) {\n      this.generation++;\n    }\n\n    this.updated = new Date();\n\n    if (incoming.cacheControl) {\n      this.cacheControl = incoming.cacheControl;\n    }\n\n    this.setDownloadTokensFromCustomMetadata();\n    this.deleteFieldsSetAsNull();\n\n    this._cloudFunctions.dispatch(\"metadataUpdate\", new CloudStorageObjectMetadata(this));\n  }\n\n  addDownloadToken() {\n    if (!this.downloadTokens.length) {\n      this.downloadTokens.push(uuid.v4());\n      return;\n    }\n\n    this.downloadTokens = [...this.downloadTokens, uuid.v4()];\n    this.update({});\n  }\n\n  deleteDownloadToken(token) {\n    if (!this.downloadTokens.length) {\n      return;\n    }\n\n    const remainingTokens = this.downloadTokens.filter(t => t != token);\n    this.downloadTokens = remainingTokens;\n\n    if (remainingTokens.length == 0) {\n      this.addDownloadToken();\n    }\n\n    this.update({});\n  }\n\n  static fromJSON(data, cloudFunctions) {\n    const opts = JSON.parse(data);\n    return new StoredFileMetadata(opts, cloudFunctions);\n  }\n\n  static toJSON(metadata) {\n    return JSON.stringify(metadata, (key, value) => {\n      if (key.startsWith(\"_\")) {\n        return undefined;\n      }\n\n      return value;\n    }, 2);\n  }\n\n}\n\nexports.StoredFileMetadata = StoredFileMetadata;\n\nclass OutgoingFirebaseMetadata {\n  constructor(md) {\n    this.name = md.name;\n    this.bucket = md.bucket;\n    this.generation = md.generation.toString();\n    this.metageneration = md.metageneration.toString();\n    this.contentType = md.contentType;\n    this.timeCreated = toSerializedDate(md.timeCreated);\n    this.updated = toSerializedDate(md.updated);\n    this.storageClass = md.storageClass;\n    this.size = md.size.toString();\n    this.md5Hash = md.md5Hash;\n    this.crc32c = md.crc32c;\n    this.etag = md.etag;\n    this.downloadTokens = md.downloadTokens.join(\",\");\n    this.contentEncoding = md.contentEncoding;\n    this.contentDisposition = md.contentDisposition;\n    this.metadata = md.customMetadata;\n    this.contentLanguage = md.contentLanguage;\n    this.cacheControl = md.cacheControl;\n  }\n\n}\n\nexports.OutgoingFirebaseMetadata = OutgoingFirebaseMetadata;\n\nclass CloudStorageBucketMetadata {\n  constructor(id) {\n    var _a, _b;\n\n    this.kind = \"#storage/bucket\";\n    this.name = id;\n    this.id = id;\n    this.selfLink = `http://${(_a = registry_1.EmulatorRegistry.getInfo(types_1.Emulators.STORAGE)) === null || _a === void 0 ? void 0 : _a.host}:${(_b = registry_1.EmulatorRegistry.getInfo(types_1.Emulators.STORAGE)) === null || _b === void 0 ? void 0 : _b.port}/v1/b/${this.id}`;\n    this.timeCreated = toSerializedDate(new Date());\n    this.updated = this.timeCreated;\n    this.projectNumber = \"000000000000\";\n    this.metageneration = \"1\";\n    this.location = \"US\";\n    this.storageClass = \"STANDARD\";\n    this.etag = \"====\";\n    this.locationType = \"mutli-region\";\n  }\n\n}\n\nexports.CloudStorageBucketMetadata = CloudStorageBucketMetadata;\n\nclass CloudStorageObjectAccessControlMetadata {\n  constructor(object, generation, selfLink, id, role, entity, bucket, etag) {\n    this.object = object;\n    this.generation = generation;\n    this.selfLink = selfLink;\n    this.id = id;\n    this.role = role;\n    this.entity = entity;\n    this.bucket = bucket;\n    this.etag = etag;\n    this.kind = \"storage#objectAccessControl\";\n  }\n\n}\n\nexports.CloudStorageObjectAccessControlMetadata = CloudStorageObjectAccessControlMetadata;\n\nclass CloudStorageObjectMetadata {\n  constructor(md) {\n    var _a, _b, _c, _d;\n\n    this.kind = \"#storage#object\";\n    this.name = md.name;\n    this.bucket = md.bucket;\n    this.generation = md.generation.toString();\n    this.metageneration = md.metageneration.toString();\n    this.contentType = md.contentType;\n    this.timeCreated = toSerializedDate(md.timeCreated);\n    this.updated = toSerializedDate(md.updated);\n    this.storageClass = md.storageClass;\n    this.size = md.size.toString();\n    this.md5Hash = md.md5Hash;\n    this.etag = md.etag;\n    this.metadata = {};\n\n    if (Object.keys(md.customMetadata || {})) {\n      this.metadata = Object.assign(Object.assign({}, this.metadata), md.customMetadata);\n    }\n\n    if (md.downloadTokens.length) {\n      this.metadata = Object.assign(Object.assign({}, this.metadata), {\n        firebaseStorageDownloadTokens: md.downloadTokens.join(\",\")\n      });\n    }\n\n    if (!Object.keys(this.metadata).length) {\n      delete this.metadata;\n    }\n\n    if (md.contentLanguage) {\n      this.contentLanguage = md.contentLanguage;\n    }\n\n    if (md.cacheControl) {\n      this.cacheControl = md.cacheControl;\n    }\n\n    if (md.customTime) {\n      this.customTime = toSerializedDate(md.customTime);\n    }\n\n    this.crc32c = \"----\" + Buffer.from([md.crc32c]).toString(\"base64\");\n    this.timeStorageClassUpdated = toSerializedDate(md.timeCreated);\n    this.id = `${md.bucket}/${md.name}/${md.generation}`;\n    this.selfLink = `http://${(_a = registry_1.EmulatorRegistry.getInfo(types_1.Emulators.STORAGE)) === null || _a === void 0 ? void 0 : _a.host}:${(_b = registry_1.EmulatorRegistry.getInfo(types_1.Emulators.STORAGE)) === null || _b === void 0 ? void 0 : _b.port}/storage/v1/b/${md.bucket}/o/${encodeURIComponent(md.name)}`;\n    this.mediaLink = `http://${(_c = registry_1.EmulatorRegistry.getInfo(types_1.Emulators.STORAGE)) === null || _c === void 0 ? void 0 : _c.host}:${(_d = registry_1.EmulatorRegistry.getInfo(types_1.Emulators.STORAGE)) === null || _d === void 0 ? void 0 : _d.port}/download/storage/v1/b/${md.bucket}/o/${encodeURIComponent(md.name)}?generation=${md.generation}&alt=media`;\n  }\n\n}\n\nexports.CloudStorageObjectMetadata = CloudStorageObjectMetadata;\n\nfunction toSerializedDate(d) {\n  const day = `${d.getFullYear()}-${(d.getMonth() + 1).toString().padStart(2, \"0\")}-${d.getDate().toString().padStart(2, \"0\")}`;\n  const time = `${d.getHours().toString().padStart(2, \"0\")}:${d.getMinutes().toString().padStart(2, \"0\")}:${d.getSeconds().toString().padStart(2, \"0\")}.${d.getMilliseconds().toString().padStart(3, \"0\")}`;\n  return `${day}T${time}Z`;\n}\n\nexports.toSerializedDate = toSerializedDate;\n\nfunction generateMd5Hash(bytes) {\n  const hash = crypto.createHash(\"md5\");\n  hash.update(bytes);\n  return hash.digest(\"base64\");\n}","map":{"version":3,"sources":["/home/dev/Documentos/Projects/github-clone/node_modules/firebase-tools/lib/emulator/storage/metadata.js"],"names":["Object","defineProperty","exports","value","toSerializedDate","CloudStorageObjectMetadata","CloudStorageObjectAccessControlMetadata","CloudStorageBucketMetadata","OutgoingFirebaseMetadata","StoredFileMetadata","uuid","require","crypto","registry_1","types_1","crc_1","constructor","opts","_cloudFunctions","bytes","incomingMetadata","name","bucket","contentType","metageneration","generation","Date","now","storageClass","etag","contentDisposition","cacheControl","contentLanguage","customTime","contentEncoding","customMetadata","downloadTokens","timeCreated","updated","size","byteLength","md5Hash","generateMd5Hash","crc32c","undefined","Error","update","deleteFieldsSetAsNull","setDownloadTokensFromCustomMetadata","asRulesResource","proposedChanges","rulesResource","metadata","assign","firebaseStorageDownloadTokens","split","deletableFields","map","field","keys","key","incoming","dispatch","addDownloadToken","length","push","v4","deleteDownloadToken","token","remainingTokens","filter","t","fromJSON","data","cloudFunctions","JSON","parse","toJSON","stringify","startsWith","md","toString","join","id","_a","_b","kind","selfLink","EmulatorRegistry","getInfo","Emulators","STORAGE","host","port","projectNumber","location","locationType","object","role","entity","_c","_d","Buffer","from","timeStorageClassUpdated","encodeURIComponent","mediaLink","d","day","getFullYear","getMonth","padStart","getDate","time","getHours","getMinutes","getSeconds","getMilliseconds","hash","createHash","digest"],"mappings":"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","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.toSerializedDate = exports.CloudStorageObjectMetadata = exports.CloudStorageObjectAccessControlMetadata = exports.CloudStorageBucketMetadata = exports.OutgoingFirebaseMetadata = exports.StoredFileMetadata = void 0;\nconst uuid = require(\"uuid\");\nconst crypto = require(\"crypto\");\nconst registry_1 = require(\"../registry\");\nconst types_1 = require(\"../types\");\nconst crc_1 = require(\"./crc\");\nclass StoredFileMetadata {\n    constructor(opts, _cloudFunctions, bytes, incomingMetadata) {\n        this._cloudFunctions = _cloudFunctions;\n        this.name = opts.name;\n        this.bucket = opts.bucket;\n        this.contentType = opts.contentType;\n        this.metageneration = opts.metageneration || 1;\n        this.generation = opts.generation || Date.now();\n        this.storageClass = opts.storageClass || \"STANDARD\";\n        this.etag = opts.etag || \"someETag\";\n        this.contentDisposition = opts.contentDisposition || \"inline\";\n        this.cacheControl = opts.cacheControl;\n        this.contentLanguage = opts.contentLanguage;\n        this.customTime = opts.customTime;\n        this.contentEncoding = opts.contentEncoding || \"identity\";\n        this.customMetadata = opts.customMetadata;\n        this.downloadTokens = opts.downloadTokens || [];\n        this.timeCreated = opts.timeCreated ? new Date(opts.timeCreated) : new Date();\n        this.updated = opts.updated ? new Date(opts.updated) : this.timeCreated;\n        if (bytes) {\n            this.size = bytes.byteLength;\n            this.md5Hash = generateMd5Hash(bytes);\n            this.crc32c = `${crc_1.crc32c(bytes)}`;\n        }\n        else if (opts.size !== undefined && opts.md5Hash && opts.crc32c) {\n            this.size = opts.size;\n            this.md5Hash = opts.md5Hash;\n            this.crc32c = opts.crc32c;\n        }\n        else {\n            throw new Error(\"Must pass bytes array or opts object with size, md5hash, and crc32c\");\n        }\n        if (incomingMetadata) {\n            this.update(incomingMetadata);\n        }\n        this.deleteFieldsSetAsNull();\n        this.setDownloadTokensFromCustomMetadata();\n    }\n    asRulesResource(proposedChanges) {\n        let rulesResource = {\n            name: this.name,\n            bucket: this.bucket,\n            generation: this.generation,\n            metageneration: this.metageneration,\n            size: this.size,\n            timeCreated: this.timeCreated,\n            updated: this.updated,\n            md5Hash: this.md5Hash,\n            crc32c: this.crc32c,\n            etag: this.etag,\n            contentDisposition: this.contentDisposition,\n            contentEncoding: this.contentEncoding,\n            contentType: this.contentType,\n            metadata: this.customMetadata || {},\n        };\n        if (proposedChanges) {\n            if (proposedChanges.md5Hash !== rulesResource.md5Hash) {\n                rulesResource.generation = Date.now();\n                rulesResource.metageneration = 1;\n                rulesResource.timeCreated = new Date();\n                rulesResource.updated = rulesResource.timeCreated;\n            }\n            else {\n                rulesResource.metageneration++;\n            }\n            rulesResource = Object.assign(Object.assign({}, rulesResource), proposedChanges);\n        }\n        return rulesResource;\n    }\n    setDownloadTokensFromCustomMetadata() {\n        if (!this.customMetadata) {\n            return;\n        }\n        if (this.customMetadata.firebaseStorageDownloadTokens) {\n            this.downloadTokens = [\n                ...this.downloadTokens,\n                ...this.customMetadata.firebaseStorageDownloadTokens.split(\",\"),\n            ];\n            delete this.customMetadata.firebaseStorageDownloadTokens;\n        }\n    }\n    deleteFieldsSetAsNull() {\n        const deletableFields = [\n            \"contentDisposition\",\n            \"contentType\",\n            \"contentLanguage\",\n            \"contentEncoding\",\n            \"cacheControl\",\n        ];\n        deletableFields.map((field) => {\n            if (this[field] === null) {\n                delete this[field];\n            }\n        });\n        if (this.customMetadata) {\n            Object.keys(this.customMetadata).map((key) => {\n                if (!this.customMetadata)\n                    return;\n                if (this.customMetadata[key] === null) {\n                    delete this.customMetadata[key];\n                }\n            });\n        }\n    }\n    update(incoming) {\n        if (incoming.contentDisposition) {\n            this.contentDisposition = incoming.contentDisposition;\n        }\n        if (incoming.contentType) {\n            this.contentType = incoming.contentType;\n        }\n        if (incoming.metadata) {\n            this.customMetadata = incoming.metadata;\n        }\n        if (incoming.contentLanguage) {\n            this.contentLanguage = incoming.contentLanguage;\n        }\n        if (incoming.contentEncoding) {\n            this.contentEncoding = incoming.contentEncoding;\n        }\n        if (this.generation) {\n            this.generation++;\n        }\n        this.updated = new Date();\n        if (incoming.cacheControl) {\n            this.cacheControl = incoming.cacheControl;\n        }\n        this.setDownloadTokensFromCustomMetadata();\n        this.deleteFieldsSetAsNull();\n        this._cloudFunctions.dispatch(\"metadataUpdate\", new CloudStorageObjectMetadata(this));\n    }\n    addDownloadToken() {\n        if (!this.downloadTokens.length) {\n            this.downloadTokens.push(uuid.v4());\n            return;\n        }\n        this.downloadTokens = [...this.downloadTokens, uuid.v4()];\n        this.update({});\n    }\n    deleteDownloadToken(token) {\n        if (!this.downloadTokens.length) {\n            return;\n        }\n        const remainingTokens = this.downloadTokens.filter((t) => t != token);\n        this.downloadTokens = remainingTokens;\n        if (remainingTokens.length == 0) {\n            this.addDownloadToken();\n        }\n        this.update({});\n    }\n    static fromJSON(data, cloudFunctions) {\n        const opts = JSON.parse(data);\n        return new StoredFileMetadata(opts, cloudFunctions);\n    }\n    static toJSON(metadata) {\n        return JSON.stringify(metadata, (key, value) => {\n            if (key.startsWith(\"_\")) {\n                return undefined;\n            }\n            return value;\n        }, 2);\n    }\n}\nexports.StoredFileMetadata = StoredFileMetadata;\nclass OutgoingFirebaseMetadata {\n    constructor(md) {\n        this.name = md.name;\n        this.bucket = md.bucket;\n        this.generation = md.generation.toString();\n        this.metageneration = md.metageneration.toString();\n        this.contentType = md.contentType;\n        this.timeCreated = toSerializedDate(md.timeCreated);\n        this.updated = toSerializedDate(md.updated);\n        this.storageClass = md.storageClass;\n        this.size = md.size.toString();\n        this.md5Hash = md.md5Hash;\n        this.crc32c = md.crc32c;\n        this.etag = md.etag;\n        this.downloadTokens = md.downloadTokens.join(\",\");\n        this.contentEncoding = md.contentEncoding;\n        this.contentDisposition = md.contentDisposition;\n        this.metadata = md.customMetadata;\n        this.contentLanguage = md.contentLanguage;\n        this.cacheControl = md.cacheControl;\n    }\n}\nexports.OutgoingFirebaseMetadata = OutgoingFirebaseMetadata;\nclass CloudStorageBucketMetadata {\n    constructor(id) {\n        var _a, _b;\n        this.kind = \"#storage/bucket\";\n        this.name = id;\n        this.id = id;\n        this.selfLink = `http://${(_a = registry_1.EmulatorRegistry.getInfo(types_1.Emulators.STORAGE)) === null || _a === void 0 ? void 0 : _a.host}:${(_b = registry_1.EmulatorRegistry.getInfo(types_1.Emulators.STORAGE)) === null || _b === void 0 ? void 0 : _b.port}/v1/b/${this.id}`;\n        this.timeCreated = toSerializedDate(new Date());\n        this.updated = this.timeCreated;\n        this.projectNumber = \"000000000000\";\n        this.metageneration = \"1\";\n        this.location = \"US\";\n        this.storageClass = \"STANDARD\";\n        this.etag = \"====\";\n        this.locationType = \"mutli-region\";\n    }\n}\nexports.CloudStorageBucketMetadata = CloudStorageBucketMetadata;\nclass CloudStorageObjectAccessControlMetadata {\n    constructor(object, generation, selfLink, id, role, entity, bucket, etag) {\n        this.object = object;\n        this.generation = generation;\n        this.selfLink = selfLink;\n        this.id = id;\n        this.role = role;\n        this.entity = entity;\n        this.bucket = bucket;\n        this.etag = etag;\n        this.kind = \"storage#objectAccessControl\";\n    }\n}\nexports.CloudStorageObjectAccessControlMetadata = CloudStorageObjectAccessControlMetadata;\nclass CloudStorageObjectMetadata {\n    constructor(md) {\n        var _a, _b, _c, _d;\n        this.kind = \"#storage#object\";\n        this.name = md.name;\n        this.bucket = md.bucket;\n        this.generation = md.generation.toString();\n        this.metageneration = md.metageneration.toString();\n        this.contentType = md.contentType;\n        this.timeCreated = toSerializedDate(md.timeCreated);\n        this.updated = toSerializedDate(md.updated);\n        this.storageClass = md.storageClass;\n        this.size = md.size.toString();\n        this.md5Hash = md.md5Hash;\n        this.etag = md.etag;\n        this.metadata = {};\n        if (Object.keys(md.customMetadata || {})) {\n            this.metadata = Object.assign(Object.assign({}, this.metadata), md.customMetadata);\n        }\n        if (md.downloadTokens.length) {\n            this.metadata = Object.assign(Object.assign({}, this.metadata), { firebaseStorageDownloadTokens: md.downloadTokens.join(\",\") });\n        }\n        if (!Object.keys(this.metadata).length) {\n            delete this.metadata;\n        }\n        if (md.contentLanguage) {\n            this.contentLanguage = md.contentLanguage;\n        }\n        if (md.cacheControl) {\n            this.cacheControl = md.cacheControl;\n        }\n        if (md.customTime) {\n            this.customTime = toSerializedDate(md.customTime);\n        }\n        this.crc32c = \"----\" + Buffer.from([md.crc32c]).toString(\"base64\");\n        this.timeStorageClassUpdated = toSerializedDate(md.timeCreated);\n        this.id = `${md.bucket}/${md.name}/${md.generation}`;\n        this.selfLink = `http://${(_a = registry_1.EmulatorRegistry.getInfo(types_1.Emulators.STORAGE)) === null || _a === void 0 ? void 0 : _a.host}:${(_b = registry_1.EmulatorRegistry.getInfo(types_1.Emulators.STORAGE)) === null || _b === void 0 ? void 0 : _b.port}/storage/v1/b/${md.bucket}/o/${encodeURIComponent(md.name)}`;\n        this.mediaLink = `http://${(_c = registry_1.EmulatorRegistry.getInfo(types_1.Emulators.STORAGE)) === null || _c === void 0 ? void 0 : _c.host}:${(_d = registry_1.EmulatorRegistry.getInfo(types_1.Emulators.STORAGE)) === null || _d === void 0 ? void 0 : _d.port}/download/storage/v1/b/${md.bucket}/o/${encodeURIComponent(md.name)}?generation=${md.generation}&alt=media`;\n    }\n}\nexports.CloudStorageObjectMetadata = CloudStorageObjectMetadata;\nfunction toSerializedDate(d) {\n    const day = `${d.getFullYear()}-${(d.getMonth() + 1)\n        .toString()\n        .padStart(2, \"0\")}-${d.getDate().toString().padStart(2, \"0\")}`;\n    const time = `${d.getHours().toString().padStart(2, \"0\")}:${d\n        .getMinutes()\n        .toString()\n        .padStart(2, \"0\")}:${d\n        .getSeconds()\n        .toString()\n        .padStart(2, \"0\")}.${d.getMilliseconds().toString().padStart(3, \"0\")}`;\n    return `${day}T${time}Z`;\n}\nexports.toSerializedDate = toSerializedDate;\nfunction generateMd5Hash(bytes) {\n    const hash = crypto.createHash(\"md5\");\n    hash.update(bytes);\n    return hash.digest(\"base64\");\n}\n"]},"metadata":{},"sourceType":"script"}