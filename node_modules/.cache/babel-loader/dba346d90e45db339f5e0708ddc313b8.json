{"ast":null,"code":"\"use strict\";\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nconst promise_breaker_1 = __importDefault(require(\"promise-breaker\"));\n\nfunction callFn(plugin, fnName, param) {\n  const fnLength = plugin[fnName].length;\n\n  if (fnLength < 2) {\n    return plugin[fnName](param);\n  } else {\n    promise_breaker_1.default.call(done => plugin[fnName](param, done));\n  }\n}\n\nclass PluginsManager {\n  constructor(apiDoc, plugins) {\n    this._plugins = plugins.map(plugin => plugin.makeExegesisPlugin({\n      apiDoc\n    }));\n    this._preRoutingPlugins = this._plugins.filter(p => !!p.preRouting);\n    this._postRoutingPlugins = this._plugins.filter(p => !!p.postRouting);\n    this._postSecurityPlugins = this._plugins.filter(p => !!p.postSecurity);\n    this._postControllerPlugins = this._plugins.filter(p => !!p.postController);\n    this._postResponseValidation = this._plugins.filter(p => !!p.postResponseValidation);\n  }\n\n  preCompile(data) {\n    return __awaiter(this, void 0, void 0, function* () {\n      for (const plugin of this._plugins) {\n        if (plugin.preCompile) {\n          yield callFn(plugin, 'preCompile', data);\n        }\n      }\n    });\n  }\n\n  preRouting(data) {\n    return __awaiter(this, void 0, void 0, function* () {\n      for (const plugin of this._preRoutingPlugins) {\n        yield callFn(plugin, 'preRouting', data);\n      }\n    });\n  }\n\n  postRouting(pluginContext) {\n    return __awaiter(this, void 0, void 0, function* () {\n      for (const plugin of this._postRoutingPlugins) {\n        yield callFn(plugin, 'postRouting', pluginContext);\n      }\n    });\n  }\n\n  postSecurity(pluginContext) {\n    return __awaiter(this, void 0, void 0, function* () {\n      for (const plugin of this._postSecurityPlugins) {\n        yield callFn(plugin, 'postSecurity', pluginContext);\n      }\n    });\n  }\n\n  postController(context) {\n    return __awaiter(this, void 0, void 0, function* () {\n      for (const plugin of this._postControllerPlugins) {\n        yield callFn(plugin, 'postController', context);\n      }\n    });\n  }\n\n  postResponseValidation(context) {\n    return __awaiter(this, void 0, void 0, function* () {\n      for (const plugin of this._postResponseValidation) {\n        yield callFn(plugin, 'postResponseValidation', context);\n      }\n    });\n  }\n\n}\n\nexports.default = PluginsManager;","map":{"version":3,"sources":["../../src/core/PluginsManager.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst promise_breaker_1 = __importDefault(require(\"promise-breaker\"));\nfunction callFn(plugin, fnName, param) {\n    const fnLength = plugin[fnName].length;\n    if (fnLength < 2) {\n        return plugin[fnName](param);\n    }\n    else {\n        promise_breaker_1.default.call((done) => plugin[fnName](param, done));\n    }\n}\nclass PluginsManager {\n    constructor(apiDoc, plugins) {\n        this._plugins = plugins.map((plugin) => plugin.makeExegesisPlugin({ apiDoc }));\n        this._preRoutingPlugins = this._plugins.filter((p) => !!p.preRouting);\n        this._postRoutingPlugins = this._plugins.filter((p) => !!p.postRouting);\n        this._postSecurityPlugins = this._plugins.filter((p) => !!p.postSecurity);\n        this._postControllerPlugins = this._plugins.filter((p) => !!p.postController);\n        this._postResponseValidation = this._plugins.filter((p) => !!p.postResponseValidation);\n    }\n    preCompile(data) {\n        return __awaiter(this, void 0, void 0, function* () {\n            for (const plugin of this._plugins) {\n                if (plugin.preCompile) {\n                    yield callFn(plugin, 'preCompile', data);\n                }\n            }\n        });\n    }\n    preRouting(data) {\n        return __awaiter(this, void 0, void 0, function* () {\n            for (const plugin of this._preRoutingPlugins) {\n                yield callFn(plugin, 'preRouting', data);\n            }\n        });\n    }\n    postRouting(pluginContext) {\n        return __awaiter(this, void 0, void 0, function* () {\n            for (const plugin of this._postRoutingPlugins) {\n                yield callFn(plugin, 'postRouting', pluginContext);\n            }\n        });\n    }\n    postSecurity(pluginContext) {\n        return __awaiter(this, void 0, void 0, function* () {\n            for (const plugin of this._postSecurityPlugins) {\n                yield callFn(plugin, 'postSecurity', pluginContext);\n            }\n        });\n    }\n    postController(context) {\n        return __awaiter(this, void 0, void 0, function* () {\n            for (const plugin of this._postControllerPlugins) {\n                yield callFn(plugin, 'postController', context);\n            }\n        });\n    }\n    postResponseValidation(context) {\n        return __awaiter(this, void 0, void 0, function* () {\n            for (const plugin of this._postResponseValidation) {\n                yield callFn(plugin, 'postResponseValidation', context);\n            }\n        });\n    }\n}\nexports.default = PluginsManager;\n//# sourceMappingURL=PluginsManager.js.map"]},"metadata":{},"sourceType":"script"}