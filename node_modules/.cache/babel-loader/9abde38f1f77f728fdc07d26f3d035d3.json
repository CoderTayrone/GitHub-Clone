{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createFirebaseEndpoints = void 0;\n\nconst emulatorLogger_1 = require(\"../../emulatorLogger\");\n\nconst types_1 = require(\"../../types\");\n\nconst zlib_1 = require(\"zlib\");\n\nconst metadata_1 = require(\"../metadata\");\n\nconst mime = require(\"mime\");\n\nconst express_1 = require(\"express\");\n\nconst registry_1 = require(\"../../registry\");\n\nconst types_2 = require(\"../rules/types\");\n\nasync function isPermitted(opts) {\n  if (!opts.ruleset) {\n    emulatorLogger_1.EmulatorLogger.forEmulator(types_1.Emulators.STORAGE).log(\"WARN\", `Can not process SDK request with no loaded ruleset`);\n    return false;\n  }\n\n  if ([\"Bearer owner\", \"Firebase owner\"].includes(opts.authorization || \"\")) {\n    return true;\n  }\n\n  const {\n    permitted,\n    issues\n  } = await opts.ruleset.verify({\n    method: opts.method,\n    path: opts.path,\n    file: opts.file,\n    token: opts.authorization ? opts.authorization.split(\" \")[1] : undefined\n  });\n\n  if (issues.exist()) {\n    issues.all.forEach(warningOrError => {\n      emulatorLogger_1.EmulatorLogger.forEmulator(types_1.Emulators.STORAGE).log(\"WARN\", warningOrError);\n    });\n  }\n\n  return !!permitted;\n}\n\nfunction createFirebaseEndpoints(emulator) {\n  const firebaseStorageAPI = express_1.Router();\n  const {\n    storageLayer\n  } = emulator;\n\n  if (process.env.STORAGE_EMULATOR_DEBUG) {\n    firebaseStorageAPI.use((req, res, next) => {\n      console.log(\"--------------INCOMING REQUEST--------------\");\n      console.log(`${req.method.toUpperCase()} ${req.path}`);\n      console.log(\"-- query:\");\n      console.log(JSON.stringify(req.query, undefined, 2));\n      console.log(\"-- headers:\");\n      console.log(JSON.stringify(req.headers, undefined, 2));\n      console.log(\"-- body:\");\n\n      if (req.body instanceof Buffer) {\n        console.log(`Buffer of ${req.body.length}`);\n      } else if (req.body) {\n        console.log(req.body);\n      } else {\n        console.log(\"Empty body (could be stream)\");\n      }\n\n      const resJson = res.json.bind(res);\n\n      res.json = (...args) => {\n        console.log(\"-- response:\");\n        args.forEach(data => console.log(JSON.stringify(data, undefined, 2)));\n        return resJson.call(res, ...args);\n      };\n\n      const resSendStatus = res.sendStatus.bind(res);\n\n      res.sendStatus = status => {\n        console.log(\"-- response status:\");\n        console.log(status);\n        return resSendStatus.call(res, status);\n      };\n\n      const resStatus = res.status.bind(res);\n\n      res.status = status => {\n        console.log(\"-- response status:\");\n        console.log(status);\n        return resStatus.call(res, status);\n      };\n\n      next();\n    });\n  }\n\n  firebaseStorageAPI.use((req, res, next) => {\n    if (!emulator.rules) {\n      emulatorLogger_1.EmulatorLogger.forEmulator(types_1.Emulators.STORAGE).log(\"WARN\", \"Permission denied because no Storage ruleset is currently loaded, check your rules for syntax errors.\");\n      return res.status(403).json({\n        error: {\n          code: 403,\n          message: \"Permission denied. Storage Emulator has no loaded ruleset.\"\n        }\n      });\n    }\n\n    next();\n  });\n  firebaseStorageAPI.use(/.*\\/b\\/(.+?)\\/.*/, (req, res, next) => {\n    storageLayer.createBucket(req.params[0]);\n    next();\n  });\n  firebaseStorageAPI.get(\"/b/:bucketId/o/:objectId\", async (req, res) => {\n    const decodedObjectId = decodeURIComponent(req.params.objectId);\n    const operationPath = [\"b\", req.params.bucketId, \"o\", decodedObjectId].join(\"/\");\n    const md = storageLayer.getMetadata(req.params.bucketId, decodedObjectId);\n    const rulesFiles = {};\n\n    if (md) {\n      rulesFiles.before = md.asRulesResource();\n    }\n\n    const isPermittedViaHeader = await isPermitted({\n      ruleset: emulator.rules,\n      method: types_2.RulesetOperationMethod.GET,\n      path: operationPath,\n      file: rulesFiles,\n      authorization: req.header(\"authorization\")\n    });\n    const isPermittedViaToken = req.query.token && md && md.downloadTokens.includes(req.query.token.toString());\n    const isRequestPermitted = isPermittedViaHeader || !!isPermittedViaToken;\n\n    if (!isRequestPermitted) {\n      res.sendStatus(403);\n      return;\n    }\n\n    if (!md) {\n      res.sendStatus(404);\n      return;\n    }\n\n    let isGZipped = false;\n\n    if (md.contentEncoding == \"gzip\") {\n      isGZipped = true;\n    }\n\n    if (req.query.alt == \"media\") {\n      let data = storageLayer.getBytes(req.params.bucketId, req.params.objectId);\n\n      if (!data) {\n        res.sendStatus(404);\n        return;\n      }\n\n      if (isGZipped) {\n        data = zlib_1.gunzipSync(data);\n      }\n\n      res.setHeader(\"Accept-Ranges\", \"bytes\");\n      res.setHeader(\"Content-Type\", md.contentType);\n      setObjectHeaders(res, md, {\n        \"Content-Encoding\": isGZipped ? \"identity\" : undefined\n      });\n      const byteRange = [...(req.header(\"range\") || \"\").split(\"bytes=\"), \"\", \"\"];\n      const [rangeStart, rangeEnd] = byteRange[1].split(\"-\");\n\n      if (rangeStart) {\n        const range = {\n          start: parseInt(rangeStart),\n          end: rangeEnd ? parseInt(rangeEnd) : data.byteLength\n        };\n        res.setHeader(\"Content-Range\", `bytes ${range.start}-${range.end - 1}/${data.byteLength}`);\n        res.status(206).end(data.slice(range.start, range.end));\n      } else {\n        res.end(data);\n      }\n\n      return;\n    }\n\n    if (!md.downloadTokens.length) {\n      md.addDownloadToken();\n    }\n\n    res.json(new metadata_1.OutgoingFirebaseMetadata(md));\n  });\n\n  const handleMetadataUpdate = async (req, res) => {\n    const md = storageLayer.getMetadata(req.params.bucketId, req.params.objectId);\n\n    if (!md) {\n      res.sendStatus(404);\n      return;\n    }\n\n    const decodedObjectId = decodeURIComponent(req.params.objectId);\n    const operationPath = [\"b\", req.params.bucketId, \"o\", decodedObjectId].join(\"/\");\n\n    if (!(await isPermitted({\n      ruleset: emulator.rules,\n      method: types_2.RulesetOperationMethod.UPDATE,\n      path: operationPath,\n      authorization: req.header(\"authorization\"),\n      file: {\n        before: md.asRulesResource(),\n        after: md.asRulesResource(req.body)\n      }\n    }))) {\n      return res.status(403).json({\n        error: {\n          code: 403,\n          message: `Permission denied. No WRITE permission.`\n        }\n      });\n    }\n\n    md.update(req.body);\n    setObjectHeaders(res, md);\n    const outgoingMetadata = new metadata_1.OutgoingFirebaseMetadata(md);\n    res.json(outgoingMetadata);\n    return;\n  };\n\n  firebaseStorageAPI.get(\"/b/:bucketId/o\", async (req, res) => {\n    let maxRes = undefined;\n\n    if (req.query.maxResults) {\n      maxRes = +req.query.maxResults.toString();\n    }\n\n    const delimiter = req.query.delimiter ? req.query.delimiter.toString() : \"/\";\n    const pageToken = req.query.pageToken ? req.query.pageToken.toString() : undefined;\n    const prefix = req.query.prefix ? req.query.prefix.toString() : \"\";\n    const operationPath = [\"b\", req.params.bucketId, \"o\", prefix].join(\"/\");\n\n    if (!(await isPermitted({\n      ruleset: emulator.rules,\n      method: types_2.RulesetOperationMethod.LIST,\n      path: operationPath,\n      file: {},\n      authorization: req.header(\"authorization\")\n    }))) {\n      return res.status(403).json({\n        error: {\n          code: 403,\n          message: `Permission denied. No LIST permission.`\n        }\n      });\n    }\n\n    res.json(storageLayer.listItemsAndPrefixes(req.params.bucketId, prefix, delimiter, pageToken, maxRes));\n  });\n\n  const handleUpload = async (req, res) => {\n    var _a;\n\n    if (req.query.create_token || req.query.delete_token) {\n      const decodedObjectId = decodeURIComponent(req.params.objectId);\n      const operationPath = [\"b\", req.params.bucketId, \"o\", decodedObjectId].join(\"/\");\n      const mdBefore = storageLayer.getMetadata(req.params.bucketId, req.params.objectId);\n\n      if (!(await isPermitted({\n        ruleset: emulator.rules,\n        method: types_2.RulesetOperationMethod.UPDATE,\n        path: operationPath,\n        authorization: req.header(\"authorization\"),\n        file: {\n          before: mdBefore === null || mdBefore === void 0 ? void 0 : mdBefore.asRulesResource()\n        }\n      }))) {\n        return res.status(403).json({\n          error: {\n            code: 403,\n            message: `Permission denied. No WRITE permission.`\n          }\n        });\n      }\n\n      if (!mdBefore) {\n        return res.status(404).json({\n          error: {\n            code: 404,\n            message: `Request object can not be found`\n          }\n        });\n      }\n\n      const createTokenParam = req.query[\"create_token\"];\n      const deleteTokenParam = req.query[\"delete_token\"];\n      let md;\n\n      if (createTokenParam) {\n        if (createTokenParam != \"true\") {\n          res.sendStatus(400);\n          return;\n        }\n\n        md = storageLayer.addDownloadToken(req.params.bucketId, req.params.objectId);\n      } else if (deleteTokenParam) {\n        md = storageLayer.deleteDownloadToken(req.params.bucketId, req.params.objectId, deleteTokenParam.toString());\n      }\n\n      if (!md) {\n        res.sendStatus(404);\n        return;\n      }\n\n      setObjectHeaders(res, md);\n      return res.json(new metadata_1.OutgoingFirebaseMetadata(md));\n    }\n\n    if (!req.query.name) {\n      res.sendStatus(400);\n      return;\n    }\n\n    const name = req.query.name.toString();\n    const uploadType = req.header(\"x-goog-upload-protocol\");\n\n    if (uploadType == \"multipart\") {\n      const contentType = req.header(\"content-type\");\n\n      if (!contentType || !contentType.startsWith(\"multipart/related\")) {\n        res.sendStatus(400);\n        return;\n      }\n\n      const boundary = `--${contentType.split(\"boundary=\")[1]}`;\n      const bodyString = req.body.toString();\n      const bodyStringParts = bodyString.split(boundary).filter(v => v);\n      const metadataString = bodyStringParts[0].split(\"\\r\\n\")[3];\n      const blobParts = bodyStringParts[1].split(\"\\r\\n\");\n      const blobContentTypeString = blobParts[1];\n\n      if (!blobContentTypeString || !blobContentTypeString.startsWith(\"Content-Type: \")) {\n        res.sendStatus(400);\n        return;\n      }\n\n      const blobContentType = blobContentTypeString.slice(\"Content-Type: \".length);\n      const bodyBuffer = req.body;\n      const metadataSegment = `${boundary}${bodyString.split(boundary)[1]}`;\n      const dataSegment = `${boundary}${bodyString.split(boundary).slice(2)[0]}`;\n      const dataSegmentHeader = (dataSegment.match(/.+Content-Type:.+?\\r\\n\\r\\n/s) || [])[0];\n\n      if (!dataSegmentHeader) {\n        res.sendStatus(400);\n        return;\n      }\n\n      const bufferOffset = metadataSegment.length + dataSegmentHeader.length;\n      const blobBytes = Buffer.from(bodyBuffer.slice(bufferOffset, -`\\r\\n${boundary}--`.length));\n      const md = storageLayer.oneShotUpload(req.params.bucketId, name, blobContentType, JSON.parse(metadataString), Buffer.from(blobBytes));\n\n      if (!md) {\n        res.sendStatus(400);\n        return;\n      }\n\n      const operationPath = [\"b\", req.params.bucketId, \"o\", name].join(\"/\");\n\n      if (!(await isPermitted({\n        ruleset: emulator.rules,\n        method: types_2.RulesetOperationMethod.CREATE,\n        path: operationPath,\n        authorization: req.header(\"authorization\"),\n        file: {\n          after: md === null || md === void 0 ? void 0 : md.asRulesResource()\n        }\n      }))) {\n        storageLayer.deleteFile(md === null || md === void 0 ? void 0 : md.bucket, md === null || md === void 0 ? void 0 : md.name);\n        return res.status(403).json({\n          error: {\n            code: 403,\n            message: `Permission denied. No WRITE permission.`\n          }\n        });\n      }\n\n      if (md.downloadTokens.length == 0) {\n        md.addDownloadToken();\n      }\n\n      res.json(new metadata_1.OutgoingFirebaseMetadata(md));\n      return;\n    } else {\n      const operationPath = [\"b\", req.params.bucketId, \"o\", name].join(\"/\");\n      const uploadCommand = req.header(\"x-goog-upload-command\");\n\n      if (!uploadCommand) {\n        res.sendStatus(400);\n        return;\n      }\n\n      if (uploadCommand == \"start\") {\n        let objectContentType = req.header(\"x-goog-upload-header-content-type\") || req.header(\"x-goog-upload-content-type\");\n\n        if (!objectContentType) {\n          const mimeTypeFromName = mime.getType(name);\n\n          if (!mimeTypeFromName) {\n            objectContentType = \"application/octet-stream\";\n          } else {\n            objectContentType = mimeTypeFromName;\n          }\n        }\n\n        const upload = storageLayer.startUpload(req.params.bucketId, name, objectContentType, req.body);\n        storageLayer.uploadBytes(upload.uploadId, Buffer.alloc(0));\n        const emulatorInfo = registry_1.EmulatorRegistry.getInfo(types_1.Emulators.STORAGE);\n        res.header(\"x-goog-upload-chunk-granularity\", \"10000\");\n        res.header(\"x-goog-upload-control-url\", \"\");\n        res.header(\"x-goog-upload-status\", \"active\");\n        res.header(\"x-goog-upload-url\", `http://${req.hostname}:${emulatorInfo === null || emulatorInfo === void 0 ? void 0 : emulatorInfo.port}/v0/b/${req.params.bucketId}/o?name=${req.query.name}&upload_id=${upload.uploadId}&upload_protocol=resumable`);\n        res.header(\"x-gupload-uploadid\", upload.uploadId);\n        res.status(200).send();\n        return;\n      }\n\n      if (!req.query.upload_id) {\n        res.sendStatus(400);\n        return;\n      }\n\n      const uploadId = req.query.upload_id.toString();\n\n      if (uploadCommand == \"query\") {\n        const upload = storageLayer.queryUpload(uploadId);\n\n        if (!upload) {\n          res.sendStatus(400);\n          return;\n        }\n\n        res.header(\"X-Goog-Upload-Size-Received\", upload.currentBytesUploaded.toString());\n        res.sendStatus(200);\n        return;\n      }\n\n      if (uploadCommand == \"cancel\") {\n        const upload = storageLayer.cancelUpload(uploadId);\n\n        if (!upload) {\n          res.sendStatus(400);\n          return;\n        }\n\n        res.sendStatus(200);\n        return;\n      }\n\n      let upload;\n\n      if (uploadCommand.includes(\"upload\")) {\n        if (!(req.body instanceof Buffer)) {\n          const bufs = [];\n          req.on(\"data\", data => {\n            bufs.push(data);\n          });\n          await new Promise(resolve => {\n            req.on(\"end\", () => {\n              req.body = Buffer.concat(bufs);\n              resolve();\n            });\n          });\n        }\n\n        upload = storageLayer.uploadBytes(uploadId, req.body);\n\n        if (!upload) {\n          res.sendStatus(400);\n          return;\n        }\n\n        res.header(\"x-goog-upload-status\", \"active\");\n        res.header(\"x-gupload-uploadid\", upload.uploadId);\n      }\n\n      if (uploadCommand.includes(\"finalize\")) {\n        const finalizedUpload = storageLayer.finalizeUpload(uploadId);\n\n        if (!finalizedUpload) {\n          res.sendStatus(400);\n          return;\n        }\n\n        upload = finalizedUpload.upload;\n        res.header(\"x-goog-upload-status\", \"final\");\n\n        if (!(await isPermitted({\n          ruleset: emulator.rules,\n          method: types_2.RulesetOperationMethod.CREATE,\n          path: operationPath,\n          authorization: req.header(\"authorization\"),\n          file: {\n            after: (_a = storageLayer.getMetadata(req.params.bucketId, name)) === null || _a === void 0 ? void 0 : _a.asRulesResource()\n          }\n        }))) {\n          storageLayer.deleteFile(upload.bucketId, name);\n          return res.status(403).json({\n            error: {\n              code: 403,\n              message: `Permission denied. No WRITE permission.`\n            }\n          });\n        }\n\n        const md = finalizedUpload.file.metadata;\n\n        if (md.downloadTokens.length == 0) {\n          md.addDownloadToken();\n        }\n\n        res.json(new metadata_1.OutgoingFirebaseMetadata(finalizedUpload.file.metadata));\n      } else if (!upload) {\n        res.sendStatus(400);\n        return;\n      } else {\n        res.sendStatus(200);\n      }\n    }\n  };\n\n  firebaseStorageAPI.patch(\"/b/:bucketId/o/:objectId\", handleMetadataUpdate);\n  firebaseStorageAPI.put(\"/b/:bucketId/o/:objectId?\", async (req, res) => {\n    var _a;\n\n    switch ((_a = req.header(\"x-http-method-override\")) === null || _a === void 0 ? void 0 : _a.toLowerCase()) {\n      case \"patch\":\n        return handleMetadataUpdate(req, res);\n\n      default:\n        return handleUpload(req, res);\n    }\n  });\n  firebaseStorageAPI.post(\"/b/:bucketId/o/:objectId?\", handleUpload);\n  firebaseStorageAPI.delete(\"/b/:bucketId/o/:objectId\", async (req, res) => {\n    const decodedObjectId = decodeURIComponent(req.params.objectId);\n    const operationPath = [\"b\", req.params.bucketId, \"o\", decodedObjectId].join(\"/\");\n\n    if (!(await isPermitted({\n      ruleset: emulator.rules,\n      method: types_2.RulesetOperationMethod.DELETE,\n      path: operationPath,\n      authorization: req.header(\"authorization\"),\n      file: {}\n    }))) {\n      return res.status(403).json({\n        error: {\n          code: 403,\n          message: `Permission denied. No WRITE permission.`\n        }\n      });\n    }\n\n    const md = storageLayer.getMetadata(req.params.bucketId, decodedObjectId);\n\n    if (!md) {\n      res.sendStatus(404);\n      return;\n    }\n\n    storageLayer.deleteFile(req.params.bucketId, req.params.objectId);\n    res.sendStatus(200);\n  });\n  firebaseStorageAPI.get(\"/\", (req, res) => {\n    res.json({\n      emulator: \"storage\"\n    });\n  });\n  return firebaseStorageAPI;\n}\n\nexports.createFirebaseEndpoints = createFirebaseEndpoints;\n\nfunction setObjectHeaders(res, metadata, headerOverride = {\n  \"Content-Encoding\": undefined\n}) {\n  res.setHeader(\"Content-Disposition\", metadata.contentDisposition);\n\n  if (headerOverride[\"Content-Encoding\"]) {\n    res.setHeader(\"Content-Encoding\", headerOverride[\"Content-Encoding\"]);\n  } else {\n    res.setHeader(\"Content-Encoding\", metadata.contentEncoding);\n  }\n\n  if (metadata.cacheControl) {\n    res.setHeader(\"Cache-Control\", metadata.cacheControl);\n  }\n\n  if (metadata.contentLanguage) {\n    res.setHeader(\"Content-Language\", metadata.contentLanguage);\n  }\n}","map":{"version":3,"sources":["/home/dev/Documentos/Projects/github-clone/node_modules/firebase-tools/lib/emulator/storage/apis/firebase.js"],"names":["Object","defineProperty","exports","value","createFirebaseEndpoints","emulatorLogger_1","require","types_1","zlib_1","metadata_1","mime","express_1","registry_1","types_2","isPermitted","opts","ruleset","EmulatorLogger","forEmulator","Emulators","STORAGE","log","includes","authorization","permitted","issues","verify","method","path","file","token","split","undefined","exist","all","forEach","warningOrError","emulator","firebaseStorageAPI","Router","storageLayer","process","env","STORAGE_EMULATOR_DEBUG","use","req","res","next","console","toUpperCase","JSON","stringify","query","headers","body","Buffer","length","resJson","json","bind","args","data","call","resSendStatus","sendStatus","status","resStatus","rules","error","code","message","createBucket","params","get","decodedObjectId","decodeURIComponent","objectId","operationPath","bucketId","join","md","getMetadata","rulesFiles","before","asRulesResource","isPermittedViaHeader","RulesetOperationMethod","GET","header","isPermittedViaToken","downloadTokens","toString","isRequestPermitted","isGZipped","contentEncoding","alt","getBytes","gunzipSync","setHeader","contentType","setObjectHeaders","byteRange","rangeStart","rangeEnd","range","start","parseInt","end","byteLength","slice","addDownloadToken","OutgoingFirebaseMetadata","handleMetadataUpdate","UPDATE","after","update","outgoingMetadata","maxRes","maxResults","delimiter","pageToken","prefix","LIST","listItemsAndPrefixes","handleUpload","_a","create_token","delete_token","mdBefore","createTokenParam","deleteTokenParam","deleteDownloadToken","name","uploadType","startsWith","boundary","bodyString","bodyStringParts","filter","v","metadataString","blobParts","blobContentTypeString","blobContentType","bodyBuffer","metadataSegment","dataSegment","dataSegmentHeader","match","bufferOffset","blobBytes","from","oneShotUpload","parse","CREATE","deleteFile","bucket","uploadCommand","objectContentType","mimeTypeFromName","getType","upload","startUpload","uploadBytes","uploadId","alloc","emulatorInfo","EmulatorRegistry","getInfo","hostname","port","send","upload_id","queryUpload","currentBytesUploaded","cancelUpload","bufs","on","push","Promise","resolve","concat","finalizedUpload","finalizeUpload","metadata","patch","put","toLowerCase","post","delete","DELETE","headerOverride","contentDisposition","cacheControl","contentLanguage"],"mappings":"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","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createFirebaseEndpoints = void 0;\nconst emulatorLogger_1 = require(\"../../emulatorLogger\");\nconst types_1 = require(\"../../types\");\nconst zlib_1 = require(\"zlib\");\nconst metadata_1 = require(\"../metadata\");\nconst mime = require(\"mime\");\nconst express_1 = require(\"express\");\nconst registry_1 = require(\"../../registry\");\nconst types_2 = require(\"../rules/types\");\nasync function isPermitted(opts) {\n    if (!opts.ruleset) {\n        emulatorLogger_1.EmulatorLogger.forEmulator(types_1.Emulators.STORAGE).log(\"WARN\", `Can not process SDK request with no loaded ruleset`);\n        return false;\n    }\n    if ([\"Bearer owner\", \"Firebase owner\"].includes(opts.authorization || \"\")) {\n        return true;\n    }\n    const { permitted, issues } = await opts.ruleset.verify({\n        method: opts.method,\n        path: opts.path,\n        file: opts.file,\n        token: opts.authorization ? opts.authorization.split(\" \")[1] : undefined,\n    });\n    if (issues.exist()) {\n        issues.all.forEach((warningOrError) => {\n            emulatorLogger_1.EmulatorLogger.forEmulator(types_1.Emulators.STORAGE).log(\"WARN\", warningOrError);\n        });\n    }\n    return !!permitted;\n}\nfunction createFirebaseEndpoints(emulator) {\n    const firebaseStorageAPI = express_1.Router();\n    const { storageLayer } = emulator;\n    if (process.env.STORAGE_EMULATOR_DEBUG) {\n        firebaseStorageAPI.use((req, res, next) => {\n            console.log(\"--------------INCOMING REQUEST--------------\");\n            console.log(`${req.method.toUpperCase()} ${req.path}`);\n            console.log(\"-- query:\");\n            console.log(JSON.stringify(req.query, undefined, 2));\n            console.log(\"-- headers:\");\n            console.log(JSON.stringify(req.headers, undefined, 2));\n            console.log(\"-- body:\");\n            if (req.body instanceof Buffer) {\n                console.log(`Buffer of ${req.body.length}`);\n            }\n            else if (req.body) {\n                console.log(req.body);\n            }\n            else {\n                console.log(\"Empty body (could be stream)\");\n            }\n            const resJson = res.json.bind(res);\n            res.json = (...args) => {\n                console.log(\"-- response:\");\n                args.forEach((data) => console.log(JSON.stringify(data, undefined, 2)));\n                return resJson.call(res, ...args);\n            };\n            const resSendStatus = res.sendStatus.bind(res);\n            res.sendStatus = (status) => {\n                console.log(\"-- response status:\");\n                console.log(status);\n                return resSendStatus.call(res, status);\n            };\n            const resStatus = res.status.bind(res);\n            res.status = (status) => {\n                console.log(\"-- response status:\");\n                console.log(status);\n                return resStatus.call(res, status);\n            };\n            next();\n        });\n    }\n    firebaseStorageAPI.use((req, res, next) => {\n        if (!emulator.rules) {\n            emulatorLogger_1.EmulatorLogger.forEmulator(types_1.Emulators.STORAGE).log(\"WARN\", \"Permission denied because no Storage ruleset is currently loaded, check your rules for syntax errors.\");\n            return res.status(403).json({\n                error: {\n                    code: 403,\n                    message: \"Permission denied. Storage Emulator has no loaded ruleset.\",\n                },\n            });\n        }\n        next();\n    });\n    firebaseStorageAPI.use(/.*\\/b\\/(.+?)\\/.*/, (req, res, next) => {\n        storageLayer.createBucket(req.params[0]);\n        next();\n    });\n    firebaseStorageAPI.get(\"/b/:bucketId/o/:objectId\", async (req, res) => {\n        const decodedObjectId = decodeURIComponent(req.params.objectId);\n        const operationPath = [\"b\", req.params.bucketId, \"o\", decodedObjectId].join(\"/\");\n        const md = storageLayer.getMetadata(req.params.bucketId, decodedObjectId);\n        const rulesFiles = {};\n        if (md) {\n            rulesFiles.before = md.asRulesResource();\n        }\n        const isPermittedViaHeader = await isPermitted({\n            ruleset: emulator.rules,\n            method: types_2.RulesetOperationMethod.GET,\n            path: operationPath,\n            file: rulesFiles,\n            authorization: req.header(\"authorization\"),\n        });\n        const isPermittedViaToken = req.query.token && md && md.downloadTokens.includes(req.query.token.toString());\n        const isRequestPermitted = isPermittedViaHeader || !!isPermittedViaToken;\n        if (!isRequestPermitted) {\n            res.sendStatus(403);\n            return;\n        }\n        if (!md) {\n            res.sendStatus(404);\n            return;\n        }\n        let isGZipped = false;\n        if (md.contentEncoding == \"gzip\") {\n            isGZipped = true;\n        }\n        if (req.query.alt == \"media\") {\n            let data = storageLayer.getBytes(req.params.bucketId, req.params.objectId);\n            if (!data) {\n                res.sendStatus(404);\n                return;\n            }\n            if (isGZipped) {\n                data = zlib_1.gunzipSync(data);\n            }\n            res.setHeader(\"Accept-Ranges\", \"bytes\");\n            res.setHeader(\"Content-Type\", md.contentType);\n            setObjectHeaders(res, md, { \"Content-Encoding\": isGZipped ? \"identity\" : undefined });\n            const byteRange = [...(req.header(\"range\") || \"\").split(\"bytes=\"), \"\", \"\"];\n            const [rangeStart, rangeEnd] = byteRange[1].split(\"-\");\n            if (rangeStart) {\n                const range = {\n                    start: parseInt(rangeStart),\n                    end: rangeEnd ? parseInt(rangeEnd) : data.byteLength,\n                };\n                res.setHeader(\"Content-Range\", `bytes ${range.start}-${range.end - 1}/${data.byteLength}`);\n                res.status(206).end(data.slice(range.start, range.end));\n            }\n            else {\n                res.end(data);\n            }\n            return;\n        }\n        if (!md.downloadTokens.length) {\n            md.addDownloadToken();\n        }\n        res.json(new metadata_1.OutgoingFirebaseMetadata(md));\n    });\n    const handleMetadataUpdate = async (req, res) => {\n        const md = storageLayer.getMetadata(req.params.bucketId, req.params.objectId);\n        if (!md) {\n            res.sendStatus(404);\n            return;\n        }\n        const decodedObjectId = decodeURIComponent(req.params.objectId);\n        const operationPath = [\"b\", req.params.bucketId, \"o\", decodedObjectId].join(\"/\");\n        if (!(await isPermitted({\n            ruleset: emulator.rules,\n            method: types_2.RulesetOperationMethod.UPDATE,\n            path: operationPath,\n            authorization: req.header(\"authorization\"),\n            file: {\n                before: md.asRulesResource(),\n                after: md.asRulesResource(req.body),\n            },\n        }))) {\n            return res.status(403).json({\n                error: {\n                    code: 403,\n                    message: `Permission denied. No WRITE permission.`,\n                },\n            });\n        }\n        md.update(req.body);\n        setObjectHeaders(res, md);\n        const outgoingMetadata = new metadata_1.OutgoingFirebaseMetadata(md);\n        res.json(outgoingMetadata);\n        return;\n    };\n    firebaseStorageAPI.get(\"/b/:bucketId/o\", async (req, res) => {\n        let maxRes = undefined;\n        if (req.query.maxResults) {\n            maxRes = +req.query.maxResults.toString();\n        }\n        const delimiter = req.query.delimiter ? req.query.delimiter.toString() : \"/\";\n        const pageToken = req.query.pageToken ? req.query.pageToken.toString() : undefined;\n        const prefix = req.query.prefix ? req.query.prefix.toString() : \"\";\n        const operationPath = [\"b\", req.params.bucketId, \"o\", prefix].join(\"/\");\n        if (!(await isPermitted({\n            ruleset: emulator.rules,\n            method: types_2.RulesetOperationMethod.LIST,\n            path: operationPath,\n            file: {},\n            authorization: req.header(\"authorization\"),\n        }))) {\n            return res.status(403).json({\n                error: {\n                    code: 403,\n                    message: `Permission denied. No LIST permission.`,\n                },\n            });\n        }\n        res.json(storageLayer.listItemsAndPrefixes(req.params.bucketId, prefix, delimiter, pageToken, maxRes));\n    });\n    const handleUpload = async (req, res) => {\n        var _a;\n        if (req.query.create_token || req.query.delete_token) {\n            const decodedObjectId = decodeURIComponent(req.params.objectId);\n            const operationPath = [\"b\", req.params.bucketId, \"o\", decodedObjectId].join(\"/\");\n            const mdBefore = storageLayer.getMetadata(req.params.bucketId, req.params.objectId);\n            if (!(await isPermitted({\n                ruleset: emulator.rules,\n                method: types_2.RulesetOperationMethod.UPDATE,\n                path: operationPath,\n                authorization: req.header(\"authorization\"),\n                file: {\n                    before: mdBefore === null || mdBefore === void 0 ? void 0 : mdBefore.asRulesResource(),\n                },\n            }))) {\n                return res.status(403).json({\n                    error: {\n                        code: 403,\n                        message: `Permission denied. No WRITE permission.`,\n                    },\n                });\n            }\n            if (!mdBefore) {\n                return res.status(404).json({\n                    error: {\n                        code: 404,\n                        message: `Request object can not be found`,\n                    },\n                });\n            }\n            const createTokenParam = req.query[\"create_token\"];\n            const deleteTokenParam = req.query[\"delete_token\"];\n            let md;\n            if (createTokenParam) {\n                if (createTokenParam != \"true\") {\n                    res.sendStatus(400);\n                    return;\n                }\n                md = storageLayer.addDownloadToken(req.params.bucketId, req.params.objectId);\n            }\n            else if (deleteTokenParam) {\n                md = storageLayer.deleteDownloadToken(req.params.bucketId, req.params.objectId, deleteTokenParam.toString());\n            }\n            if (!md) {\n                res.sendStatus(404);\n                return;\n            }\n            setObjectHeaders(res, md);\n            return res.json(new metadata_1.OutgoingFirebaseMetadata(md));\n        }\n        if (!req.query.name) {\n            res.sendStatus(400);\n            return;\n        }\n        const name = req.query.name.toString();\n        const uploadType = req.header(\"x-goog-upload-protocol\");\n        if (uploadType == \"multipart\") {\n            const contentType = req.header(\"content-type\");\n            if (!contentType || !contentType.startsWith(\"multipart/related\")) {\n                res.sendStatus(400);\n                return;\n            }\n            const boundary = `--${contentType.split(\"boundary=\")[1]}`;\n            const bodyString = req.body.toString();\n            const bodyStringParts = bodyString.split(boundary).filter((v) => v);\n            const metadataString = bodyStringParts[0].split(\"\\r\\n\")[3];\n            const blobParts = bodyStringParts[1].split(\"\\r\\n\");\n            const blobContentTypeString = blobParts[1];\n            if (!blobContentTypeString || !blobContentTypeString.startsWith(\"Content-Type: \")) {\n                res.sendStatus(400);\n                return;\n            }\n            const blobContentType = blobContentTypeString.slice(\"Content-Type: \".length);\n            const bodyBuffer = req.body;\n            const metadataSegment = `${boundary}${bodyString.split(boundary)[1]}`;\n            const dataSegment = `${boundary}${bodyString.split(boundary).slice(2)[0]}`;\n            const dataSegmentHeader = (dataSegment.match(/.+Content-Type:.+?\\r\\n\\r\\n/s) || [])[0];\n            if (!dataSegmentHeader) {\n                res.sendStatus(400);\n                return;\n            }\n            const bufferOffset = metadataSegment.length + dataSegmentHeader.length;\n            const blobBytes = Buffer.from(bodyBuffer.slice(bufferOffset, -`\\r\\n${boundary}--`.length));\n            const md = storageLayer.oneShotUpload(req.params.bucketId, name, blobContentType, JSON.parse(metadataString), Buffer.from(blobBytes));\n            if (!md) {\n                res.sendStatus(400);\n                return;\n            }\n            const operationPath = [\"b\", req.params.bucketId, \"o\", name].join(\"/\");\n            if (!(await isPermitted({\n                ruleset: emulator.rules,\n                method: types_2.RulesetOperationMethod.CREATE,\n                path: operationPath,\n                authorization: req.header(\"authorization\"),\n                file: {\n                    after: md === null || md === void 0 ? void 0 : md.asRulesResource(),\n                },\n            }))) {\n                storageLayer.deleteFile(md === null || md === void 0 ? void 0 : md.bucket, md === null || md === void 0 ? void 0 : md.name);\n                return res.status(403).json({\n                    error: {\n                        code: 403,\n                        message: `Permission denied. No WRITE permission.`,\n                    },\n                });\n            }\n            if (md.downloadTokens.length == 0) {\n                md.addDownloadToken();\n            }\n            res.json(new metadata_1.OutgoingFirebaseMetadata(md));\n            return;\n        }\n        else {\n            const operationPath = [\"b\", req.params.bucketId, \"o\", name].join(\"/\");\n            const uploadCommand = req.header(\"x-goog-upload-command\");\n            if (!uploadCommand) {\n                res.sendStatus(400);\n                return;\n            }\n            if (uploadCommand == \"start\") {\n                let objectContentType = req.header(\"x-goog-upload-header-content-type\") ||\n                    req.header(\"x-goog-upload-content-type\");\n                if (!objectContentType) {\n                    const mimeTypeFromName = mime.getType(name);\n                    if (!mimeTypeFromName) {\n                        objectContentType = \"application/octet-stream\";\n                    }\n                    else {\n                        objectContentType = mimeTypeFromName;\n                    }\n                }\n                const upload = storageLayer.startUpload(req.params.bucketId, name, objectContentType, req.body);\n                storageLayer.uploadBytes(upload.uploadId, Buffer.alloc(0));\n                const emulatorInfo = registry_1.EmulatorRegistry.getInfo(types_1.Emulators.STORAGE);\n                res.header(\"x-goog-upload-chunk-granularity\", \"10000\");\n                res.header(\"x-goog-upload-control-url\", \"\");\n                res.header(\"x-goog-upload-status\", \"active\");\n                res.header(\"x-goog-upload-url\", `http://${req.hostname}:${emulatorInfo === null || emulatorInfo === void 0 ? void 0 : emulatorInfo.port}/v0/b/${req.params.bucketId}/o?name=${req.query.name}&upload_id=${upload.uploadId}&upload_protocol=resumable`);\n                res.header(\"x-gupload-uploadid\", upload.uploadId);\n                res.status(200).send();\n                return;\n            }\n            if (!req.query.upload_id) {\n                res.sendStatus(400);\n                return;\n            }\n            const uploadId = req.query.upload_id.toString();\n            if (uploadCommand == \"query\") {\n                const upload = storageLayer.queryUpload(uploadId);\n                if (!upload) {\n                    res.sendStatus(400);\n                    return;\n                }\n                res.header(\"X-Goog-Upload-Size-Received\", upload.currentBytesUploaded.toString());\n                res.sendStatus(200);\n                return;\n            }\n            if (uploadCommand == \"cancel\") {\n                const upload = storageLayer.cancelUpload(uploadId);\n                if (!upload) {\n                    res.sendStatus(400);\n                    return;\n                }\n                res.sendStatus(200);\n                return;\n            }\n            let upload;\n            if (uploadCommand.includes(\"upload\")) {\n                if (!(req.body instanceof Buffer)) {\n                    const bufs = [];\n                    req.on(\"data\", (data) => {\n                        bufs.push(data);\n                    });\n                    await new Promise((resolve) => {\n                        req.on(\"end\", () => {\n                            req.body = Buffer.concat(bufs);\n                            resolve();\n                        });\n                    });\n                }\n                upload = storageLayer.uploadBytes(uploadId, req.body);\n                if (!upload) {\n                    res.sendStatus(400);\n                    return;\n                }\n                res.header(\"x-goog-upload-status\", \"active\");\n                res.header(\"x-gupload-uploadid\", upload.uploadId);\n            }\n            if (uploadCommand.includes(\"finalize\")) {\n                const finalizedUpload = storageLayer.finalizeUpload(uploadId);\n                if (!finalizedUpload) {\n                    res.sendStatus(400);\n                    return;\n                }\n                upload = finalizedUpload.upload;\n                res.header(\"x-goog-upload-status\", \"final\");\n                if (!(await isPermitted({\n                    ruleset: emulator.rules,\n                    method: types_2.RulesetOperationMethod.CREATE,\n                    path: operationPath,\n                    authorization: req.header(\"authorization\"),\n                    file: {\n                        after: (_a = storageLayer.getMetadata(req.params.bucketId, name)) === null || _a === void 0 ? void 0 : _a.asRulesResource(),\n                    },\n                }))) {\n                    storageLayer.deleteFile(upload.bucketId, name);\n                    return res.status(403).json({\n                        error: {\n                            code: 403,\n                            message: `Permission denied. No WRITE permission.`,\n                        },\n                    });\n                }\n                const md = finalizedUpload.file.metadata;\n                if (md.downloadTokens.length == 0) {\n                    md.addDownloadToken();\n                }\n                res.json(new metadata_1.OutgoingFirebaseMetadata(finalizedUpload.file.metadata));\n            }\n            else if (!upload) {\n                res.sendStatus(400);\n                return;\n            }\n            else {\n                res.sendStatus(200);\n            }\n        }\n    };\n    firebaseStorageAPI.patch(\"/b/:bucketId/o/:objectId\", handleMetadataUpdate);\n    firebaseStorageAPI.put(\"/b/:bucketId/o/:objectId?\", async (req, res) => {\n        var _a;\n        switch ((_a = req.header(\"x-http-method-override\")) === null || _a === void 0 ? void 0 : _a.toLowerCase()) {\n            case \"patch\":\n                return handleMetadataUpdate(req, res);\n            default:\n                return handleUpload(req, res);\n        }\n    });\n    firebaseStorageAPI.post(\"/b/:bucketId/o/:objectId?\", handleUpload);\n    firebaseStorageAPI.delete(\"/b/:bucketId/o/:objectId\", async (req, res) => {\n        const decodedObjectId = decodeURIComponent(req.params.objectId);\n        const operationPath = [\"b\", req.params.bucketId, \"o\", decodedObjectId].join(\"/\");\n        if (!(await isPermitted({\n            ruleset: emulator.rules,\n            method: types_2.RulesetOperationMethod.DELETE,\n            path: operationPath,\n            authorization: req.header(\"authorization\"),\n            file: {},\n        }))) {\n            return res.status(403).json({\n                error: {\n                    code: 403,\n                    message: `Permission denied. No WRITE permission.`,\n                },\n            });\n        }\n        const md = storageLayer.getMetadata(req.params.bucketId, decodedObjectId);\n        if (!md) {\n            res.sendStatus(404);\n            return;\n        }\n        storageLayer.deleteFile(req.params.bucketId, req.params.objectId);\n        res.sendStatus(200);\n    });\n    firebaseStorageAPI.get(\"/\", (req, res) => {\n        res.json({ emulator: \"storage\" });\n    });\n    return firebaseStorageAPI;\n}\nexports.createFirebaseEndpoints = createFirebaseEndpoints;\nfunction setObjectHeaders(res, metadata, headerOverride = { \"Content-Encoding\": undefined }) {\n    res.setHeader(\"Content-Disposition\", metadata.contentDisposition);\n    if (headerOverride[\"Content-Encoding\"]) {\n        res.setHeader(\"Content-Encoding\", headerOverride[\"Content-Encoding\"]);\n    }\n    else {\n        res.setHeader(\"Content-Encoding\", metadata.contentEncoding);\n    }\n    if (metadata.cacheControl) {\n        res.setHeader(\"Cache-Control\", metadata.cacheControl);\n    }\n    if (metadata.contentLanguage) {\n        res.setHeader(\"Content-Language\", metadata.contentLanguage);\n    }\n}\n"]},"metadata":{},"sourceType":"script"}