{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.AuthEmulator = void 0;\n\nconst fs = require(\"fs\");\n\nconst path = require(\"path\");\n\nconst http = require(\"http\");\n\nconst utils = require(\"../../utils\");\n\nconst constants_1 = require(\"../constants\");\n\nconst emulatorLogger_1 = require(\"../emulatorLogger\");\n\nconst types_1 = require(\"../types\");\n\nconst server_1 = require(\"./server\");\n\nconst error_1 = require(\"../../error\");\n\nclass AuthEmulator {\n  constructor(args) {\n    this.args = args;\n  }\n\n  async start() {\n    const {\n      host,\n      port\n    } = this.getInfo();\n    const app = await server_1.createApp(this.args.projectId);\n    const server = app.listen(port, host);\n    this.destroyServer = utils.createDestroyer(server);\n  }\n\n  async connect() {}\n\n  stop() {\n    return this.destroyServer ? this.destroyServer() : Promise.resolve();\n  }\n\n  getInfo() {\n    const host = this.args.host || constants_1.Constants.getDefaultHost(types_1.Emulators.AUTH);\n    const port = this.args.port || constants_1.Constants.getDefaultPort(types_1.Emulators.AUTH);\n    return {\n      name: this.getName(),\n      host,\n      port\n    };\n  }\n\n  getName() {\n    return types_1.Emulators.AUTH;\n  }\n\n  async importData(authExportDir, projectId) {\n    const logger = emulatorLogger_1.EmulatorLogger.forEmulator(types_1.Emulators.DATABASE);\n    const {\n      host,\n      port\n    } = this.getInfo();\n    const configPath = path.join(authExportDir, \"config.json\");\n    const configStat = await stat(configPath);\n\n    if (configStat === null || configStat === void 0 ? void 0 : configStat.isFile()) {\n      logger.logLabeled(\"BULLET\", \"auth\", `Importing config from ${configPath}`);\n      await importFromFile({\n        method: \"PATCH\",\n        host,\n        port,\n        path: `/emulator/v1/projects/${projectId}/config`,\n        headers: {\n          Authorization: \"Bearer owner\",\n          \"Content-Type\": \"application/json\"\n        }\n      }, configPath);\n    } else {\n      logger.logLabeled(\"WARN\", \"auth\", `Skipped importing config because ${configPath} does not exist.`);\n    }\n\n    const accountsPath = path.join(authExportDir, \"accounts.json\");\n    const accountsStat = await stat(accountsPath);\n\n    if (accountsStat === null || accountsStat === void 0 ? void 0 : accountsStat.isFile()) {\n      logger.logLabeled(\"BULLET\", \"auth\", `Importing accounts from ${accountsPath}`);\n      await importFromFile({\n        method: \"POST\",\n        host,\n        port,\n        path: `/identitytoolkit.googleapis.com/v1/projects/${projectId}/accounts:batchCreate`,\n        headers: {\n          Authorization: \"Bearer owner\",\n          \"Content-Type\": \"application/json\"\n        }\n      }, accountsPath, {\n        ignoreErrors: [\"MISSING_USER_ACCOUNT\"]\n      });\n    } else {\n      logger.logLabeled(\"WARN\", \"auth\", `Skipped importing accounts because ${accountsPath} does not exist.`);\n    }\n  }\n\n}\n\nexports.AuthEmulator = AuthEmulator;\n\nfunction stat(path) {\n  return new Promise((resolve, reject) => fs.stat(path, (err, stats) => {\n    if (err) {\n      if (err.code === \"ENOENT\") {\n        return resolve(undefined);\n      }\n\n      return reject(err);\n    } else {\n      return resolve(stats);\n    }\n  }));\n}\n\nfunction importFromFile(reqOptions, path, options = {}) {\n  const readStream = fs.createReadStream(path);\n  return new Promise((resolve, reject) => {\n    const req = http.request(reqOptions, response => {\n      if (response.statusCode === 200) {\n        resolve();\n      } else {\n        let data = \"\";\n        response.on(\"data\", d => {\n          data += d.toString();\n        }).on(\"error\", reject).on(\"end\", () => {\n          const ignoreErrors = options === null || options === void 0 ? void 0 : options.ignoreErrors;\n\n          if (ignoreErrors === null || ignoreErrors === void 0 ? void 0 : ignoreErrors.length) {\n            let message;\n\n            try {\n              message = JSON.parse(data).error.message;\n            } catch (_a) {\n              message = undefined;\n            }\n\n            if (message && ignoreErrors.includes(message)) {\n              return resolve();\n            }\n          }\n\n          return reject(new error_1.FirebaseError(`Received HTTP status code: ${response.statusCode}\\n${data}`));\n        });\n      }\n    });\n    req.on(\"error\", reject);\n    readStream.pipe(req, {\n      end: true\n    });\n  }).catch(e => {\n    throw new error_1.FirebaseError(`Error during Auth Emulator import: ${e.message}`, {\n      original: e,\n      exit: 1\n    });\n  });\n}","map":{"version":3,"sources":["/home/dev/Documentos/Projects/github-clone/node_modules/firebase-tools/lib/emulator/auth/index.js"],"names":["Object","defineProperty","exports","value","AuthEmulator","fs","require","path","http","utils","constants_1","emulatorLogger_1","types_1","server_1","error_1","constructor","args","start","host","port","getInfo","app","createApp","projectId","server","listen","destroyServer","createDestroyer","connect","stop","Promise","resolve","Constants","getDefaultHost","Emulators","AUTH","getDefaultPort","name","getName","importData","authExportDir","logger","EmulatorLogger","forEmulator","DATABASE","configPath","join","configStat","stat","isFile","logLabeled","importFromFile","method","headers","Authorization","accountsPath","accountsStat","ignoreErrors","reject","err","stats","code","undefined","reqOptions","options","readStream","createReadStream","req","request","response","statusCode","data","on","d","toString","length","message","JSON","parse","error","_a","includes","FirebaseError","pipe","end","catch","e","original","exit"],"mappings":"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","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AuthEmulator = void 0;\nconst fs = require(\"fs\");\nconst path = require(\"path\");\nconst http = require(\"http\");\nconst utils = require(\"../../utils\");\nconst constants_1 = require(\"../constants\");\nconst emulatorLogger_1 = require(\"../emulatorLogger\");\nconst types_1 = require(\"../types\");\nconst server_1 = require(\"./server\");\nconst error_1 = require(\"../../error\");\nclass AuthEmulator {\n    constructor(args) {\n        this.args = args;\n    }\n    async start() {\n        const { host, port } = this.getInfo();\n        const app = await server_1.createApp(this.args.projectId);\n        const server = app.listen(port, host);\n        this.destroyServer = utils.createDestroyer(server);\n    }\n    async connect() {\n    }\n    stop() {\n        return this.destroyServer ? this.destroyServer() : Promise.resolve();\n    }\n    getInfo() {\n        const host = this.args.host || constants_1.Constants.getDefaultHost(types_1.Emulators.AUTH);\n        const port = this.args.port || constants_1.Constants.getDefaultPort(types_1.Emulators.AUTH);\n        return {\n            name: this.getName(),\n            host,\n            port,\n        };\n    }\n    getName() {\n        return types_1.Emulators.AUTH;\n    }\n    async importData(authExportDir, projectId) {\n        const logger = emulatorLogger_1.EmulatorLogger.forEmulator(types_1.Emulators.DATABASE);\n        const { host, port } = this.getInfo();\n        const configPath = path.join(authExportDir, \"config.json\");\n        const configStat = await stat(configPath);\n        if (configStat === null || configStat === void 0 ? void 0 : configStat.isFile()) {\n            logger.logLabeled(\"BULLET\", \"auth\", `Importing config from ${configPath}`);\n            await importFromFile({\n                method: \"PATCH\",\n                host,\n                port,\n                path: `/emulator/v1/projects/${projectId}/config`,\n                headers: {\n                    Authorization: \"Bearer owner\",\n                    \"Content-Type\": \"application/json\",\n                },\n            }, configPath);\n        }\n        else {\n            logger.logLabeled(\"WARN\", \"auth\", `Skipped importing config because ${configPath} does not exist.`);\n        }\n        const accountsPath = path.join(authExportDir, \"accounts.json\");\n        const accountsStat = await stat(accountsPath);\n        if (accountsStat === null || accountsStat === void 0 ? void 0 : accountsStat.isFile()) {\n            logger.logLabeled(\"BULLET\", \"auth\", `Importing accounts from ${accountsPath}`);\n            await importFromFile({\n                method: \"POST\",\n                host,\n                port,\n                path: `/identitytoolkit.googleapis.com/v1/projects/${projectId}/accounts:batchCreate`,\n                headers: {\n                    Authorization: \"Bearer owner\",\n                    \"Content-Type\": \"application/json\",\n                },\n            }, accountsPath, { ignoreErrors: [\"MISSING_USER_ACCOUNT\"] });\n        }\n        else {\n            logger.logLabeled(\"WARN\", \"auth\", `Skipped importing accounts because ${accountsPath} does not exist.`);\n        }\n    }\n}\nexports.AuthEmulator = AuthEmulator;\nfunction stat(path) {\n    return new Promise((resolve, reject) => fs.stat(path, (err, stats) => {\n        if (err) {\n            if (err.code === \"ENOENT\") {\n                return resolve(undefined);\n            }\n            return reject(err);\n        }\n        else {\n            return resolve(stats);\n        }\n    }));\n}\nfunction importFromFile(reqOptions, path, options = {}) {\n    const readStream = fs.createReadStream(path);\n    return new Promise((resolve, reject) => {\n        const req = http.request(reqOptions, (response) => {\n            if (response.statusCode === 200) {\n                resolve();\n            }\n            else {\n                let data = \"\";\n                response\n                    .on(\"data\", (d) => {\n                    data += d.toString();\n                })\n                    .on(\"error\", reject)\n                    .on(\"end\", () => {\n                    const ignoreErrors = options === null || options === void 0 ? void 0 : options.ignoreErrors;\n                    if (ignoreErrors === null || ignoreErrors === void 0 ? void 0 : ignoreErrors.length) {\n                        let message;\n                        try {\n                            message = JSON.parse(data).error.message;\n                        }\n                        catch (_a) {\n                            message = undefined;\n                        }\n                        if (message && ignoreErrors.includes(message)) {\n                            return resolve();\n                        }\n                    }\n                    return reject(new error_1.FirebaseError(`Received HTTP status code: ${response.statusCode}\\n${data}`));\n                });\n            }\n        });\n        req.on(\"error\", reject);\n        readStream.pipe(req, { end: true });\n    }).catch((e) => {\n        throw new error_1.FirebaseError(`Error during Auth Emulator import: ${e.message}`, {\n            original: e,\n            exit: 1,\n        });\n    });\n}\n"]},"metadata":{},"sourceType":"script"}