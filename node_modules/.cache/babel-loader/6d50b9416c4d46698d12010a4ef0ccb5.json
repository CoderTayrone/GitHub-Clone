{"ast":null,"code":"import { _ as _createForOfIteratorHelper, h as _slicedToArray, a as _typeof, b as _createClass, e as _defineProperty, c as _classCallCheck, d as defaultTagPrefix, n as defaultTags } from './PlainValue-b8036b75.js';\nimport { d as YAMLMap, g as resolveMap, Y as YAMLSeq, h as resolveSeq, j as resolveString, c as stringifyString, s as strOptions, S as Scalar, n as nullOptions, a as boolOptions, i as intOptions, k as stringifyNumber, N as Node, A as Alias, P as Pair } from './resolveSeq-492ab440.js';\nimport { b as binary, o as omap, p as pairs, s as set, i as intTime, f as floatTime, t as timestamp, a as warnOptionDeprecation } from './warnings-df54cb69.js';\n\nfunction createMap(schema, obj, ctx) {\n  var map = new YAMLMap(schema);\n\n  if (obj instanceof Map) {\n    var _iterator = _createForOfIteratorHelper(obj),\n        _step;\n\n    try {\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        var _step$value = _slicedToArray(_step.value, 2),\n            key = _step$value[0],\n            value = _step$value[1];\n\n        map.items.push(schema.createPair(key, value, ctx));\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n  } else if (obj && _typeof(obj) === 'object') {\n    for (var _i = 0, _Object$keys = Object.keys(obj); _i < _Object$keys.length; _i++) {\n      var _key = _Object$keys[_i];\n      map.items.push(schema.createPair(_key, obj[_key], ctx));\n    }\n  }\n\n  if (typeof schema.sortMapEntries === 'function') {\n    map.items.sort(schema.sortMapEntries);\n  }\n\n  return map;\n}\n\nvar map = {\n  createNode: createMap,\n  default: true,\n  nodeClass: YAMLMap,\n  tag: 'tag:yaml.org,2002:map',\n  resolve: resolveMap\n};\n\nfunction createSeq(schema, obj, ctx) {\n  var seq = new YAMLSeq(schema);\n\n  if (obj && obj[Symbol.iterator]) {\n    var _iterator = _createForOfIteratorHelper(obj),\n        _step;\n\n    try {\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        var it = _step.value;\n        var v = schema.createNode(it, ctx.wrapScalars, null, ctx);\n        seq.items.push(v);\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n  }\n\n  return seq;\n}\n\nvar seq = {\n  createNode: createSeq,\n  default: true,\n  nodeClass: YAMLSeq,\n  tag: 'tag:yaml.org,2002:seq',\n  resolve: resolveSeq\n};\nvar string = {\n  identify: function identify(value) {\n    return typeof value === 'string';\n  },\n  default: true,\n  tag: 'tag:yaml.org,2002:str',\n  resolve: resolveString,\n  stringify: function stringify(item, ctx, onComment, onChompKeep) {\n    ctx = Object.assign({\n      actualString: true\n    }, ctx);\n    return stringifyString(item, ctx, onComment, onChompKeep);\n  },\n  options: strOptions\n};\nvar failsafe = [map, seq, string];\n/* global BigInt */\n\nvar intIdentify$2 = function intIdentify(value) {\n  return typeof value === 'bigint' || Number.isInteger(value);\n};\n\nvar intResolve$1 = function intResolve(src, part, radix) {\n  return intOptions.asBigInt ? BigInt(src) : parseInt(part, radix);\n};\n\nfunction intStringify$1(node, radix, prefix) {\n  var value = node.value;\n  if (intIdentify$2(value) && value >= 0) return prefix + value.toString(radix);\n  return stringifyNumber(node);\n}\n\nvar nullObj = {\n  identify: function identify(value) {\n    return value == null;\n  },\n  createNode: function createNode(schema, value, ctx) {\n    return ctx.wrapScalars ? new Scalar(null) : null;\n  },\n  default: true,\n  tag: 'tag:yaml.org,2002:null',\n  test: /^(?:~|[Nn]ull|NULL)?$/,\n  resolve: function resolve() {\n    return null;\n  },\n  options: nullOptions,\n  stringify: function stringify() {\n    return nullOptions.nullStr;\n  }\n};\nvar boolObj = {\n  identify: function identify(value) {\n    return typeof value === 'boolean';\n  },\n  default: true,\n  tag: 'tag:yaml.org,2002:bool',\n  test: /^(?:[Tt]rue|TRUE|[Ff]alse|FALSE)$/,\n  resolve: function resolve(str) {\n    return str[0] === 't' || str[0] === 'T';\n  },\n  options: boolOptions,\n  stringify: function stringify(_ref) {\n    var value = _ref.value;\n    return value ? boolOptions.trueStr : boolOptions.falseStr;\n  }\n};\nvar octObj = {\n  identify: function identify(value) {\n    return intIdentify$2(value) && value >= 0;\n  },\n  default: true,\n  tag: 'tag:yaml.org,2002:int',\n  format: 'OCT',\n  test: /^0o([0-7]+)$/,\n  resolve: function resolve(str, oct) {\n    return intResolve$1(str, oct, 8);\n  },\n  options: intOptions,\n  stringify: function stringify(node) {\n    return intStringify$1(node, 8, '0o');\n  }\n};\nvar intObj = {\n  identify: intIdentify$2,\n  default: true,\n  tag: 'tag:yaml.org,2002:int',\n  test: /^[-+]?[0-9]+$/,\n  resolve: function resolve(str) {\n    return intResolve$1(str, str, 10);\n  },\n  options: intOptions,\n  stringify: stringifyNumber\n};\nvar hexObj = {\n  identify: function identify(value) {\n    return intIdentify$2(value) && value >= 0;\n  },\n  default: true,\n  tag: 'tag:yaml.org,2002:int',\n  format: 'HEX',\n  test: /^0x([0-9a-fA-F]+)$/,\n  resolve: function resolve(str, hex) {\n    return intResolve$1(str, hex, 16);\n  },\n  options: intOptions,\n  stringify: function stringify(node) {\n    return intStringify$1(node, 16, '0x');\n  }\n};\nvar nanObj = {\n  identify: function identify(value) {\n    return typeof value === 'number';\n  },\n  default: true,\n  tag: 'tag:yaml.org,2002:float',\n  test: /^(?:[-+]?\\.inf|(\\.nan))$/i,\n  resolve: function resolve(str, nan) {\n    return nan ? NaN : str[0] === '-' ? Number.NEGATIVE_INFINITY : Number.POSITIVE_INFINITY;\n  },\n  stringify: stringifyNumber\n};\nvar expObj = {\n  identify: function identify(value) {\n    return typeof value === 'number';\n  },\n  default: true,\n  tag: 'tag:yaml.org,2002:float',\n  format: 'EXP',\n  test: /^[-+]?(?:\\.[0-9]+|[0-9]+(?:\\.[0-9]*)?)[eE][-+]?[0-9]+$/,\n  resolve: function resolve(str) {\n    return parseFloat(str);\n  },\n  stringify: function stringify(_ref2) {\n    var value = _ref2.value;\n    return Number(value).toExponential();\n  }\n};\nvar floatObj = {\n  identify: function identify(value) {\n    return typeof value === 'number';\n  },\n  default: true,\n  tag: 'tag:yaml.org,2002:float',\n  test: /^[-+]?(?:\\.([0-9]+)|[0-9]+\\.([0-9]*))$/,\n  resolve: function resolve(str, frac1, frac2) {\n    var frac = frac1 || frac2;\n    var node = new Scalar(parseFloat(str));\n    if (frac && frac[frac.length - 1] === '0') node.minFractionDigits = frac.length;\n    return node;\n  },\n  stringify: stringifyNumber\n};\nvar core = failsafe.concat([nullObj, boolObj, octObj, intObj, hexObj, nanObj, expObj, floatObj]);\n/* global BigInt */\n\nvar intIdentify$1 = function intIdentify(value) {\n  return typeof value === 'bigint' || Number.isInteger(value);\n};\n\nvar stringifyJSON = function stringifyJSON(_ref) {\n  var value = _ref.value;\n  return JSON.stringify(value);\n};\n\nvar json = [map, seq, {\n  identify: function identify(value) {\n    return typeof value === 'string';\n  },\n  default: true,\n  tag: 'tag:yaml.org,2002:str',\n  resolve: resolveString,\n  stringify: stringifyJSON\n}, {\n  identify: function identify(value) {\n    return value == null;\n  },\n  createNode: function createNode(schema, value, ctx) {\n    return ctx.wrapScalars ? new Scalar(null) : null;\n  },\n  default: true,\n  tag: 'tag:yaml.org,2002:null',\n  test: /^null$/,\n  resolve: function resolve() {\n    return null;\n  },\n  stringify: stringifyJSON\n}, {\n  identify: function identify(value) {\n    return typeof value === 'boolean';\n  },\n  default: true,\n  tag: 'tag:yaml.org,2002:bool',\n  test: /^true|false$/,\n  resolve: function resolve(str) {\n    return str === 'true';\n  },\n  stringify: stringifyJSON\n}, {\n  identify: intIdentify$1,\n  default: true,\n  tag: 'tag:yaml.org,2002:int',\n  test: /^-?(?:0|[1-9][0-9]*)$/,\n  resolve: function resolve(str) {\n    return intOptions.asBigInt ? BigInt(str) : parseInt(str, 10);\n  },\n  stringify: function stringify(_ref2) {\n    var value = _ref2.value;\n    return intIdentify$1(value) ? value.toString() : JSON.stringify(value);\n  }\n}, {\n  identify: function identify(value) {\n    return typeof value === 'number';\n  },\n  default: true,\n  tag: 'tag:yaml.org,2002:float',\n  test: /^-?(?:0|[1-9][0-9]*)(?:\\.[0-9]*)?(?:[eE][-+]?[0-9]+)?$/,\n  resolve: function resolve(str) {\n    return parseFloat(str);\n  },\n  stringify: stringifyJSON\n}];\n\njson.scalarFallback = function (str) {\n  throw new SyntaxError(\"Unresolved plain scalar \".concat(JSON.stringify(str)));\n};\n/* global BigInt */\n\n\nvar boolStringify = function boolStringify(_ref) {\n  var value = _ref.value;\n  return value ? boolOptions.trueStr : boolOptions.falseStr;\n};\n\nvar intIdentify = function intIdentify(value) {\n  return typeof value === 'bigint' || Number.isInteger(value);\n};\n\nfunction intResolve(sign, src, radix) {\n  var str = src.replace(/_/g, '');\n\n  if (intOptions.asBigInt) {\n    switch (radix) {\n      case 2:\n        str = \"0b\".concat(str);\n        break;\n\n      case 8:\n        str = \"0o\".concat(str);\n        break;\n\n      case 16:\n        str = \"0x\".concat(str);\n        break;\n    }\n\n    var _n = BigInt(str);\n\n    return sign === '-' ? BigInt(-1) * _n : _n;\n  }\n\n  var n = parseInt(str, radix);\n  return sign === '-' ? -1 * n : n;\n}\n\nfunction intStringify(node, radix, prefix) {\n  var value = node.value;\n\n  if (intIdentify(value)) {\n    var str = value.toString(radix);\n    return value < 0 ? '-' + prefix + str.substr(1) : prefix + str;\n  }\n\n  return stringifyNumber(node);\n}\n\nvar yaml11 = failsafe.concat([{\n  identify: function identify(value) {\n    return value == null;\n  },\n  createNode: function createNode(schema, value, ctx) {\n    return ctx.wrapScalars ? new Scalar(null) : null;\n  },\n  default: true,\n  tag: 'tag:yaml.org,2002:null',\n  test: /^(?:~|[Nn]ull|NULL)?$/,\n  resolve: function resolve() {\n    return null;\n  },\n  options: nullOptions,\n  stringify: function stringify() {\n    return nullOptions.nullStr;\n  }\n}, {\n  identify: function identify(value) {\n    return typeof value === 'boolean';\n  },\n  default: true,\n  tag: 'tag:yaml.org,2002:bool',\n  test: /^(?:Y|y|[Yy]es|YES|[Tt]rue|TRUE|[Oo]n|ON)$/,\n  resolve: function resolve() {\n    return true;\n  },\n  options: boolOptions,\n  stringify: boolStringify\n}, {\n  identify: function identify(value) {\n    return typeof value === 'boolean';\n  },\n  default: true,\n  tag: 'tag:yaml.org,2002:bool',\n  test: /^(?:N|n|[Nn]o|NO|[Ff]alse|FALSE|[Oo]ff|OFF)$/i,\n  resolve: function resolve() {\n    return false;\n  },\n  options: boolOptions,\n  stringify: boolStringify\n}, {\n  identify: intIdentify,\n  default: true,\n  tag: 'tag:yaml.org,2002:int',\n  format: 'BIN',\n  test: /^([-+]?)0b([0-1_]+)$/,\n  resolve: function resolve(str, sign, bin) {\n    return intResolve(sign, bin, 2);\n  },\n  stringify: function stringify(node) {\n    return intStringify(node, 2, '0b');\n  }\n}, {\n  identify: intIdentify,\n  default: true,\n  tag: 'tag:yaml.org,2002:int',\n  format: 'OCT',\n  test: /^([-+]?)0([0-7_]+)$/,\n  resolve: function resolve(str, sign, oct) {\n    return intResolve(sign, oct, 8);\n  },\n  stringify: function stringify(node) {\n    return intStringify(node, 8, '0');\n  }\n}, {\n  identify: intIdentify,\n  default: true,\n  tag: 'tag:yaml.org,2002:int',\n  test: /^([-+]?)([0-9][0-9_]*)$/,\n  resolve: function resolve(str, sign, abs) {\n    return intResolve(sign, abs, 10);\n  },\n  stringify: stringifyNumber\n}, {\n  identify: intIdentify,\n  default: true,\n  tag: 'tag:yaml.org,2002:int',\n  format: 'HEX',\n  test: /^([-+]?)0x([0-9a-fA-F_]+)$/,\n  resolve: function resolve(str, sign, hex) {\n    return intResolve(sign, hex, 16);\n  },\n  stringify: function stringify(node) {\n    return intStringify(node, 16, '0x');\n  }\n}, {\n  identify: function identify(value) {\n    return typeof value === 'number';\n  },\n  default: true,\n  tag: 'tag:yaml.org,2002:float',\n  test: /^(?:[-+]?\\.inf|(\\.nan))$/i,\n  resolve: function resolve(str, nan) {\n    return nan ? NaN : str[0] === '-' ? Number.NEGATIVE_INFINITY : Number.POSITIVE_INFINITY;\n  },\n  stringify: stringifyNumber\n}, {\n  identify: function identify(value) {\n    return typeof value === 'number';\n  },\n  default: true,\n  tag: 'tag:yaml.org,2002:float',\n  format: 'EXP',\n  test: /^[-+]?([0-9][0-9_]*)?(\\.[0-9_]*)?[eE][-+]?[0-9]+$/,\n  resolve: function resolve(str) {\n    return parseFloat(str.replace(/_/g, ''));\n  },\n  stringify: function stringify(_ref2) {\n    var value = _ref2.value;\n    return Number(value).toExponential();\n  }\n}, {\n  identify: function identify(value) {\n    return typeof value === 'number';\n  },\n  default: true,\n  tag: 'tag:yaml.org,2002:float',\n  test: /^[-+]?(?:[0-9][0-9_]*)?\\.([0-9_]*)$/,\n  resolve: function resolve(str, frac) {\n    var node = new Scalar(parseFloat(str.replace(/_/g, '')));\n\n    if (frac) {\n      var f = frac.replace(/_/g, '');\n      if (f[f.length - 1] === '0') node.minFractionDigits = f.length;\n    }\n\n    return node;\n  },\n  stringify: stringifyNumber\n}], binary, omap, pairs, set, intTime, floatTime, timestamp);\nvar schemas = {\n  core: core,\n  failsafe: failsafe,\n  json: json,\n  yaml11: yaml11\n};\nvar tags = {\n  binary: binary,\n  bool: boolObj,\n  float: floatObj,\n  floatExp: expObj,\n  floatNaN: nanObj,\n  floatTime: floatTime,\n  int: intObj,\n  intHex: hexObj,\n  intOct: octObj,\n  intTime: intTime,\n  map: map,\n  null: nullObj,\n  omap: omap,\n  pairs: pairs,\n  seq: seq,\n  set: set,\n  timestamp: timestamp\n};\n\nfunction findTagObject(value, tagName, tags) {\n  if (tagName) {\n    var match = tags.filter(function (t) {\n      return t.tag === tagName;\n    });\n    var tagObj = match.find(function (t) {\n      return !t.format;\n    }) || match[0];\n    if (!tagObj) throw new Error(\"Tag \".concat(tagName, \" not found\"));\n    return tagObj;\n  } // TODO: deprecate/remove class check\n\n\n  return tags.find(function (t) {\n    return (t.identify && t.identify(value) || t.class && value instanceof t.class) && !t.format;\n  });\n}\n\nfunction createNode(value, tagName, ctx) {\n  if (value instanceof Node) return value;\n  var defaultPrefix = ctx.defaultPrefix,\n      onTagObj = ctx.onTagObj,\n      prevObjects = ctx.prevObjects,\n      schema = ctx.schema,\n      wrapScalars = ctx.wrapScalars;\n  if (tagName && tagName.startsWith('!!')) tagName = defaultPrefix + tagName.slice(2);\n  var tagObj = findTagObject(value, tagName, schema.tags);\n\n  if (!tagObj) {\n    if (typeof value.toJSON === 'function') value = value.toJSON();\n    if (!value || _typeof(value) !== 'object') return wrapScalars ? new Scalar(value) : value;\n    tagObj = value instanceof Map ? map : value[Symbol.iterator] ? seq : map;\n  }\n\n  if (onTagObj) {\n    onTagObj(tagObj);\n    delete ctx.onTagObj;\n  } // Detect duplicate references to the same object & use Alias nodes for all\n  // after first. The `obj` wrapper allows for circular references to resolve.\n\n\n  var obj = {\n    value: undefined,\n    node: undefined\n  };\n\n  if (value && _typeof(value) === 'object' && prevObjects) {\n    var prev = prevObjects.get(value);\n\n    if (prev) {\n      var alias = new Alias(prev); // leaves source dirty; must be cleaned by caller\n\n      ctx.aliasNodes.push(alias); // defined along with prevObjects\n\n      return alias;\n    }\n\n    obj.value = value;\n    prevObjects.set(value, obj);\n  }\n\n  obj.node = tagObj.createNode ? tagObj.createNode(ctx.schema, value, ctx) : wrapScalars ? new Scalar(value) : value;\n  if (tagName && obj.node instanceof Node) obj.node.tag = tagName;\n  return obj.node;\n}\n\nfunction getSchemaTags(schemas, knownTags, customTags, schemaId) {\n  var tags = schemas[schemaId.replace(/\\W/g, '')]; // 'yaml-1.1' -> 'yaml11'\n\n  if (!tags) {\n    var keys = Object.keys(schemas).map(function (key) {\n      return JSON.stringify(key);\n    }).join(', ');\n    throw new Error(\"Unknown schema \\\"\".concat(schemaId, \"\\\"; use one of \").concat(keys));\n  }\n\n  if (Array.isArray(customTags)) {\n    var _iterator = _createForOfIteratorHelper(customTags),\n        _step;\n\n    try {\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        var tag = _step.value;\n        tags = tags.concat(tag);\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n  } else if (typeof customTags === 'function') {\n    tags = customTags(tags.slice());\n  }\n\n  for (var i = 0; i < tags.length; ++i) {\n    var _tag = tags[i];\n\n    if (typeof _tag === 'string') {\n      var tagObj = knownTags[_tag];\n\n      if (!tagObj) {\n        var _keys = Object.keys(knownTags).map(function (key) {\n          return JSON.stringify(key);\n        }).join(', ');\n\n        throw new Error(\"Unknown custom tag \\\"\".concat(_tag, \"\\\"; use one of \").concat(_keys));\n      }\n\n      tags[i] = tagObj;\n    }\n  }\n\n  return tags;\n}\n\nvar sortMapEntriesByKey = function sortMapEntriesByKey(a, b) {\n  return a.key < b.key ? -1 : a.key > b.key ? 1 : 0;\n};\n\nvar Schema = /*#__PURE__*/function () {\n  // TODO: remove in v2\n  // TODO: remove in v2\n  function Schema(_ref) {\n    var customTags = _ref.customTags,\n        merge = _ref.merge,\n        schema = _ref.schema,\n        sortMapEntries = _ref.sortMapEntries,\n        deprecatedCustomTags = _ref.tags;\n\n    _classCallCheck(this, Schema);\n\n    this.merge = !!merge;\n    this.name = schema;\n    this.sortMapEntries = sortMapEntries === true ? sortMapEntriesByKey : sortMapEntries || null;\n    if (!customTags && deprecatedCustomTags) warnOptionDeprecation('tags', 'customTags');\n    this.tags = getSchemaTags(schemas, tags, customTags || deprecatedCustomTags, schema);\n  }\n\n  _createClass(Schema, [{\n    key: \"createNode\",\n    value: function createNode$1(value, wrapScalars, tagName, ctx) {\n      var baseCtx = {\n        defaultPrefix: Schema.defaultPrefix,\n        schema: this,\n        wrapScalars: wrapScalars\n      };\n      var createCtx = ctx ? Object.assign(ctx, baseCtx) : baseCtx;\n      return createNode(value, tagName, createCtx);\n    }\n  }, {\n    key: \"createPair\",\n    value: function createPair(key, value, ctx) {\n      if (!ctx) ctx = {\n        wrapScalars: true\n      };\n      var k = this.createNode(key, ctx.wrapScalars, null, ctx);\n      var v = this.createNode(value, ctx.wrapScalars, null, ctx);\n      return new Pair(k, v);\n    }\n  }]);\n\n  return Schema;\n}();\n\n_defineProperty(Schema, \"defaultPrefix\", defaultTagPrefix);\n\n_defineProperty(Schema, \"defaultTags\", defaultTags);\n\nexport { Schema as S };","map":{"version":3,"sources":["/home/dev/Documentos/Projects/github-clone/node_modules/yaml/browser/dist/Schema-e94716c8.js"],"names":["_","_createForOfIteratorHelper","h","_slicedToArray","a","_typeof","b","_createClass","e","_defineProperty","c","_classCallCheck","d","defaultTagPrefix","n","defaultTags","YAMLMap","g","resolveMap","Y","YAMLSeq","resolveSeq","j","resolveString","stringifyString","s","strOptions","S","Scalar","nullOptions","boolOptions","i","intOptions","k","stringifyNumber","N","Node","A","Alias","P","Pair","binary","o","omap","p","pairs","set","intTime","f","floatTime","t","timestamp","warnOptionDeprecation","createMap","schema","obj","ctx","map","Map","_iterator","_step","done","_step$value","value","key","items","push","createPair","err","_i","_Object$keys","Object","keys","length","_key","sortMapEntries","sort","createNode","default","nodeClass","tag","resolve","createSeq","seq","Symbol","iterator","it","v","wrapScalars","string","identify","stringify","item","onComment","onChompKeep","assign","actualString","options","failsafe","intIdentify$2","intIdentify","Number","isInteger","intResolve$1","intResolve","src","part","radix","asBigInt","BigInt","parseInt","intStringify$1","node","prefix","toString","nullObj","test","nullStr","boolObj","str","_ref","trueStr","falseStr","octObj","format","oct","intObj","hexObj","hex","nanObj","nan","NaN","NEGATIVE_INFINITY","POSITIVE_INFINITY","expObj","parseFloat","_ref2","toExponential","floatObj","frac1","frac2","frac","minFractionDigits","core","concat","intIdentify$1","stringifyJSON","JSON","json","scalarFallback","SyntaxError","boolStringify","sign","replace","_n","intStringify","substr","yaml11","bin","abs","schemas","tags","bool","float","floatExp","floatNaN","int","intHex","intOct","null","findTagObject","tagName","match","filter","tagObj","find","Error","class","defaultPrefix","onTagObj","prevObjects","startsWith","slice","toJSON","undefined","prev","get","alias","aliasNodes","getSchemaTags","knownTags","customTags","schemaId","join","Array","isArray","_tag","_keys","sortMapEntriesByKey","Schema","merge","deprecatedCustomTags","name","createNode$1","baseCtx","createCtx"],"mappings":"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","sourcesContent":["import { _ as _createForOfIteratorHelper, h as _slicedToArray, a as _typeof, b as _createClass, e as _defineProperty, c as _classCallCheck, d as defaultTagPrefix, n as defaultTags } from './PlainValue-b8036b75.js';\nimport { d as YAMLMap, g as resolveMap, Y as YAMLSeq, h as resolveSeq, j as resolveString, c as stringifyString, s as strOptions, S as Scalar, n as nullOptions, a as boolOptions, i as intOptions, k as stringifyNumber, N as Node, A as Alias, P as Pair } from './resolveSeq-492ab440.js';\nimport { b as binary, o as omap, p as pairs, s as set, i as intTime, f as floatTime, t as timestamp, a as warnOptionDeprecation } from './warnings-df54cb69.js';\n\nfunction createMap(schema, obj, ctx) {\n  var map = new YAMLMap(schema);\n\n  if (obj instanceof Map) {\n    var _iterator = _createForOfIteratorHelper(obj),\n        _step;\n\n    try {\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        var _step$value = _slicedToArray(_step.value, 2),\n            key = _step$value[0],\n            value = _step$value[1];\n\n        map.items.push(schema.createPair(key, value, ctx));\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n  } else if (obj && _typeof(obj) === 'object') {\n    for (var _i = 0, _Object$keys = Object.keys(obj); _i < _Object$keys.length; _i++) {\n      var _key = _Object$keys[_i];\n      map.items.push(schema.createPair(_key, obj[_key], ctx));\n    }\n  }\n\n  if (typeof schema.sortMapEntries === 'function') {\n    map.items.sort(schema.sortMapEntries);\n  }\n\n  return map;\n}\n\nvar map = {\n  createNode: createMap,\n  default: true,\n  nodeClass: YAMLMap,\n  tag: 'tag:yaml.org,2002:map',\n  resolve: resolveMap\n};\n\nfunction createSeq(schema, obj, ctx) {\n  var seq = new YAMLSeq(schema);\n\n  if (obj && obj[Symbol.iterator]) {\n    var _iterator = _createForOfIteratorHelper(obj),\n        _step;\n\n    try {\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        var it = _step.value;\n        var v = schema.createNode(it, ctx.wrapScalars, null, ctx);\n        seq.items.push(v);\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n  }\n\n  return seq;\n}\n\nvar seq = {\n  createNode: createSeq,\n  default: true,\n  nodeClass: YAMLSeq,\n  tag: 'tag:yaml.org,2002:seq',\n  resolve: resolveSeq\n};\n\nvar string = {\n  identify: function identify(value) {\n    return typeof value === 'string';\n  },\n  default: true,\n  tag: 'tag:yaml.org,2002:str',\n  resolve: resolveString,\n  stringify: function stringify(item, ctx, onComment, onChompKeep) {\n    ctx = Object.assign({\n      actualString: true\n    }, ctx);\n    return stringifyString(item, ctx, onComment, onChompKeep);\n  },\n  options: strOptions\n};\n\nvar failsafe = [map, seq, string];\n\n/* global BigInt */\n\nvar intIdentify$2 = function intIdentify(value) {\n  return typeof value === 'bigint' || Number.isInteger(value);\n};\n\nvar intResolve$1 = function intResolve(src, part, radix) {\n  return intOptions.asBigInt ? BigInt(src) : parseInt(part, radix);\n};\n\nfunction intStringify$1(node, radix, prefix) {\n  var value = node.value;\n  if (intIdentify$2(value) && value >= 0) return prefix + value.toString(radix);\n  return stringifyNumber(node);\n}\n\nvar nullObj = {\n  identify: function identify(value) {\n    return value == null;\n  },\n  createNode: function createNode(schema, value, ctx) {\n    return ctx.wrapScalars ? new Scalar(null) : null;\n  },\n  default: true,\n  tag: 'tag:yaml.org,2002:null',\n  test: /^(?:~|[Nn]ull|NULL)?$/,\n  resolve: function resolve() {\n    return null;\n  },\n  options: nullOptions,\n  stringify: function stringify() {\n    return nullOptions.nullStr;\n  }\n};\nvar boolObj = {\n  identify: function identify(value) {\n    return typeof value === 'boolean';\n  },\n  default: true,\n  tag: 'tag:yaml.org,2002:bool',\n  test: /^(?:[Tt]rue|TRUE|[Ff]alse|FALSE)$/,\n  resolve: function resolve(str) {\n    return str[0] === 't' || str[0] === 'T';\n  },\n  options: boolOptions,\n  stringify: function stringify(_ref) {\n    var value = _ref.value;\n    return value ? boolOptions.trueStr : boolOptions.falseStr;\n  }\n};\nvar octObj = {\n  identify: function identify(value) {\n    return intIdentify$2(value) && value >= 0;\n  },\n  default: true,\n  tag: 'tag:yaml.org,2002:int',\n  format: 'OCT',\n  test: /^0o([0-7]+)$/,\n  resolve: function resolve(str, oct) {\n    return intResolve$1(str, oct, 8);\n  },\n  options: intOptions,\n  stringify: function stringify(node) {\n    return intStringify$1(node, 8, '0o');\n  }\n};\nvar intObj = {\n  identify: intIdentify$2,\n  default: true,\n  tag: 'tag:yaml.org,2002:int',\n  test: /^[-+]?[0-9]+$/,\n  resolve: function resolve(str) {\n    return intResolve$1(str, str, 10);\n  },\n  options: intOptions,\n  stringify: stringifyNumber\n};\nvar hexObj = {\n  identify: function identify(value) {\n    return intIdentify$2(value) && value >= 0;\n  },\n  default: true,\n  tag: 'tag:yaml.org,2002:int',\n  format: 'HEX',\n  test: /^0x([0-9a-fA-F]+)$/,\n  resolve: function resolve(str, hex) {\n    return intResolve$1(str, hex, 16);\n  },\n  options: intOptions,\n  stringify: function stringify(node) {\n    return intStringify$1(node, 16, '0x');\n  }\n};\nvar nanObj = {\n  identify: function identify(value) {\n    return typeof value === 'number';\n  },\n  default: true,\n  tag: 'tag:yaml.org,2002:float',\n  test: /^(?:[-+]?\\.inf|(\\.nan))$/i,\n  resolve: function resolve(str, nan) {\n    return nan ? NaN : str[0] === '-' ? Number.NEGATIVE_INFINITY : Number.POSITIVE_INFINITY;\n  },\n  stringify: stringifyNumber\n};\nvar expObj = {\n  identify: function identify(value) {\n    return typeof value === 'number';\n  },\n  default: true,\n  tag: 'tag:yaml.org,2002:float',\n  format: 'EXP',\n  test: /^[-+]?(?:\\.[0-9]+|[0-9]+(?:\\.[0-9]*)?)[eE][-+]?[0-9]+$/,\n  resolve: function resolve(str) {\n    return parseFloat(str);\n  },\n  stringify: function stringify(_ref2) {\n    var value = _ref2.value;\n    return Number(value).toExponential();\n  }\n};\nvar floatObj = {\n  identify: function identify(value) {\n    return typeof value === 'number';\n  },\n  default: true,\n  tag: 'tag:yaml.org,2002:float',\n  test: /^[-+]?(?:\\.([0-9]+)|[0-9]+\\.([0-9]*))$/,\n  resolve: function resolve(str, frac1, frac2) {\n    var frac = frac1 || frac2;\n    var node = new Scalar(parseFloat(str));\n    if (frac && frac[frac.length - 1] === '0') node.minFractionDigits = frac.length;\n    return node;\n  },\n  stringify: stringifyNumber\n};\nvar core = failsafe.concat([nullObj, boolObj, octObj, intObj, hexObj, nanObj, expObj, floatObj]);\n\n/* global BigInt */\n\nvar intIdentify$1 = function intIdentify(value) {\n  return typeof value === 'bigint' || Number.isInteger(value);\n};\n\nvar stringifyJSON = function stringifyJSON(_ref) {\n  var value = _ref.value;\n  return JSON.stringify(value);\n};\n\nvar json = [map, seq, {\n  identify: function identify(value) {\n    return typeof value === 'string';\n  },\n  default: true,\n  tag: 'tag:yaml.org,2002:str',\n  resolve: resolveString,\n  stringify: stringifyJSON\n}, {\n  identify: function identify(value) {\n    return value == null;\n  },\n  createNode: function createNode(schema, value, ctx) {\n    return ctx.wrapScalars ? new Scalar(null) : null;\n  },\n  default: true,\n  tag: 'tag:yaml.org,2002:null',\n  test: /^null$/,\n  resolve: function resolve() {\n    return null;\n  },\n  stringify: stringifyJSON\n}, {\n  identify: function identify(value) {\n    return typeof value === 'boolean';\n  },\n  default: true,\n  tag: 'tag:yaml.org,2002:bool',\n  test: /^true|false$/,\n  resolve: function resolve(str) {\n    return str === 'true';\n  },\n  stringify: stringifyJSON\n}, {\n  identify: intIdentify$1,\n  default: true,\n  tag: 'tag:yaml.org,2002:int',\n  test: /^-?(?:0|[1-9][0-9]*)$/,\n  resolve: function resolve(str) {\n    return intOptions.asBigInt ? BigInt(str) : parseInt(str, 10);\n  },\n  stringify: function stringify(_ref2) {\n    var value = _ref2.value;\n    return intIdentify$1(value) ? value.toString() : JSON.stringify(value);\n  }\n}, {\n  identify: function identify(value) {\n    return typeof value === 'number';\n  },\n  default: true,\n  tag: 'tag:yaml.org,2002:float',\n  test: /^-?(?:0|[1-9][0-9]*)(?:\\.[0-9]*)?(?:[eE][-+]?[0-9]+)?$/,\n  resolve: function resolve(str) {\n    return parseFloat(str);\n  },\n  stringify: stringifyJSON\n}];\n\njson.scalarFallback = function (str) {\n  throw new SyntaxError(\"Unresolved plain scalar \".concat(JSON.stringify(str)));\n};\n\n/* global BigInt */\n\nvar boolStringify = function boolStringify(_ref) {\n  var value = _ref.value;\n  return value ? boolOptions.trueStr : boolOptions.falseStr;\n};\n\nvar intIdentify = function intIdentify(value) {\n  return typeof value === 'bigint' || Number.isInteger(value);\n};\n\nfunction intResolve(sign, src, radix) {\n  var str = src.replace(/_/g, '');\n\n  if (intOptions.asBigInt) {\n    switch (radix) {\n      case 2:\n        str = \"0b\".concat(str);\n        break;\n\n      case 8:\n        str = \"0o\".concat(str);\n        break;\n\n      case 16:\n        str = \"0x\".concat(str);\n        break;\n    }\n\n    var _n = BigInt(str);\n\n    return sign === '-' ? BigInt(-1) * _n : _n;\n  }\n\n  var n = parseInt(str, radix);\n  return sign === '-' ? -1 * n : n;\n}\n\nfunction intStringify(node, radix, prefix) {\n  var value = node.value;\n\n  if (intIdentify(value)) {\n    var str = value.toString(radix);\n    return value < 0 ? '-' + prefix + str.substr(1) : prefix + str;\n  }\n\n  return stringifyNumber(node);\n}\n\nvar yaml11 = failsafe.concat([{\n  identify: function identify(value) {\n    return value == null;\n  },\n  createNode: function createNode(schema, value, ctx) {\n    return ctx.wrapScalars ? new Scalar(null) : null;\n  },\n  default: true,\n  tag: 'tag:yaml.org,2002:null',\n  test: /^(?:~|[Nn]ull|NULL)?$/,\n  resolve: function resolve() {\n    return null;\n  },\n  options: nullOptions,\n  stringify: function stringify() {\n    return nullOptions.nullStr;\n  }\n}, {\n  identify: function identify(value) {\n    return typeof value === 'boolean';\n  },\n  default: true,\n  tag: 'tag:yaml.org,2002:bool',\n  test: /^(?:Y|y|[Yy]es|YES|[Tt]rue|TRUE|[Oo]n|ON)$/,\n  resolve: function resolve() {\n    return true;\n  },\n  options: boolOptions,\n  stringify: boolStringify\n}, {\n  identify: function identify(value) {\n    return typeof value === 'boolean';\n  },\n  default: true,\n  tag: 'tag:yaml.org,2002:bool',\n  test: /^(?:N|n|[Nn]o|NO|[Ff]alse|FALSE|[Oo]ff|OFF)$/i,\n  resolve: function resolve() {\n    return false;\n  },\n  options: boolOptions,\n  stringify: boolStringify\n}, {\n  identify: intIdentify,\n  default: true,\n  tag: 'tag:yaml.org,2002:int',\n  format: 'BIN',\n  test: /^([-+]?)0b([0-1_]+)$/,\n  resolve: function resolve(str, sign, bin) {\n    return intResolve(sign, bin, 2);\n  },\n  stringify: function stringify(node) {\n    return intStringify(node, 2, '0b');\n  }\n}, {\n  identify: intIdentify,\n  default: true,\n  tag: 'tag:yaml.org,2002:int',\n  format: 'OCT',\n  test: /^([-+]?)0([0-7_]+)$/,\n  resolve: function resolve(str, sign, oct) {\n    return intResolve(sign, oct, 8);\n  },\n  stringify: function stringify(node) {\n    return intStringify(node, 8, '0');\n  }\n}, {\n  identify: intIdentify,\n  default: true,\n  tag: 'tag:yaml.org,2002:int',\n  test: /^([-+]?)([0-9][0-9_]*)$/,\n  resolve: function resolve(str, sign, abs) {\n    return intResolve(sign, abs, 10);\n  },\n  stringify: stringifyNumber\n}, {\n  identify: intIdentify,\n  default: true,\n  tag: 'tag:yaml.org,2002:int',\n  format: 'HEX',\n  test: /^([-+]?)0x([0-9a-fA-F_]+)$/,\n  resolve: function resolve(str, sign, hex) {\n    return intResolve(sign, hex, 16);\n  },\n  stringify: function stringify(node) {\n    return intStringify(node, 16, '0x');\n  }\n}, {\n  identify: function identify(value) {\n    return typeof value === 'number';\n  },\n  default: true,\n  tag: 'tag:yaml.org,2002:float',\n  test: /^(?:[-+]?\\.inf|(\\.nan))$/i,\n  resolve: function resolve(str, nan) {\n    return nan ? NaN : str[0] === '-' ? Number.NEGATIVE_INFINITY : Number.POSITIVE_INFINITY;\n  },\n  stringify: stringifyNumber\n}, {\n  identify: function identify(value) {\n    return typeof value === 'number';\n  },\n  default: true,\n  tag: 'tag:yaml.org,2002:float',\n  format: 'EXP',\n  test: /^[-+]?([0-9][0-9_]*)?(\\.[0-9_]*)?[eE][-+]?[0-9]+$/,\n  resolve: function resolve(str) {\n    return parseFloat(str.replace(/_/g, ''));\n  },\n  stringify: function stringify(_ref2) {\n    var value = _ref2.value;\n    return Number(value).toExponential();\n  }\n}, {\n  identify: function identify(value) {\n    return typeof value === 'number';\n  },\n  default: true,\n  tag: 'tag:yaml.org,2002:float',\n  test: /^[-+]?(?:[0-9][0-9_]*)?\\.([0-9_]*)$/,\n  resolve: function resolve(str, frac) {\n    var node = new Scalar(parseFloat(str.replace(/_/g, '')));\n\n    if (frac) {\n      var f = frac.replace(/_/g, '');\n      if (f[f.length - 1] === '0') node.minFractionDigits = f.length;\n    }\n\n    return node;\n  },\n  stringify: stringifyNumber\n}], binary, omap, pairs, set, intTime, floatTime, timestamp);\n\nvar schemas = {\n  core: core,\n  failsafe: failsafe,\n  json: json,\n  yaml11: yaml11\n};\nvar tags = {\n  binary: binary,\n  bool: boolObj,\n  float: floatObj,\n  floatExp: expObj,\n  floatNaN: nanObj,\n  floatTime: floatTime,\n  int: intObj,\n  intHex: hexObj,\n  intOct: octObj,\n  intTime: intTime,\n  map: map,\n  null: nullObj,\n  omap: omap,\n  pairs: pairs,\n  seq: seq,\n  set: set,\n  timestamp: timestamp\n};\n\nfunction findTagObject(value, tagName, tags) {\n  if (tagName) {\n    var match = tags.filter(function (t) {\n      return t.tag === tagName;\n    });\n    var tagObj = match.find(function (t) {\n      return !t.format;\n    }) || match[0];\n    if (!tagObj) throw new Error(\"Tag \".concat(tagName, \" not found\"));\n    return tagObj;\n  } // TODO: deprecate/remove class check\n\n\n  return tags.find(function (t) {\n    return (t.identify && t.identify(value) || t.class && value instanceof t.class) && !t.format;\n  });\n}\n\nfunction createNode(value, tagName, ctx) {\n  if (value instanceof Node) return value;\n  var defaultPrefix = ctx.defaultPrefix,\n      onTagObj = ctx.onTagObj,\n      prevObjects = ctx.prevObjects,\n      schema = ctx.schema,\n      wrapScalars = ctx.wrapScalars;\n  if (tagName && tagName.startsWith('!!')) tagName = defaultPrefix + tagName.slice(2);\n  var tagObj = findTagObject(value, tagName, schema.tags);\n\n  if (!tagObj) {\n    if (typeof value.toJSON === 'function') value = value.toJSON();\n    if (!value || _typeof(value) !== 'object') return wrapScalars ? new Scalar(value) : value;\n    tagObj = value instanceof Map ? map : value[Symbol.iterator] ? seq : map;\n  }\n\n  if (onTagObj) {\n    onTagObj(tagObj);\n    delete ctx.onTagObj;\n  } // Detect duplicate references to the same object & use Alias nodes for all\n  // after first. The `obj` wrapper allows for circular references to resolve.\n\n\n  var obj = {\n    value: undefined,\n    node: undefined\n  };\n\n  if (value && _typeof(value) === 'object' && prevObjects) {\n    var prev = prevObjects.get(value);\n\n    if (prev) {\n      var alias = new Alias(prev); // leaves source dirty; must be cleaned by caller\n\n      ctx.aliasNodes.push(alias); // defined along with prevObjects\n\n      return alias;\n    }\n\n    obj.value = value;\n    prevObjects.set(value, obj);\n  }\n\n  obj.node = tagObj.createNode ? tagObj.createNode(ctx.schema, value, ctx) : wrapScalars ? new Scalar(value) : value;\n  if (tagName && obj.node instanceof Node) obj.node.tag = tagName;\n  return obj.node;\n}\n\nfunction getSchemaTags(schemas, knownTags, customTags, schemaId) {\n  var tags = schemas[schemaId.replace(/\\W/g, '')]; // 'yaml-1.1' -> 'yaml11'\n\n  if (!tags) {\n    var keys = Object.keys(schemas).map(function (key) {\n      return JSON.stringify(key);\n    }).join(', ');\n    throw new Error(\"Unknown schema \\\"\".concat(schemaId, \"\\\"; use one of \").concat(keys));\n  }\n\n  if (Array.isArray(customTags)) {\n    var _iterator = _createForOfIteratorHelper(customTags),\n        _step;\n\n    try {\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        var tag = _step.value;\n        tags = tags.concat(tag);\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n  } else if (typeof customTags === 'function') {\n    tags = customTags(tags.slice());\n  }\n\n  for (var i = 0; i < tags.length; ++i) {\n    var _tag = tags[i];\n\n    if (typeof _tag === 'string') {\n      var tagObj = knownTags[_tag];\n\n      if (!tagObj) {\n        var _keys = Object.keys(knownTags).map(function (key) {\n          return JSON.stringify(key);\n        }).join(', ');\n\n        throw new Error(\"Unknown custom tag \\\"\".concat(_tag, \"\\\"; use one of \").concat(_keys));\n      }\n\n      tags[i] = tagObj;\n    }\n  }\n\n  return tags;\n}\n\nvar sortMapEntriesByKey = function sortMapEntriesByKey(a, b) {\n  return a.key < b.key ? -1 : a.key > b.key ? 1 : 0;\n};\n\nvar Schema = /*#__PURE__*/function () {\n  // TODO: remove in v2\n  // TODO: remove in v2\n  function Schema(_ref) {\n    var customTags = _ref.customTags,\n        merge = _ref.merge,\n        schema = _ref.schema,\n        sortMapEntries = _ref.sortMapEntries,\n        deprecatedCustomTags = _ref.tags;\n\n    _classCallCheck(this, Schema);\n\n    this.merge = !!merge;\n    this.name = schema;\n    this.sortMapEntries = sortMapEntries === true ? sortMapEntriesByKey : sortMapEntries || null;\n    if (!customTags && deprecatedCustomTags) warnOptionDeprecation('tags', 'customTags');\n    this.tags = getSchemaTags(schemas, tags, customTags || deprecatedCustomTags, schema);\n  }\n\n  _createClass(Schema, [{\n    key: \"createNode\",\n    value: function createNode$1(value, wrapScalars, tagName, ctx) {\n      var baseCtx = {\n        defaultPrefix: Schema.defaultPrefix,\n        schema: this,\n        wrapScalars: wrapScalars\n      };\n      var createCtx = ctx ? Object.assign(ctx, baseCtx) : baseCtx;\n      return createNode(value, tagName, createCtx);\n    }\n  }, {\n    key: \"createPair\",\n    value: function createPair(key, value, ctx) {\n      if (!ctx) ctx = {\n        wrapScalars: true\n      };\n      var k = this.createNode(key, ctx.wrapScalars, null, ctx);\n      var v = this.createNode(value, ctx.wrapScalars, null, ctx);\n      return new Pair(k, v);\n    }\n  }]);\n\n  return Schema;\n}();\n\n_defineProperty(Schema, \"defaultPrefix\", defaultTagPrefix);\n\n_defineProperty(Schema, \"defaultTags\", defaultTags);\n\nexport { Schema as S };\n"]},"metadata":{},"sourceType":"module"}