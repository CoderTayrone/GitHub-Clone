{"ast":null,"code":"/**\n * node-compress-commons\n *\n * Copyright (c) 2014 Chris Talkington, contributors.\n * Licensed under the MIT license.\n * https://github.com/archiverjs/node-compress-commons/blob/master/LICENSE-MIT\n */\nvar Stream = require('stream').Stream;\n\nvar PassThrough = require('readable-stream').PassThrough;\n\nvar util = module.exports = {};\n\nutil.isStream = function (source) {\n  return source instanceof Stream;\n};\n\nutil.normalizeInputSource = function (source) {\n  if (source === null) {\n    return Buffer.alloc(0);\n  } else if (typeof source === 'string') {\n    return Buffer.from(source);\n  } else if (util.isStream(source) && !source._readableState) {\n    var normalized = new PassThrough();\n    source.pipe(normalized);\n    return normalized;\n  }\n\n  return source;\n};","map":{"version":3,"sources":["/home/dev/Documentos/Projects/github-clone/node_modules/compress-commons/lib/util/index.js"],"names":["Stream","require","PassThrough","util","module","exports","isStream","source","normalizeInputSource","Buffer","alloc","from","_readableState","normalized","pipe"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAIA,MAAM,GAAGC,OAAO,CAAC,QAAD,CAAP,CAAkBD,MAA/B;;AACA,IAAIE,WAAW,GAAGD,OAAO,CAAC,iBAAD,CAAP,CAA2BC,WAA7C;;AAEA,IAAIC,IAAI,GAAGC,MAAM,CAACC,OAAP,GAAiB,EAA5B;;AAEAF,IAAI,CAACG,QAAL,GAAgB,UAASC,MAAT,EAAiB;AAC/B,SAAOA,MAAM,YAAYP,MAAzB;AACD,CAFD;;AAIAG,IAAI,CAACK,oBAAL,GAA4B,UAASD,MAAT,EAAiB;AAC3C,MAAIA,MAAM,KAAK,IAAf,EAAqB;AACnB,WAAOE,MAAM,CAACC,KAAP,CAAa,CAAb,CAAP;AACD,GAFD,MAEO,IAAI,OAAOH,MAAP,KAAkB,QAAtB,EAAgC;AACrC,WAAOE,MAAM,CAACE,IAAP,CAAYJ,MAAZ,CAAP;AACD,GAFM,MAEA,IAAIJ,IAAI,CAACG,QAAL,CAAcC,MAAd,KAAyB,CAACA,MAAM,CAACK,cAArC,EAAqD;AAC1D,QAAIC,UAAU,GAAG,IAAIX,WAAJ,EAAjB;AACAK,IAAAA,MAAM,CAACO,IAAP,CAAYD,UAAZ;AAEA,WAAOA,UAAP;AACD;;AAED,SAAON,MAAP;AACD,CAbD","sourcesContent":["/**\n * node-compress-commons\n *\n * Copyright (c) 2014 Chris Talkington, contributors.\n * Licensed under the MIT license.\n * https://github.com/archiverjs/node-compress-commons/blob/master/LICENSE-MIT\n */\nvar Stream = require('stream').Stream;\nvar PassThrough = require('readable-stream').PassThrough;\n\nvar util = module.exports = {};\n\nutil.isStream = function(source) {\n  return source instanceof Stream;\n};\n\nutil.normalizeInputSource = function(source) {\n  if (source === null) {\n    return Buffer.alloc(0);\n  } else if (typeof source === 'string') {\n    return Buffer.from(source);\n  } else if (util.isStream(source) && !source._readableState) {\n    var normalized = new PassThrough();\n    source.pipe(normalized);\n\n    return normalized;\n  }\n\n  return source;\n};"]},"metadata":{},"sourceType":"script"}