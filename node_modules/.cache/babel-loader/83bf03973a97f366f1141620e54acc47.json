{"ast":null,"code":"var toxic = require('toxic');\n\nvar globSlash = require('glob-slash');\n\nvar isObject = require('lodash.isobject');\n\nmodule.exports = function globSlasher(spec, options) {\n  options = options || {};\n\n  if (!spec || typeof spec === 'function') {\n    return spec;\n  } // Arrays\n\n\n  if (Array.isArray(spec)) {\n    return spec.map(defaultMutator);\n  } // Strings or numbers\n\n\n  if (!isObject(spec)) {\n    return globSlash(spec.toString());\n  } // Objects\n\n\n  return toxic(spec, {\n    mutator: function (value) {\n      if (options.value === false || !isValidValueType(value)) {\n        return value;\n      }\n\n      return globSlash(value);\n    },\n    keyMutator: function (key) {\n      if (options.key === false) {\n        return key;\n      }\n\n      return globSlash(key);\n    }\n  });\n};\n\nfunction defaultMutator(value) {\n  if (typeof value !== 'string') {\n    return value;\n  }\n\n  return globSlash(value);\n}\n\nfunction isValidValueType(value) {\n  return value && !Array.isArray(value) && typeof value !== 'object' && typeof value !== 'function';\n}","map":{"version":3,"sources":["/home/dev/Documentos/Projects/github-clone/node_modules/glob-slasher/index.js"],"names":["toxic","require","globSlash","isObject","module","exports","globSlasher","spec","options","Array","isArray","map","defaultMutator","toString","mutator","value","isValidValueType","keyMutator","key"],"mappings":"AAAA,IAAIA,KAAK,GAAGC,OAAO,CAAC,OAAD,CAAnB;;AACA,IAAIC,SAAS,GAAGD,OAAO,CAAC,YAAD,CAAvB;;AACA,IAAIE,QAAQ,GAAGF,OAAO,CAAC,iBAAD,CAAtB;;AAEAG,MAAM,CAACC,OAAP,GAAiB,SAASC,WAAT,CAAsBC,IAAtB,EAA4BC,OAA5B,EAAqC;AAEpDA,EAAAA,OAAO,GAAGA,OAAO,IAAI,EAArB;;AAEA,MAAI,CAACD,IAAD,IAAS,OAAOA,IAAP,KAAgB,UAA7B,EAAyC;AACvC,WAAOA,IAAP;AACD,GANmD,CAQpD;;;AACA,MAAIE,KAAK,CAACC,OAAN,CAAcH,IAAd,CAAJ,EAAyB;AACvB,WAAOA,IAAI,CAACI,GAAL,CAASC,cAAT,CAAP;AACD,GAXmD,CAapD;;;AACA,MAAI,CAACT,QAAQ,CAACI,IAAD,CAAb,EAAqB;AACnB,WAAOL,SAAS,CAACK,IAAI,CAACM,QAAL,EAAD,CAAhB;AACD,GAhBmD,CAkBpD;;;AACA,SAAOb,KAAK,CAACO,IAAD,EAAO;AACjBO,IAAAA,OAAO,EAAE,UAAUC,KAAV,EAAiB;AAExB,UAAIP,OAAO,CAACO,KAAR,KAAkB,KAAlB,IAA2B,CAACC,gBAAgB,CAACD,KAAD,CAAhD,EAAyD;AACvD,eAAOA,KAAP;AACD;;AAED,aAAOb,SAAS,CAACa,KAAD,CAAhB;AACD,KARgB;AASjBE,IAAAA,UAAU,EAAE,UAAUC,GAAV,EAAe;AAEzB,UAAIV,OAAO,CAACU,GAAR,KAAgB,KAApB,EAA2B;AACzB,eAAOA,GAAP;AACD;;AAED,aAAOhB,SAAS,CAACgB,GAAD,CAAhB;AACD;AAhBgB,GAAP,CAAZ;AAkBD,CArCD;;AAuCA,SAASN,cAAT,CAAyBG,KAAzB,EAAgC;AAE9B,MAAI,OAAOA,KAAP,KAAiB,QAArB,EAA+B;AAC7B,WAAOA,KAAP;AACD;;AAED,SAAOb,SAAS,CAACa,KAAD,CAAhB;AACD;;AAED,SAASC,gBAAT,CAA2BD,KAA3B,EAAkC;AAChC,SAAOA,KAAK,IACP,CAACN,KAAK,CAACC,OAAN,CAAcK,KAAd,CADC,IAEF,OAAOA,KAAP,KAAiB,QAFf,IAGF,OAAOA,KAAP,KAAiB,UAHtB;AAID","sourcesContent":["var toxic = require('toxic');\nvar globSlash = require('glob-slash');\nvar isObject = require('lodash.isobject');\n\nmodule.exports = function globSlasher (spec, options) {\n  \n  options = options || {};\n  \n  if (!spec || typeof spec === 'function') {\n    return spec;\n  }\n  \n  // Arrays\n  if (Array.isArray(spec)) {\n    return spec.map(defaultMutator);\n  }\n  \n  // Strings or numbers\n  if (!isObject(spec)) {\n    return globSlash(spec.toString());\n  }\n  \n  // Objects\n  return toxic(spec, {\n    mutator: function (value) {\n      \n      if (options.value === false || !isValidValueType(value)) {\n        return value;\n      }\n      \n      return globSlash(value);\n    },\n    keyMutator: function (key) {\n      \n      if (options.key === false) {\n        return key;\n      }\n      \n      return globSlash(key);\n    }\n  });\n};\n\nfunction defaultMutator (value) {\n  \n  if (typeof value !== 'string') {\n    return value;\n  }\n  \n  return globSlash(value);\n}\n\nfunction isValidValueType (value) {\n  return value\n    && !Array.isArray(value)\n    && typeof value !== 'object'\n    && typeof value !== 'function'\n}"]},"metadata":{},"sourceType":"script"}