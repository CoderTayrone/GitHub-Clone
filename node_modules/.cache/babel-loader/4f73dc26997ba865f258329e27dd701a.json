{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nconst debug_1 = __importDefault(require(\"debug\"));\n\nconst url_1 = require(\"url\"); // Built-in protocols\n\n\nconst data_1 = __importDefault(require(\"./data\"));\n\nconst file_1 = __importDefault(require(\"./file\"));\n\nconst ftp_1 = __importDefault(require(\"./ftp\"));\n\nconst http_1 = __importDefault(require(\"./http\"));\n\nconst https_1 = __importDefault(require(\"./https\"));\n\nconst debug = debug_1.default('get-uri');\n\nfunction getUri(uri, opts, fn) {\n  const p = new Promise((resolve, reject) => {\n    debug('getUri(%o)', uri);\n\n    if (typeof opts === 'function') {\n      fn = opts;\n      opts = undefined;\n    }\n\n    if (!uri) {\n      reject(new TypeError('Must pass in a URI to \"get\"'));\n      return;\n    }\n\n    const parsed = url_1.parse(uri); // Strip trailing `:`\n\n    const protocol = (parsed.protocol || '').replace(/:$/, '');\n\n    if (!protocol) {\n      reject(new TypeError(`URI does not contain a protocol: ${uri}`));\n      return;\n    }\n\n    const getter = getUri.protocols[protocol];\n\n    if (typeof getter !== 'function') {\n      throw new TypeError(`Unsupported protocol \"${protocol}\" specified in URI: ${uri}`);\n    }\n\n    resolve(getter(parsed, opts || {}));\n  });\n\n  if (typeof fn === 'function') {\n    p.then(rtn => fn(null, rtn), err => fn(err));\n  } else {\n    return p;\n  }\n}\n\n(function (getUri) {\n  getUri.protocols = {\n    data: data_1.default,\n    file: file_1.default,\n    ftp: ftp_1.default,\n    http: http_1.default,\n    https: https_1.default\n  };\n})(getUri || (getUri = {}));\n\nmodule.exports = getUri;","map":{"version":3,"sources":["../src/index.ts"],"names":[],"mappings":";;;;;;;;AAAA,MAAA,OAAA,GAAA,eAAA,CAAA,OAAA,CAAA,OAAA,CAAA,CAAA;;AAEA,MAAA,KAAA,GAAA,OAAA,CAAA,KAAA,CAAA,C,CAEA;;;AACA,MAAA,MAAA,GAAA,eAAA,CAAA,OAAA,CAAA,QAAA,CAAA,CAAA;;AACA,MAAA,MAAA,GAAA,eAAA,CAAA,OAAA,CAAA,QAAA,CAAA,CAAA;;AACA,MAAA,KAAA,GAAA,eAAA,CAAA,OAAA,CAAA,OAAA,CAAA,CAAA;;AACA,MAAA,MAAA,GAAA,eAAA,CAAA,OAAA,CAAA,QAAA,CAAA,CAAA;;AACA,MAAA,OAAA,GAAA,eAAA,CAAA,OAAA,CAAA,SAAA,CAAA,CAAA;;AAEA,MAAM,KAAK,GAAG,OAAA,CAAA,OAAA,CAAY,SAAZ,CAAd;;AAyBA,SAAS,MAAT,CACC,GADD,EAEC,IAFD,EAGC,EAHD,EAG2B;AAE1B,QAAM,CAAC,GAAG,IAAI,OAAJ,CAAsB,CAAC,OAAD,EAAU,MAAV,KAAoB;AACnD,IAAA,KAAK,CAAC,YAAD,EAAe,GAAf,CAAL;;AAEA,QAAI,OAAO,IAAP,KAAgB,UAApB,EAAgC;AAC/B,MAAA,EAAE,GAAG,IAAL;AACA,MAAA,IAAI,GAAG,SAAP;AACA;;AAED,QAAI,CAAC,GAAL,EAAU;AACT,MAAA,MAAM,CAAC,IAAI,SAAJ,CAAc,6BAAd,CAAD,CAAN;AACA;AACA;;AAED,UAAM,MAAM,GAAG,KAAA,CAAA,KAAA,CAAM,GAAN,CAAf,CAbmD,CAenD;;AACA,UAAM,QAAQ,GAAG,CAAC,MAAM,CAAC,QAAP,IAAmB,EAApB,EAAwB,OAAxB,CAAgC,IAAhC,EAAsC,EAAtC,CAAjB;;AACA,QAAI,CAAC,QAAL,EAAe;AACd,MAAA,MAAM,CAAC,IAAI,SAAJ,CAAc,oCAAoC,GAAG,EAArD,CAAD,CAAN;AACA;AACA;;AAED,UAAM,MAAM,GAAG,MAAM,CAAC,SAAP,CAAiB,QAAjB,CAAf;;AAEA,QAAI,OAAO,MAAP,KAAkB,UAAtB,EAAkC;AACjC,YAAM,IAAI,SAAJ,CACL,yBAAyB,QAAQ,uBAAuB,GAAG,EADtD,CAAN;AAGA;;AAED,IAAA,OAAO,CAAC,MAAM,CAAC,MAAD,EAAS,IAAI,IAAI,EAAjB,CAAP,CAAP;AACA,GA/BS,CAAV;;AAiCA,MAAI,OAAO,EAAP,KAAc,UAAlB,EAA8B;AAC7B,IAAA,CAAC,CAAC,IAAF,CAAO,GAAG,IAAI,EAAG,CAAC,IAAD,EAAO,GAAP,CAAjB,EAA8B,GAAG,IAAI,EAAG,CAAC,GAAD,CAAxC;AACA,GAFD,MAEO;AACN,WAAO,CAAP;AACA;AACD;;AAED,CAAA,UAAU,MAAV,EAAgB;AASF,EAAA,MAAA,CAAA,SAAA,GAAsD;AAClE,IAAA,IAAI,EAAJ,MAAA,CAAA,OADkE;AAElE,IAAA,IAAI,EAAJ,MAAA,CAAA,OAFkE;AAGlE,IAAA,GAAG,EAAH,KAAA,CAAA,OAHkE;AAIlE,IAAA,IAAI,EAAJ,MAAA,CAAA,OAJkE;AAKlE,IAAA,KAAK,EAAL,OAAA,CAAA;AALkE,GAAtD;AAOb,CAhBD,EAAU,MAAM,KAAN,MAAM,GAAA,EAAA,CAAhB;;AAkBA,MAAA,CAAA,OAAA,GAAS,MAAT","sourceRoot":"","sourcesContent":["\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nconst debug_1 = __importDefault(require(\"debug\"));\nconst url_1 = require(\"url\");\n// Built-in protocols\nconst data_1 = __importDefault(require(\"./data\"));\nconst file_1 = __importDefault(require(\"./file\"));\nconst ftp_1 = __importDefault(require(\"./ftp\"));\nconst http_1 = __importDefault(require(\"./http\"));\nconst https_1 = __importDefault(require(\"./https\"));\nconst debug = debug_1.default('get-uri');\nfunction getUri(uri, opts, fn) {\n    const p = new Promise((resolve, reject) => {\n        debug('getUri(%o)', uri);\n        if (typeof opts === 'function') {\n            fn = opts;\n            opts = undefined;\n        }\n        if (!uri) {\n            reject(new TypeError('Must pass in a URI to \"get\"'));\n            return;\n        }\n        const parsed = url_1.parse(uri);\n        // Strip trailing `:`\n        const protocol = (parsed.protocol || '').replace(/:$/, '');\n        if (!protocol) {\n            reject(new TypeError(`URI does not contain a protocol: ${uri}`));\n            return;\n        }\n        const getter = getUri.protocols[protocol];\n        if (typeof getter !== 'function') {\n            throw new TypeError(`Unsupported protocol \"${protocol}\" specified in URI: ${uri}`);\n        }\n        resolve(getter(parsed, opts || {}));\n    });\n    if (typeof fn === 'function') {\n        p.then(rtn => fn(null, rtn), err => fn(err));\n    }\n    else {\n        return p;\n    }\n}\n(function (getUri) {\n    getUri.protocols = {\n        data: data_1.default,\n        file: file_1.default,\n        ftp: ftp_1.default,\n        http: http_1.default,\n        https: https_1.default\n    };\n})(getUri || (getUri = {}));\nmodule.exports = getUri;\n//# sourceMappingURL=index.js.map"]},"metadata":{},"sourceType":"script"}