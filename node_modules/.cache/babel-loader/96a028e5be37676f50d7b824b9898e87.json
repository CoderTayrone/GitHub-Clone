{"ast":null,"code":"\"use strict\";\n\nvar _ = require(\"lodash\");\n\nvar request = require(\"request\");\n\nvar {\n  encodeFirestoreValue\n} = require(\"./firestore/encodeFirestoreValue\");\n\nvar utils = require(\"./utils\");\n\nvar LocalFunction = function (trigger, urls, controller) {\n  const isCallable = _.get(trigger, [\"labels\", \"deployment-callable\"], \"false\");\n\n  this.id = trigger.id;\n  this.name = trigger.name;\n  this.eventTrigger = trigger.eventTrigger;\n  this.httpsTrigger = trigger.httpsTrigger;\n  this.controller = controller;\n  this.url = _.get(urls, this.id);\n\n  if (this.httpsTrigger) {\n    if (isCallable == \"true\") {\n      this.call = this._constructCallableFunc.bind(this);\n    } else {\n      this.call = request.defaults({\n        callback: this._requestCallBack,\n        baseUrl: this.url,\n        uri: \"\"\n      });\n    }\n  } else {\n    this.call = this._call.bind(this);\n  }\n};\n\nLocalFunction.prototype._isDatabaseFunc = function (eventTrigger) {\n  return utils.getFunctionsEventProvider(eventTrigger.eventType) === \"Database\";\n};\n\nLocalFunction.prototype._isFirestoreFunc = function (eventTrigger) {\n  return utils.getFunctionsEventProvider(eventTrigger.eventType) === \"Firestore\";\n};\n\nLocalFunction.prototype._substituteParams = function (resource, params) {\n  var wildcardRegex = new RegExp(\"{[^/{}]*}\", \"g\");\n  return resource.replace(wildcardRegex, function (wildcard) {\n    var wildcardNoBraces = wildcard.slice(1, -1);\n\n    var sub = _.get(params, wildcardNoBraces);\n\n    return sub || wildcardNoBraces + _.random(1, 9);\n  });\n};\n\nLocalFunction.prototype._constructCallableFunc = function (data, opts) {\n  opts = opts || {};\n  var headers = {};\n\n  if (_.has(opts, \"instanceIdToken\")) {\n    headers[\"Firebase-Instance-ID-Token\"] = opts.instanceIdToken;\n  }\n\n  return request.post({\n    callback: this._requestCallBack,\n    baseUrl: this.url,\n    uri: \"\",\n    body: {\n      data: data\n    },\n    json: true,\n    headers: headers\n  });\n};\n\nLocalFunction.prototype._constructAuth = function (auth, authType) {\n  if (_.get(auth, \"admin\") || _.get(auth, \"variable\")) {\n    return auth;\n  }\n\n  if (typeof authType !== \"undefined\") {\n    switch (authType) {\n      case \"USER\":\n        return {\n          variable: {\n            uid: _.get(auth, \"uid\", \"\"),\n            token: _.get(auth, \"token\", {})\n          }\n        };\n\n      case \"ADMIN\":\n        if (_.get(auth, \"uid\") || _.get(auth, \"token\")) {\n          throw new Error(\"authType and auth are incompatible.\");\n        }\n\n        return {\n          admin: true\n        };\n\n      case \"UNAUTHENTICATED\":\n        if (_.get(auth, \"uid\") || _.get(auth, \"token\")) {\n          throw new Error(\"authType and auth are incompatible.\");\n        }\n\n        return {\n          admin: false\n        };\n\n      default:\n        throw new Error(\"Unrecognized authType, valid values are: \" + \"ADMIN, USER, and UNAUTHENTICATED\");\n    }\n  }\n\n  if (auth) {\n    return {\n      variable: {\n        uid: auth.uid,\n        token: auth.token || {}\n      }\n    };\n  }\n\n  return {\n    admin: true\n  };\n};\n\nLocalFunction.prototype._makeFirestoreValue = function (input) {\n  if (typeof input === \"undefined\" || _.isEmpty(input)) {\n    return {};\n  }\n\n  if (typeof input !== \"object\") {\n    throw new Error(\"Firestore data must be key-value pairs.\");\n  }\n\n  var currentTime = new Date().toISOString();\n  return {\n    fields: encodeFirestoreValue(input),\n    createTime: currentTime,\n    updateTime: currentTime\n  };\n};\n\nLocalFunction.prototype._requestCallBack = function (err, response, body) {\n  if (err) {\n    return console.warn(\"\\nERROR SENDING REQUEST: \" + err);\n  }\n\n  var status = response ? response.statusCode + \", \" : \"\";\n  var bodyString = body;\n\n  if (typeof body === \"string\") {\n    try {\n      bodyString = JSON.stringify(JSON.parse(bodyString), null, 2);\n    } catch (e) {}\n  } else {\n    bodyString = JSON.stringify(body, null, 2);\n  }\n\n  return console.log(\"\\nRESPONSE RECEIVED FROM FUNCTION: \" + status + bodyString);\n};\n\nLocalFunction.prototype._call = function (data, opts) {\n  opts = opts || {};\n  var operationType;\n  var dataPayload;\n\n  if (this.httpsTrigger) {\n    this.controller.call(this.name, data || {});\n  } else if (this.eventTrigger) {\n    if (this._isDatabaseFunc(this.eventTrigger)) {\n      operationType = _.last(this.eventTrigger.eventType.split(\".\"));\n\n      switch (operationType) {\n        case \"create\":\n          dataPayload = {\n            data: null,\n            delta: data\n          };\n          break;\n\n        case \"delete\":\n          dataPayload = {\n            data: data,\n            delta: null\n          };\n          break;\n\n        default:\n          dataPayload = {\n            data: data.before,\n            delta: data.after\n          };\n      }\n\n      opts.resource = this._substituteParams(this.eventTrigger.resource, opts.params);\n      opts.auth = this._constructAuth(opts.auth, opts.authType);\n      this.controller.call(this.name, dataPayload, opts);\n    } else if (this._isFirestoreFunc(this.eventTrigger)) {\n      operationType = _.last(this.eventTrigger.eventType.split(\".\"));\n\n      switch (operationType) {\n        case \"create\":\n          dataPayload = {\n            value: this._makeFirestoreValue(data),\n            oldValue: {}\n          };\n          break;\n\n        case \"delete\":\n          dataPayload = {\n            value: {},\n            oldValue: this._makeFirestoreValue(data)\n          };\n          break;\n\n        default:\n          dataPayload = {\n            value: this._makeFirestoreValue(data.after),\n            oldValue: this._makeFirestoreValue(data.before)\n          };\n      }\n\n      opts.resource = this._substituteParams(this.eventTrigger.resource, opts.params);\n      this.controller.call(this.name, dataPayload, opts);\n    } else {\n      this.controller.call(this.name, data || {}, opts);\n    }\n  }\n\n  return \"Successfully invoked function.\";\n};\n\nmodule.exports = LocalFunction;","map":{"version":3,"sources":["/home/dev/Documentos/Projects/github-clone/node_modules/firebase-tools/lib/localFunction.js"],"names":["_","require","request","encodeFirestoreValue","utils","LocalFunction","trigger","urls","controller","isCallable","get","id","name","eventTrigger","httpsTrigger","url","call","_constructCallableFunc","bind","defaults","callback","_requestCallBack","baseUrl","uri","_call","prototype","_isDatabaseFunc","getFunctionsEventProvider","eventType","_isFirestoreFunc","_substituteParams","resource","params","wildcardRegex","RegExp","replace","wildcard","wildcardNoBraces","slice","sub","random","data","opts","headers","has","instanceIdToken","post","body","json","_constructAuth","auth","authType","variable","uid","token","Error","admin","_makeFirestoreValue","input","isEmpty","currentTime","Date","toISOString","fields","createTime","updateTime","err","response","console","warn","status","statusCode","bodyString","JSON","stringify","parse","e","log","operationType","dataPayload","last","split","delta","before","after","value","oldValue","module","exports"],"mappings":"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","sourcesContent":["\"use strict\";\nvar _ = require(\"lodash\");\nvar request = require(\"request\");\nvar { encodeFirestoreValue } = require(\"./firestore/encodeFirestoreValue\");\nvar utils = require(\"./utils\");\nvar LocalFunction = function (trigger, urls, controller) {\n    const isCallable = _.get(trigger, [\"labels\", \"deployment-callable\"], \"false\");\n    this.id = trigger.id;\n    this.name = trigger.name;\n    this.eventTrigger = trigger.eventTrigger;\n    this.httpsTrigger = trigger.httpsTrigger;\n    this.controller = controller;\n    this.url = _.get(urls, this.id);\n    if (this.httpsTrigger) {\n        if (isCallable == \"true\") {\n            this.call = this._constructCallableFunc.bind(this);\n        }\n        else {\n            this.call = request.defaults({\n                callback: this._requestCallBack,\n                baseUrl: this.url,\n                uri: \"\",\n            });\n        }\n    }\n    else {\n        this.call = this._call.bind(this);\n    }\n};\nLocalFunction.prototype._isDatabaseFunc = function (eventTrigger) {\n    return utils.getFunctionsEventProvider(eventTrigger.eventType) === \"Database\";\n};\nLocalFunction.prototype._isFirestoreFunc = function (eventTrigger) {\n    return utils.getFunctionsEventProvider(eventTrigger.eventType) === \"Firestore\";\n};\nLocalFunction.prototype._substituteParams = function (resource, params) {\n    var wildcardRegex = new RegExp(\"{[^/{}]*}\", \"g\");\n    return resource.replace(wildcardRegex, function (wildcard) {\n        var wildcardNoBraces = wildcard.slice(1, -1);\n        var sub = _.get(params, wildcardNoBraces);\n        return sub || wildcardNoBraces + _.random(1, 9);\n    });\n};\nLocalFunction.prototype._constructCallableFunc = function (data, opts) {\n    opts = opts || {};\n    var headers = {};\n    if (_.has(opts, \"instanceIdToken\")) {\n        headers[\"Firebase-Instance-ID-Token\"] = opts.instanceIdToken;\n    }\n    return request.post({\n        callback: this._requestCallBack,\n        baseUrl: this.url,\n        uri: \"\",\n        body: { data: data },\n        json: true,\n        headers: headers,\n    });\n};\nLocalFunction.prototype._constructAuth = function (auth, authType) {\n    if (_.get(auth, \"admin\") || _.get(auth, \"variable\")) {\n        return auth;\n    }\n    if (typeof authType !== \"undefined\") {\n        switch (authType) {\n            case \"USER\":\n                return {\n                    variable: {\n                        uid: _.get(auth, \"uid\", \"\"),\n                        token: _.get(auth, \"token\", {}),\n                    },\n                };\n            case \"ADMIN\":\n                if (_.get(auth, \"uid\") || _.get(auth, \"token\")) {\n                    throw new Error(\"authType and auth are incompatible.\");\n                }\n                return { admin: true };\n            case \"UNAUTHENTICATED\":\n                if (_.get(auth, \"uid\") || _.get(auth, \"token\")) {\n                    throw new Error(\"authType and auth are incompatible.\");\n                }\n                return { admin: false };\n            default:\n                throw new Error(\"Unrecognized authType, valid values are: \" + \"ADMIN, USER, and UNAUTHENTICATED\");\n        }\n    }\n    if (auth) {\n        return {\n            variable: {\n                uid: auth.uid,\n                token: auth.token || {},\n            },\n        };\n    }\n    return { admin: true };\n};\nLocalFunction.prototype._makeFirestoreValue = function (input) {\n    if (typeof input === \"undefined\" || _.isEmpty(input)) {\n        return {};\n    }\n    if (typeof input !== \"object\") {\n        throw new Error(\"Firestore data must be key-value pairs.\");\n    }\n    var currentTime = new Date().toISOString();\n    return {\n        fields: encodeFirestoreValue(input),\n        createTime: currentTime,\n        updateTime: currentTime,\n    };\n};\nLocalFunction.prototype._requestCallBack = function (err, response, body) {\n    if (err) {\n        return console.warn(\"\\nERROR SENDING REQUEST: \" + err);\n    }\n    var status = response ? response.statusCode + \", \" : \"\";\n    var bodyString = body;\n    if (typeof body === \"string\") {\n        try {\n            bodyString = JSON.stringify(JSON.parse(bodyString), null, 2);\n        }\n        catch (e) {\n        }\n    }\n    else {\n        bodyString = JSON.stringify(body, null, 2);\n    }\n    return console.log(\"\\nRESPONSE RECEIVED FROM FUNCTION: \" + status + bodyString);\n};\nLocalFunction.prototype._call = function (data, opts) {\n    opts = opts || {};\n    var operationType;\n    var dataPayload;\n    if (this.httpsTrigger) {\n        this.controller.call(this.name, data || {});\n    }\n    else if (this.eventTrigger) {\n        if (this._isDatabaseFunc(this.eventTrigger)) {\n            operationType = _.last(this.eventTrigger.eventType.split(\".\"));\n            switch (operationType) {\n                case \"create\":\n                    dataPayload = {\n                        data: null,\n                        delta: data,\n                    };\n                    break;\n                case \"delete\":\n                    dataPayload = {\n                        data: data,\n                        delta: null,\n                    };\n                    break;\n                default:\n                    dataPayload = {\n                        data: data.before,\n                        delta: data.after,\n                    };\n            }\n            opts.resource = this._substituteParams(this.eventTrigger.resource, opts.params);\n            opts.auth = this._constructAuth(opts.auth, opts.authType);\n            this.controller.call(this.name, dataPayload, opts);\n        }\n        else if (this._isFirestoreFunc(this.eventTrigger)) {\n            operationType = _.last(this.eventTrigger.eventType.split(\".\"));\n            switch (operationType) {\n                case \"create\":\n                    dataPayload = {\n                        value: this._makeFirestoreValue(data),\n                        oldValue: {},\n                    };\n                    break;\n                case \"delete\":\n                    dataPayload = {\n                        value: {},\n                        oldValue: this._makeFirestoreValue(data),\n                    };\n                    break;\n                default:\n                    dataPayload = {\n                        value: this._makeFirestoreValue(data.after),\n                        oldValue: this._makeFirestoreValue(data.before),\n                    };\n            }\n            opts.resource = this._substituteParams(this.eventTrigger.resource, opts.params);\n            this.controller.call(this.name, dataPayload, opts);\n        }\n        else {\n            this.controller.call(this.name, data || {}, opts);\n        }\n    }\n    return \"Successfully invoked function.\";\n};\nmodule.exports = LocalFunction;\n"]},"metadata":{},"sourceType":"script"}