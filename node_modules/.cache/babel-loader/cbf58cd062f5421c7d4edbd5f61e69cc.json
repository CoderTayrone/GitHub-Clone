{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.topicFromSpec = exports.deleteTopic = exports.updateTopic = exports.getTopic = exports.createTopic = void 0;\n\nconst apiv2_1 = require(\"../apiv2\");\n\nconst api_1 = require(\"../api\");\n\nconst backend = require(\"../deploy/functions/backend\");\n\nconst proto = require(\"./proto\");\n\nconst API_VERSION = \"v1\";\nconst client = new apiv2_1.Client({\n  urlPrefix: api_1.pubsubOrigin,\n  auth: true,\n  apiVersion: API_VERSION\n});\n\nasync function createTopic(topic) {\n  const result = await client.put(topic.name, topic);\n  return result.body;\n}\n\nexports.createTopic = createTopic;\n\nasync function getTopic(name) {\n  const result = await client.get(name);\n  return result.body;\n}\n\nexports.getTopic = getTopic;\n\nasync function updateTopic(topic) {\n  const queryParams = {\n    updateMask: proto.fieldMasks(topic).join(\",\")\n  };\n  const result = await client.patch(topic.name, topic, {\n    queryParams\n  });\n  return result.body;\n}\n\nexports.updateTopic = updateTopic;\n\nasync function deleteTopic(name) {\n  await client.delete(name);\n}\n\nexports.deleteTopic = deleteTopic;\n\nfunction topicFromSpec(spec) {\n  return {\n    name: backend.topicName(spec),\n    labels: Object.assign({}, spec.labels)\n  };\n}\n\nexports.topicFromSpec = topicFromSpec;","map":{"version":3,"sources":["/home/dev/Documentos/Projects/github-clone/node_modules/firebase-tools/lib/gcp/pubsub.js"],"names":["Object","defineProperty","exports","value","topicFromSpec","deleteTopic","updateTopic","getTopic","createTopic","apiv2_1","require","api_1","backend","proto","API_VERSION","client","Client","urlPrefix","pubsubOrigin","auth","apiVersion","topic","result","put","name","body","get","queryParams","updateMask","fieldMasks","join","patch","delete","spec","topicName","labels","assign"],"mappings":"AAAA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;AACAD,OAAO,CAACE,aAAR,GAAwBF,OAAO,CAACG,WAAR,GAAsBH,OAAO,CAACI,WAAR,GAAsBJ,OAAO,CAACK,QAAR,GAAmBL,OAAO,CAACM,WAAR,GAAsB,KAAK,CAAlH;;AACA,MAAMC,OAAO,GAAGC,OAAO,CAAC,UAAD,CAAvB;;AACA,MAAMC,KAAK,GAAGD,OAAO,CAAC,QAAD,CAArB;;AACA,MAAME,OAAO,GAAGF,OAAO,CAAC,6BAAD,CAAvB;;AACA,MAAMG,KAAK,GAAGH,OAAO,CAAC,SAAD,CAArB;;AACA,MAAMI,WAAW,GAAG,IAApB;AACA,MAAMC,MAAM,GAAG,IAAIN,OAAO,CAACO,MAAZ,CAAmB;AAC9BC,EAAAA,SAAS,EAAEN,KAAK,CAACO,YADa;AAE9BC,EAAAA,IAAI,EAAE,IAFwB;AAG9BC,EAAAA,UAAU,EAAEN;AAHkB,CAAnB,CAAf;;AAKA,eAAeN,WAAf,CAA2Ba,KAA3B,EAAkC;AAC9B,QAAMC,MAAM,GAAG,MAAMP,MAAM,CAACQ,GAAP,CAAWF,KAAK,CAACG,IAAjB,EAAuBH,KAAvB,CAArB;AACA,SAAOC,MAAM,CAACG,IAAd;AACH;;AACDvB,OAAO,CAACM,WAAR,GAAsBA,WAAtB;;AACA,eAAeD,QAAf,CAAwBiB,IAAxB,EAA8B;AAC1B,QAAMF,MAAM,GAAG,MAAMP,MAAM,CAACW,GAAP,CAAWF,IAAX,CAArB;AACA,SAAOF,MAAM,CAACG,IAAd;AACH;;AACDvB,OAAO,CAACK,QAAR,GAAmBA,QAAnB;;AACA,eAAeD,WAAf,CAA2Be,KAA3B,EAAkC;AAC9B,QAAMM,WAAW,GAAG;AAChBC,IAAAA,UAAU,EAAEf,KAAK,CAACgB,UAAN,CAAiBR,KAAjB,EAAwBS,IAAxB,CAA6B,GAA7B;AADI,GAApB;AAGA,QAAMR,MAAM,GAAG,MAAMP,MAAM,CAACgB,KAAP,CAAaV,KAAK,CAACG,IAAnB,EAAyBH,KAAzB,EAAgC;AAAEM,IAAAA;AAAF,GAAhC,CAArB;AACA,SAAOL,MAAM,CAACG,IAAd;AACH;;AACDvB,OAAO,CAACI,WAAR,GAAsBA,WAAtB;;AACA,eAAeD,WAAf,CAA2BmB,IAA3B,EAAiC;AAC7B,QAAMT,MAAM,CAACiB,MAAP,CAAcR,IAAd,CAAN;AACH;;AACDtB,OAAO,CAACG,WAAR,GAAsBA,WAAtB;;AACA,SAASD,aAAT,CAAuB6B,IAAvB,EAA6B;AACzB,SAAO;AACHT,IAAAA,IAAI,EAAEZ,OAAO,CAACsB,SAAR,CAAkBD,IAAlB,CADH;AAEHE,IAAAA,MAAM,EAAEnC,MAAM,CAACoC,MAAP,CAAc,EAAd,EAAkBH,IAAI,CAACE,MAAvB;AAFL,GAAP;AAIH;;AACDjC,OAAO,CAACE,aAAR,GAAwBA,aAAxB","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.topicFromSpec = exports.deleteTopic = exports.updateTopic = exports.getTopic = exports.createTopic = void 0;\nconst apiv2_1 = require(\"../apiv2\");\nconst api_1 = require(\"../api\");\nconst backend = require(\"../deploy/functions/backend\");\nconst proto = require(\"./proto\");\nconst API_VERSION = \"v1\";\nconst client = new apiv2_1.Client({\n    urlPrefix: api_1.pubsubOrigin,\n    auth: true,\n    apiVersion: API_VERSION,\n});\nasync function createTopic(topic) {\n    const result = await client.put(topic.name, topic);\n    return result.body;\n}\nexports.createTopic = createTopic;\nasync function getTopic(name) {\n    const result = await client.get(name);\n    return result.body;\n}\nexports.getTopic = getTopic;\nasync function updateTopic(topic) {\n    const queryParams = {\n        updateMask: proto.fieldMasks(topic).join(\",\"),\n    };\n    const result = await client.patch(topic.name, topic, { queryParams });\n    return result.body;\n}\nexports.updateTopic = updateTopic;\nasync function deleteTopic(name) {\n    await client.delete(name);\n}\nexports.deleteTopic = deleteTopic;\nfunction topicFromSpec(spec) {\n    return {\n        name: backend.topicName(spec),\n        labels: Object.assign({}, spec.labels),\n    };\n}\nexports.topicFromSpec = topicFromSpec;\n"]},"metadata":{},"sourceType":"script"}