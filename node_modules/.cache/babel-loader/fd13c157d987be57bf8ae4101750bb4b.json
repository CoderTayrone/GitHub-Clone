{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.EmulatorHubClient = void 0;\n\nconst api = require(\"../api\");\n\nconst hub_1 = require(\"./hub\");\n\nconst error_1 = require(\"../error\");\n\nclass EmulatorHubClient {\n  constructor(projectId) {\n    this.projectId = projectId;\n    this.locator = hub_1.EmulatorHub.readLocatorFile(projectId);\n  }\n\n  foundHub() {\n    return this.locator !== undefined;\n  }\n\n  getStatus() {\n    return api.request(\"GET\", \"/\", {\n      origin: this.origin\n    });\n  }\n\n  getEmulators() {\n    return api.request(\"GET\", hub_1.EmulatorHub.PATH_EMULATORS, {\n      origin: this.origin,\n      json: true\n    }).then(res => {\n      return res.body;\n    });\n  }\n\n  postExport(path) {\n    return api.request(\"POST\", hub_1.EmulatorHub.PATH_EXPORT, {\n      origin: this.origin,\n      json: true,\n      data: {\n        path\n      }\n    });\n  }\n\n  get origin() {\n    const locator = this.assertLocator();\n    return `http://${locator.host}:${locator.port}`;\n  }\n\n  assertLocator() {\n    if (this.locator === undefined) {\n      throw new error_1.FirebaseError(`Cannot contact the Emulator Hub for project ${this.projectId}`);\n    }\n\n    return this.locator;\n  }\n\n}\n\nexports.EmulatorHubClient = EmulatorHubClient;","map":{"version":3,"sources":["/home/dev/Documentos/Projects/github-clone/node_modules/firebase-tools/lib/emulator/hubClient.js"],"names":["Object","defineProperty","exports","value","EmulatorHubClient","api","require","hub_1","error_1","constructor","projectId","locator","EmulatorHub","readLocatorFile","foundHub","undefined","getStatus","request","origin","getEmulators","PATH_EMULATORS","json","then","res","body","postExport","path","PATH_EXPORT","data","assertLocator","host","port","FirebaseError"],"mappings":"AAAA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;AACAD,OAAO,CAACE,iBAAR,GAA4B,KAAK,CAAjC;;AACA,MAAMC,GAAG,GAAGC,OAAO,CAAC,QAAD,CAAnB;;AACA,MAAMC,KAAK,GAAGD,OAAO,CAAC,OAAD,CAArB;;AACA,MAAME,OAAO,GAAGF,OAAO,CAAC,UAAD,CAAvB;;AACA,MAAMF,iBAAN,CAAwB;AACpBK,EAAAA,WAAW,CAACC,SAAD,EAAY;AACnB,SAAKA,SAAL,GAAiBA,SAAjB;AACA,SAAKC,OAAL,GAAeJ,KAAK,CAACK,WAAN,CAAkBC,eAAlB,CAAkCH,SAAlC,CAAf;AACH;;AACDI,EAAAA,QAAQ,GAAG;AACP,WAAO,KAAKH,OAAL,KAAiBI,SAAxB;AACH;;AACDC,EAAAA,SAAS,GAAG;AACR,WAAOX,GAAG,CAACY,OAAJ,CAAY,KAAZ,EAAmB,GAAnB,EAAwB;AAC3BC,MAAAA,MAAM,EAAE,KAAKA;AADc,KAAxB,CAAP;AAGH;;AACDC,EAAAA,YAAY,GAAG;AACX,WAAOd,GAAG,CACLY,OADE,CACM,KADN,EACaV,KAAK,CAACK,WAAN,CAAkBQ,cAD/B,EAC+C;AAClDF,MAAAA,MAAM,EAAE,KAAKA,MADqC;AAElDG,MAAAA,IAAI,EAAE;AAF4C,KAD/C,EAKFC,IALE,CAKIC,GAAD,IAAS;AACf,aAAOA,GAAG,CAACC,IAAX;AACH,KAPM,CAAP;AAQH;;AACDC,EAAAA,UAAU,CAACC,IAAD,EAAO;AACb,WAAOrB,GAAG,CAACY,OAAJ,CAAY,MAAZ,EAAoBV,KAAK,CAACK,WAAN,CAAkBe,WAAtC,EAAmD;AACtDT,MAAAA,MAAM,EAAE,KAAKA,MADyC;AAEtDG,MAAAA,IAAI,EAAE,IAFgD;AAGtDO,MAAAA,IAAI,EAAE;AACFF,QAAAA;AADE;AAHgD,KAAnD,CAAP;AAOH;;AACS,MAANR,MAAM,GAAG;AACT,UAAMP,OAAO,GAAG,KAAKkB,aAAL,EAAhB;AACA,WAAQ,UAASlB,OAAO,CAACmB,IAAK,IAAGnB,OAAO,CAACoB,IAAK,EAA9C;AACH;;AACDF,EAAAA,aAAa,GAAG;AACZ,QAAI,KAAKlB,OAAL,KAAiBI,SAArB,EAAgC;AAC5B,YAAM,IAAIP,OAAO,CAACwB,aAAZ,CAA2B,+CAA8C,KAAKtB,SAAU,EAAxF,CAAN;AACH;;AACD,WAAO,KAAKC,OAAZ;AACH;;AAzCmB;;AA2CxBT,OAAO,CAACE,iBAAR,GAA4BA,iBAA5B","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.EmulatorHubClient = void 0;\nconst api = require(\"../api\");\nconst hub_1 = require(\"./hub\");\nconst error_1 = require(\"../error\");\nclass EmulatorHubClient {\n    constructor(projectId) {\n        this.projectId = projectId;\n        this.locator = hub_1.EmulatorHub.readLocatorFile(projectId);\n    }\n    foundHub() {\n        return this.locator !== undefined;\n    }\n    getStatus() {\n        return api.request(\"GET\", \"/\", {\n            origin: this.origin,\n        });\n    }\n    getEmulators() {\n        return api\n            .request(\"GET\", hub_1.EmulatorHub.PATH_EMULATORS, {\n            origin: this.origin,\n            json: true,\n        })\n            .then((res) => {\n            return res.body;\n        });\n    }\n    postExport(path) {\n        return api.request(\"POST\", hub_1.EmulatorHub.PATH_EXPORT, {\n            origin: this.origin,\n            json: true,\n            data: {\n                path,\n            },\n        });\n    }\n    get origin() {\n        const locator = this.assertLocator();\n        return `http://${locator.host}:${locator.port}`;\n    }\n    assertLocator() {\n        if (this.locator === undefined) {\n            throw new error_1.FirebaseError(`Cannot contact the Emulator Hub for project ${this.projectId}`);\n        }\n        return this.locator;\n    }\n}\nexports.EmulatorHubClient = EmulatorHubClient;\n"]},"metadata":{},"sourceType":"script"}