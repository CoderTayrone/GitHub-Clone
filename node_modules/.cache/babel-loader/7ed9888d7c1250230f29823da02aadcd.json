{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nconst lodash_1 = require(\"lodash\");\n\nconst rulesDeploy_1 = require(\"../../rulesDeploy\");\n\nasync function default_1(context, options) {\n  const rules = lodash_1.get(context, \"storage.rules\", []);\n  const rulesDeploy = lodash_1.get(context, \"storage.rulesDeploy\");\n\n  if (!rules.length || !rulesDeploy) {\n    return;\n  }\n\n  const toRelease = [];\n\n  for (const ruleConfig of rules) {\n    if (ruleConfig.target) {\n      options.rc.target(options.project, \"storage\", ruleConfig.target).forEach(bucket => {\n        toRelease.push({\n          bucket: bucket,\n          rules: ruleConfig.rules\n        });\n      });\n    } else {\n      toRelease.push({\n        bucket: ruleConfig.bucket,\n        rules: ruleConfig.rules\n      });\n    }\n  }\n\n  await Promise.all(toRelease.map(release => {\n    return rulesDeploy.release(release.rules, rulesDeploy_1.RulesetServiceType.FIREBASE_STORAGE, release.bucket);\n  }));\n}\n\nexports.default = default_1;","map":{"version":3,"sources":["/home/dev/Documentos/Projects/github-clone/node_modules/firebase-tools/lib/deploy/storage/release.js"],"names":["Object","defineProperty","exports","value","lodash_1","require","rulesDeploy_1","default_1","context","options","rules","get","rulesDeploy","length","toRelease","ruleConfig","target","rc","project","forEach","bucket","push","Promise","all","map","release","RulesetServiceType","FIREBASE_STORAGE","default"],"mappings":"AAAA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;;AACA,MAAMC,QAAQ,GAAGC,OAAO,CAAC,QAAD,CAAxB;;AACA,MAAMC,aAAa,GAAGD,OAAO,CAAC,mBAAD,CAA7B;;AACA,eAAeE,SAAf,CAAyBC,OAAzB,EAAkCC,OAAlC,EAA2C;AACvC,QAAMC,KAAK,GAAGN,QAAQ,CAACO,GAAT,CAAaH,OAAb,EAAsB,eAAtB,EAAuC,EAAvC,CAAd;AACA,QAAMI,WAAW,GAAGR,QAAQ,CAACO,GAAT,CAAaH,OAAb,EAAsB,qBAAtB,CAApB;;AACA,MAAI,CAACE,KAAK,CAACG,MAAP,IAAiB,CAACD,WAAtB,EAAmC;AAC/B;AACH;;AACD,QAAME,SAAS,GAAG,EAAlB;;AACA,OAAK,MAAMC,UAAX,IAAyBL,KAAzB,EAAgC;AAC5B,QAAIK,UAAU,CAACC,MAAf,EAAuB;AACnBP,MAAAA,OAAO,CAACQ,EAAR,CAAWD,MAAX,CAAkBP,OAAO,CAACS,OAA1B,EAAmC,SAAnC,EAA8CH,UAAU,CAACC,MAAzD,EAAiEG,OAAjE,CAA0EC,MAAD,IAAY;AACjFN,QAAAA,SAAS,CAACO,IAAV,CAAe;AAAED,UAAAA,MAAM,EAAEA,MAAV;AAAkBV,UAAAA,KAAK,EAAEK,UAAU,CAACL;AAApC,SAAf;AACH,OAFD;AAGH,KAJD,MAKK;AACDI,MAAAA,SAAS,CAACO,IAAV,CAAe;AAAED,QAAAA,MAAM,EAAEL,UAAU,CAACK,MAArB;AAA6BV,QAAAA,KAAK,EAAEK,UAAU,CAACL;AAA/C,OAAf;AACH;AACJ;;AACD,QAAMY,OAAO,CAACC,GAAR,CAAYT,SAAS,CAACU,GAAV,CAAeC,OAAD,IAAa;AACzC,WAAOb,WAAW,CAACa,OAAZ,CAAoBA,OAAO,CAACf,KAA5B,EAAmCJ,aAAa,CAACoB,kBAAd,CAAiCC,gBAApE,EAAsFF,OAAO,CAACL,MAA9F,CAAP;AACH,GAFiB,CAAZ,CAAN;AAGH;;AACDlB,OAAO,CAAC0B,OAAR,GAAkBrB,SAAlB","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst lodash_1 = require(\"lodash\");\nconst rulesDeploy_1 = require(\"../../rulesDeploy\");\nasync function default_1(context, options) {\n    const rules = lodash_1.get(context, \"storage.rules\", []);\n    const rulesDeploy = lodash_1.get(context, \"storage.rulesDeploy\");\n    if (!rules.length || !rulesDeploy) {\n        return;\n    }\n    const toRelease = [];\n    for (const ruleConfig of rules) {\n        if (ruleConfig.target) {\n            options.rc.target(options.project, \"storage\", ruleConfig.target).forEach((bucket) => {\n                toRelease.push({ bucket: bucket, rules: ruleConfig.rules });\n            });\n        }\n        else {\n            toRelease.push({ bucket: ruleConfig.bucket, rules: ruleConfig.rules });\n        }\n    }\n    await Promise.all(toRelease.map((release) => {\n        return rulesDeploy.release(release.rules, rulesDeploy_1.RulesetServiceType.FIREBASE_STORAGE, release.bucket);\n    }));\n}\nexports.default = default_1;\n"]},"metadata":{},"sourceType":"script"}