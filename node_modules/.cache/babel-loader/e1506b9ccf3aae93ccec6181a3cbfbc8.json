{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nconst clc = require(\"cli-color\");\n\nconst ora = require(\"ora\");\n\nconst Table = require(\"cli-table\");\n\nconst command_1 = require(\"../command\");\n\nconst projects_1 = require(\"../management/projects\");\n\nconst requireAuth_1 = require(\"../requireAuth\");\n\nconst logger_1 = require(\"../logger\");\n\nconst NOT_SPECIFIED = clc.yellow(\"[Not specified]\");\n\nfunction logProjectsList(projects, currentProjectId) {\n  if (!projects.length) {\n    return;\n  }\n\n  const tableHead = [\"Project Display Name\", \"Project ID\", \"Project Number\", \"Resource Location ID\"];\n  const table = new Table({\n    head: tableHead,\n    style: {\n      head: [\"green\"]\n    }\n  });\n  projects.forEach(({\n    projectId,\n    projectNumber,\n    displayName,\n    resources\n  }) => {\n    if (projectId === currentProjectId) {\n      projectId = clc.cyan.bold(`${projectId} (current)`);\n    }\n\n    table.push([displayName || NOT_SPECIFIED, projectId, projectNumber, resources && resources.locationId || NOT_SPECIFIED]);\n  });\n  logger_1.logger.info(table.toString());\n}\n\nfunction logProjectCount(arr = []) {\n  if (!arr.length) {\n    logger_1.logger.info(clc.bold(\"No projects found.\"));\n    return;\n  }\n\n  logger_1.logger.info(\"\");\n  logger_1.logger.info(`${arr.length} project(s) total.`);\n}\n\nmodule.exports = new command_1.Command(\"projects:list\").description(\"list all Firebase projects you have access to\").before(requireAuth_1.requireAuth).action(async options => {\n  const spinner = ora(\"Preparing the list of your Firebase projects\").start();\n  let projects;\n\n  try {\n    projects = await projects_1.listFirebaseProjects();\n  } catch (err) {\n    spinner.fail();\n    throw err;\n  }\n\n  spinner.succeed();\n  logProjectsList(projects, options.project);\n  logProjectCount(projects);\n  return projects;\n});","map":{"version":3,"sources":["/home/dev/Documentos/Projects/github-clone/node_modules/firebase-tools/lib/commands/projects-list.js"],"names":["Object","defineProperty","exports","value","clc","require","ora","Table","command_1","projects_1","requireAuth_1","logger_1","NOT_SPECIFIED","yellow","logProjectsList","projects","currentProjectId","length","tableHead","table","head","style","forEach","projectId","projectNumber","displayName","resources","cyan","bold","push","locationId","logger","info","toString","logProjectCount","arr","module","Command","description","before","requireAuth","action","options","spinner","start","listFirebaseProjects","err","fail","succeed","project"],"mappings":"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","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst clc = require(\"cli-color\");\nconst ora = require(\"ora\");\nconst Table = require(\"cli-table\");\nconst command_1 = require(\"../command\");\nconst projects_1 = require(\"../management/projects\");\nconst requireAuth_1 = require(\"../requireAuth\");\nconst logger_1 = require(\"../logger\");\nconst NOT_SPECIFIED = clc.yellow(\"[Not specified]\");\nfunction logProjectsList(projects, currentProjectId) {\n    if (!projects.length) {\n        return;\n    }\n    const tableHead = [\n        \"Project Display Name\",\n        \"Project ID\",\n        \"Project Number\",\n        \"Resource Location ID\",\n    ];\n    const table = new Table({ head: tableHead, style: { head: [\"green\"] } });\n    projects.forEach(({ projectId, projectNumber, displayName, resources }) => {\n        if (projectId === currentProjectId) {\n            projectId = clc.cyan.bold(`${projectId} (current)`);\n        }\n        table.push([\n            displayName || NOT_SPECIFIED,\n            projectId,\n            projectNumber,\n            (resources && resources.locationId) || NOT_SPECIFIED,\n        ]);\n    });\n    logger_1.logger.info(table.toString());\n}\nfunction logProjectCount(arr = []) {\n    if (!arr.length) {\n        logger_1.logger.info(clc.bold(\"No projects found.\"));\n        return;\n    }\n    logger_1.logger.info(\"\");\n    logger_1.logger.info(`${arr.length} project(s) total.`);\n}\nmodule.exports = new command_1.Command(\"projects:list\")\n    .description(\"list all Firebase projects you have access to\")\n    .before(requireAuth_1.requireAuth)\n    .action(async (options) => {\n    const spinner = ora(\"Preparing the list of your Firebase projects\").start();\n    let projects;\n    try {\n        projects = await projects_1.listFirebaseProjects();\n    }\n    catch (err) {\n        spinner.fail();\n        throw err;\n    }\n    spinner.succeed();\n    logProjectsList(projects, options.project);\n    logProjectCount(projects);\n    return projects;\n});\n"]},"metadata":{},"sourceType":"script"}