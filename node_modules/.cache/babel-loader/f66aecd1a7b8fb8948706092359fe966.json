{"ast":null,"code":"var util = require('util');\n\nvar zlib = require('zlib');\n\nvar Stream = require('stream');\n\nvar binary = require('binary');\n\nvar Promise = require('bluebird');\n\nvar PullStream = require('./PullStream');\n\nvar NoopStream = require('./NoopStream');\n\nvar BufferStream = require('./BufferStream');\n\nvar parseExtraField = require('./parseExtraField');\n\nvar Buffer = require('./Buffer');\n\nvar parseDateTime = require('./parseDateTime'); // Backwards compatibility for node versions < 8\n\n\nif (!Stream.Writable || !Stream.Writable.prototype.destroy) Stream = require('readable-stream');\nvar endDirectorySignature = Buffer.alloc(4);\nendDirectorySignature.writeUInt32LE(0x06054b50, 0);\n\nfunction Parse(opts) {\n  if (!(this instanceof Parse)) {\n    return new Parse(opts);\n  }\n\n  var self = this;\n  self._opts = opts || {\n    verbose: false\n  };\n  PullStream.call(self, self._opts);\n  self.on('finish', function () {\n    self.emit('close');\n  });\n\n  self._readRecord().catch(function (e) {\n    if (!self.__emittedError || self.__emittedError !== e) self.emit('error', e);\n  });\n}\n\nutil.inherits(Parse, PullStream);\n\nParse.prototype._readRecord = function () {\n  var self = this;\n  return self.pull(4).then(function (data) {\n    if (data.length === 0) return;\n    var signature = data.readUInt32LE(0);\n\n    if (signature === 0x34327243) {\n      return self._readCrxHeader();\n    }\n\n    if (signature === 0x04034b50) {\n      return self._readFile();\n    } else if (signature === 0x02014b50) {\n      self.__ended = true;\n      return self._readCentralDirectoryFileHeader();\n    } else if (signature === 0x06054b50) {\n      return self._readEndOfCentralDirectoryRecord();\n    } else if (self.__ended) {\n      return self.pull(endDirectorySignature).then(function () {\n        return self._readEndOfCentralDirectoryRecord();\n      });\n    } else self.emit('error', new Error('invalid signature: 0x' + signature.toString(16)));\n  });\n};\n\nParse.prototype._readCrxHeader = function () {\n  var self = this;\n  return self.pull(12).then(function (data) {\n    self.crxHeader = binary.parse(data).word32lu('version').word32lu('pubKeyLength').word32lu('signatureLength').vars;\n    return self.pull(self.crxHeader.pubKeyLength + self.crxHeader.signatureLength);\n  }).then(function (data) {\n    self.crxHeader.publicKey = data.slice(0, self.crxHeader.pubKeyLength);\n    self.crxHeader.signature = data.slice(self.crxHeader.pubKeyLength);\n    self.emit('crx-header', self.crxHeader);\n    return self._readRecord();\n  });\n};\n\nParse.prototype._readFile = function () {\n  var self = this;\n  return self.pull(26).then(function (data) {\n    var vars = binary.parse(data).word16lu('versionsNeededToExtract').word16lu('flags').word16lu('compressionMethod').word16lu('lastModifiedTime').word16lu('lastModifiedDate').word32lu('crc32').word32lu('compressedSize').word32lu('uncompressedSize').word16lu('fileNameLength').word16lu('extraFieldLength').vars;\n    vars.lastModifiedDateTime = parseDateTime(vars.lastModifiedDate, vars.lastModifiedTime);\n    if (self.crxHeader) vars.crxHeader = self.crxHeader;\n    return self.pull(vars.fileNameLength).then(function (fileNameBuffer) {\n      var fileName = fileNameBuffer.toString('utf8');\n      var entry = Stream.PassThrough();\n      var __autodraining = false;\n\n      entry.autodrain = function () {\n        __autodraining = true;\n        var draining = entry.pipe(NoopStream());\n\n        draining.promise = function () {\n          return new Promise(function (resolve, reject) {\n            draining.on('finish', resolve);\n            draining.on('error', reject);\n          });\n        };\n\n        return draining;\n      };\n\n      entry.buffer = function () {\n        return BufferStream(entry);\n      };\n\n      entry.path = fileName;\n      entry.props = {};\n      entry.props.path = fileName;\n      entry.props.pathBuffer = fileNameBuffer;\n      entry.props.flags = {\n        \"isUnicode\": vars.flags & 0x11\n      };\n      entry.type = vars.uncompressedSize === 0 && /[\\/\\\\]$/.test(fileName) ? 'Directory' : 'File';\n\n      if (self._opts.verbose) {\n        if (entry.type === 'Directory') {\n          console.log('   creating:', fileName);\n        } else if (entry.type === 'File') {\n          if (vars.compressionMethod === 0) {\n            console.log(' extracting:', fileName);\n          } else {\n            console.log('  inflating:', fileName);\n          }\n        }\n      }\n\n      return self.pull(vars.extraFieldLength).then(function (extraField) {\n        var extra = parseExtraField(extraField, vars);\n        entry.vars = vars;\n        entry.extra = extra;\n\n        if (self._opts.forceStream) {\n          self.push(entry);\n        } else {\n          self.emit('entry', entry);\n          if (self._readableState.pipesCount || self._readableState.pipes && self._readableState.pipes.length) self.push(entry);\n        }\n\n        if (self._opts.verbose) console.log({\n          filename: fileName,\n          vars: vars,\n          extra: extra\n        });\n        var fileSizeKnown = !(vars.flags & 0x08) || vars.compressedSize > 0,\n            eof;\n        entry.__autodraining = __autodraining; // expose __autodraining for test purposes\n\n        var inflater = vars.compressionMethod && !__autodraining ? zlib.createInflateRaw() : Stream.PassThrough();\n\n        if (fileSizeKnown) {\n          entry.size = vars.uncompressedSize;\n          eof = vars.compressedSize;\n        } else {\n          eof = Buffer.alloc(4);\n          eof.writeUInt32LE(0x08074b50, 0);\n        }\n\n        return new Promise(function (resolve, reject) {\n          self.stream(eof).pipe(inflater).on('error', function (err) {\n            self.emit('error', err);\n          }).pipe(entry).on('finish', function () {\n            return fileSizeKnown ? self._readRecord().then(resolve).catch(reject) : self._processDataDescriptor(entry).then(resolve).catch(reject);\n          });\n        });\n      });\n    });\n  });\n};\n\nParse.prototype._processDataDescriptor = function (entry) {\n  var self = this;\n  return self.pull(16).then(function (data) {\n    var vars = binary.parse(data).word32lu('dataDescriptorSignature').word32lu('crc32').word32lu('compressedSize').word32lu('uncompressedSize').vars;\n    entry.size = vars.uncompressedSize;\n    return self._readRecord();\n  });\n};\n\nParse.prototype._readCentralDirectoryFileHeader = function () {\n  var self = this;\n  return self.pull(42).then(function (data) {\n    var vars = binary.parse(data).word16lu('versionMadeBy').word16lu('versionsNeededToExtract').word16lu('flags').word16lu('compressionMethod').word16lu('lastModifiedTime').word16lu('lastModifiedDate').word32lu('crc32').word32lu('compressedSize').word32lu('uncompressedSize').word16lu('fileNameLength').word16lu('extraFieldLength').word16lu('fileCommentLength').word16lu('diskNumber').word16lu('internalFileAttributes').word32lu('externalFileAttributes').word32lu('offsetToLocalFileHeader').vars;\n    return self.pull(vars.fileNameLength).then(function (fileName) {\n      vars.fileName = fileName.toString('utf8');\n      return self.pull(vars.extraFieldLength);\n    }).then(function (extraField) {\n      return self.pull(vars.fileCommentLength);\n    }).then(function (fileComment) {\n      return self._readRecord();\n    });\n  });\n};\n\nParse.prototype._readEndOfCentralDirectoryRecord = function () {\n  var self = this;\n  return self.pull(18).then(function (data) {\n    var vars = binary.parse(data).word16lu('diskNumber').word16lu('diskStart').word16lu('numberOfRecordsOnDisk').word16lu('numberOfRecords').word32lu('sizeOfCentralDirectory').word32lu('offsetToStartOfCentralDirectory').word16lu('commentLength').vars;\n    return self.pull(vars.commentLength).then(function (comment) {\n      comment = comment.toString('utf8');\n      self.end();\n      self.push(null);\n    });\n  });\n};\n\nParse.prototype.promise = function () {\n  var self = this;\n  return new Promise(function (resolve, reject) {\n    self.on('finish', resolve);\n    self.on('error', reject);\n  });\n};\n\nmodule.exports = Parse;","map":{"version":3,"sources":["/home/dev/Documentos/Projects/github-clone/node_modules/unzipper/lib/parse.js"],"names":["util","require","zlib","Stream","binary","Promise","PullStream","NoopStream","BufferStream","parseExtraField","Buffer","parseDateTime","Writable","prototype","destroy","endDirectorySignature","alloc","writeUInt32LE","Parse","opts","self","_opts","verbose","call","on","emit","_readRecord","catch","e","__emittedError","inherits","pull","then","data","length","signature","readUInt32LE","_readCrxHeader","_readFile","__ended","_readCentralDirectoryFileHeader","_readEndOfCentralDirectoryRecord","Error","toString","crxHeader","parse","word32lu","vars","pubKeyLength","signatureLength","publicKey","slice","word16lu","lastModifiedDateTime","lastModifiedDate","lastModifiedTime","fileNameLength","fileNameBuffer","fileName","entry","PassThrough","__autodraining","autodrain","draining","pipe","promise","resolve","reject","buffer","path","props","pathBuffer","flags","type","uncompressedSize","test","console","log","compressionMethod","extraFieldLength","extraField","extra","forceStream","push","_readableState","pipesCount","pipes","filename","fileSizeKnown","compressedSize","eof","inflater","createInflateRaw","size","stream","err","_processDataDescriptor","fileCommentLength","fileComment","commentLength","comment","end","module","exports"],"mappings":"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","sourcesContent":["var util = require('util');\nvar zlib = require('zlib');\nvar Stream = require('stream');\nvar binary = require('binary');\nvar Promise = require('bluebird');\nvar PullStream = require('./PullStream');\nvar NoopStream = require('./NoopStream');\nvar BufferStream = require('./BufferStream');\nvar parseExtraField = require('./parseExtraField');\nvar Buffer = require('./Buffer');\nvar parseDateTime = require('./parseDateTime');\n\n// Backwards compatibility for node versions < 8\nif (!Stream.Writable || !Stream.Writable.prototype.destroy)\n  Stream = require('readable-stream');\n\nvar endDirectorySignature = Buffer.alloc(4);\nendDirectorySignature.writeUInt32LE(0x06054b50, 0);\n\nfunction Parse(opts) {\n  if (!(this instanceof Parse)) {\n    return new Parse(opts);\n  }\n  var self = this;\n  self._opts = opts || { verbose: false };\n\n  PullStream.call(self, self._opts);\n  self.on('finish',function() {\n    self.emit('close');\n  });\n  self._readRecord().catch(function(e) {\n    if (!self.__emittedError || self.__emittedError !== e)\n      self.emit('error',e);\n  });\n}\n\nutil.inherits(Parse, PullStream);\n\nParse.prototype._readRecord = function () {\n  var self = this;\n  return self.pull(4).then(function(data) {\n    if (data.length === 0)\n      return;\n\n    var signature = data.readUInt32LE(0);\n\n    if (signature === 0x34327243) {\n      return self._readCrxHeader();\n    }\n    if (signature === 0x04034b50) {\n      return self._readFile();\n    }\n    else if (signature === 0x02014b50) {\n      self.__ended = true;\n      return self._readCentralDirectoryFileHeader();\n    }\n    else if (signature === 0x06054b50) {\n      return self._readEndOfCentralDirectoryRecord();\n    }\n    else if (self.__ended) {\n      return self.pull(endDirectorySignature).then(function() {\n          return self._readEndOfCentralDirectoryRecord();\n        });\n    }\n    else\n      self.emit('error', new Error('invalid signature: 0x' + signature.toString(16)));\n  });\n};\n\nParse.prototype._readCrxHeader = function() {\n  var self = this;\n  return self.pull(12).then(function(data) {\n    self.crxHeader = binary.parse(data)\n      .word32lu('version')\n      .word32lu('pubKeyLength')\n      .word32lu('signatureLength')\n      .vars;\n    return self.pull(self.crxHeader.pubKeyLength + self.crxHeader.signatureLength);\n  }).then(function(data) {\n    self.crxHeader.publicKey = data.slice(0,self.crxHeader.pubKeyLength);\n    self.crxHeader.signature = data.slice(self.crxHeader.pubKeyLength);\n    self.emit('crx-header',self.crxHeader);\n    return self._readRecord();\n  });\n};\n\nParse.prototype._readFile = function () {\n  var self = this;\n  return self.pull(26).then(function(data) {\n    var vars = binary.parse(data)\n      .word16lu('versionsNeededToExtract')\n      .word16lu('flags')\n      .word16lu('compressionMethod')\n      .word16lu('lastModifiedTime')\n      .word16lu('lastModifiedDate')\n      .word32lu('crc32')\n      .word32lu('compressedSize')\n      .word32lu('uncompressedSize')\n      .word16lu('fileNameLength')\n      .word16lu('extraFieldLength')\n      .vars;\n\n    vars.lastModifiedDateTime = parseDateTime(vars.lastModifiedDate, vars.lastModifiedTime);\n\n    if (self.crxHeader) vars.crxHeader = self.crxHeader;\n\n    return self.pull(vars.fileNameLength).then(function(fileNameBuffer) {\n      var fileName = fileNameBuffer.toString('utf8');\n      var entry = Stream.PassThrough();\n      var __autodraining = false;\n\n      entry.autodrain = function() {\n        __autodraining = true;\n        var draining = entry.pipe(NoopStream());\n        draining.promise = function() {\n          return new Promise(function(resolve, reject) {\n            draining.on('finish',resolve);\n            draining.on('error',reject);\n          });\n        };\n        return draining;\n      };\n\n      entry.buffer = function() {\n        return BufferStream(entry);\n      };\n\n      entry.path = fileName;\n      entry.props = {};\n      entry.props.path = fileName;\n      entry.props.pathBuffer = fileNameBuffer;\n      entry.props.flags = {\n        \"isUnicode\": vars.flags & 0x11\n      };\n      entry.type = (vars.uncompressedSize === 0 && /[\\/\\\\]$/.test(fileName)) ? 'Directory' : 'File';\n\n      if (self._opts.verbose) {\n        if (entry.type === 'Directory') {\n          console.log('   creating:', fileName);\n        } else if (entry.type === 'File') {\n          if (vars.compressionMethod === 0) {\n            console.log(' extracting:', fileName);\n          } else {\n            console.log('  inflating:', fileName);\n          }\n        }\n      }\n\n      return self.pull(vars.extraFieldLength).then(function(extraField) {\n        var extra = parseExtraField(extraField, vars);\n\n        entry.vars = vars;\n        entry.extra = extra;\n\n        if (self._opts.forceStream) {\n          self.push(entry);\n        } else {\n          self.emit('entry', entry);\n\n          if (self._readableState.pipesCount || (self._readableState.pipes && self._readableState.pipes.length))\n            self.push(entry);\n        }\n\n        if (self._opts.verbose)\n          console.log({\n            filename:fileName,\n            vars: vars,\n            extra: extra\n          });\n\n        var fileSizeKnown = !(vars.flags & 0x08) || vars.compressedSize > 0,\n            eof;\n\n        entry.__autodraining = __autodraining;  // expose __autodraining for test purposes\n        var inflater = (vars.compressionMethod && !__autodraining) ? zlib.createInflateRaw() : Stream.PassThrough();\n\n        if (fileSizeKnown) {\n          entry.size = vars.uncompressedSize;\n          eof = vars.compressedSize;\n        } else {\n          eof = Buffer.alloc(4);\n          eof.writeUInt32LE(0x08074b50, 0);\n        }\n\n        return new Promise(function(resolve, reject) {\n          self.stream(eof)\n            .pipe(inflater)\n            .on('error',function(err) { self.emit('error',err);})\n            .pipe(entry)\n            .on('finish', function() {\n              return fileSizeKnown ?\n                self._readRecord().then(resolve).catch(reject) :\n                self._processDataDescriptor(entry).then(resolve).catch(reject);\n            });\n        });\n      });\n    });\n  });\n};\n\nParse.prototype._processDataDescriptor = function (entry) {\n  var self = this;\n  return self.pull(16).then(function(data) {\n    var vars = binary.parse(data)\n      .word32lu('dataDescriptorSignature')\n      .word32lu('crc32')\n      .word32lu('compressedSize')\n      .word32lu('uncompressedSize')\n      .vars;\n\n    entry.size = vars.uncompressedSize;\n    return self._readRecord();\n  });\n};\n\nParse.prototype._readCentralDirectoryFileHeader = function () {\n  var self = this;\n  return self.pull(42).then(function(data) {\n\n    var vars = binary.parse(data)\n      .word16lu('versionMadeBy')\n      .word16lu('versionsNeededToExtract')\n      .word16lu('flags')\n      .word16lu('compressionMethod')\n      .word16lu('lastModifiedTime')\n      .word16lu('lastModifiedDate')\n      .word32lu('crc32')\n      .word32lu('compressedSize')\n      .word32lu('uncompressedSize')\n      .word16lu('fileNameLength')\n      .word16lu('extraFieldLength')\n      .word16lu('fileCommentLength')\n      .word16lu('diskNumber')\n      .word16lu('internalFileAttributes')\n      .word32lu('externalFileAttributes')\n      .word32lu('offsetToLocalFileHeader')\n      .vars;\n\n    return self.pull(vars.fileNameLength).then(function(fileName) {\n      vars.fileName = fileName.toString('utf8');\n      return self.pull(vars.extraFieldLength);\n    })\n    .then(function(extraField) {\n      return self.pull(vars.fileCommentLength);\n    })\n    .then(function(fileComment) {\n      return self._readRecord();\n    });\n  });\n};\n\nParse.prototype._readEndOfCentralDirectoryRecord = function() {\n  var self = this;\n  return self.pull(18).then(function(data) {\n\n    var vars = binary.parse(data)\n      .word16lu('diskNumber')\n      .word16lu('diskStart')\n      .word16lu('numberOfRecordsOnDisk')\n      .word16lu('numberOfRecords')\n      .word32lu('sizeOfCentralDirectory')\n      .word32lu('offsetToStartOfCentralDirectory')\n      .word16lu('commentLength')\n      .vars;\n\n    return self.pull(vars.commentLength).then(function(comment) {\n      comment = comment.toString('utf8');\n      self.end();\n      self.push(null);\n    });\n\n  });\n};\n\nParse.prototype.promise = function() {\n  var self = this;\n  return new Promise(function(resolve,reject) {\n    self.on('finish',resolve);\n    self.on('error',reject);\n  });\n};\n\nmodule.exports = Parse;\n"]},"metadata":{},"sourceType":"script"}