{"ast":null,"code":"\"use strict\";\n/**\n * True during (or between) the specified time(s).\n *\n * Even though the examples don't show it, this parameter may be present in\n * each of the different parameter profiles, always as the last parameter.\n *\n *\n * Examples:\n *\n * ``` js\n * timerange(12)\n * true from noon to 1pm.\n *\n * timerange(12, 13)\n * same as above.\n *\n * timerange(12, \"GMT\")\n * true from noon to 1pm, in GMT timezone.\n *\n * timerange(9, 17)\n * true from 9am to 5pm.\n *\n * timerange(8, 30, 17, 00)\n * true from 8:30am to 5:00pm.\n *\n * timerange(0, 0, 0, 0, 0, 30)\n * true between midnight and 30 seconds past midnight.\n * ```\n *\n * timeRange(hour)\n * timeRange(hour1, hour2)\n * timeRange(hour1, min1, hour2, min2)\n * timeRange(hour1, min1, sec1, hour2, min2, sec2)\n * timeRange(hour1, min1, sec1, hour2, min2, sec2, gmt)\n *\n * @param {String} hour is the hour from 0 to 23. (0 is midnight, 23 is 11 pm.)\n * @param {String} min minutes from 0 to 59.\n * @param {String} sec seconds from 0 to 59.\n * @param {String} gmt either the string \"GMT\" for GMT timezone, or not specified, for local timezone.\n * @return {Boolean}\n */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nfunction timeRange() {\n  var args = Array.prototype.slice.call(arguments),\n      lastArg = args.pop(),\n      useGMTzone = lastArg == 'GMT',\n      currentDate = new Date();\n\n  if (!useGMTzone) {\n    args.push(lastArg);\n  }\n\n  var noOfArgs = args.length,\n      result = false,\n      numericArgs = args.map(function (n) {\n    return parseInt(n);\n  }); // timeRange(hour)\n\n  if (noOfArgs == 1) {\n    result = getCurrentHour(useGMTzone, currentDate) == numericArgs[0]; // timeRange(hour1, hour2)\n  } else if (noOfArgs == 2) {\n    var currentHour = getCurrentHour(useGMTzone, currentDate);\n    result = numericArgs[0] <= currentHour && currentHour < numericArgs[1]; // timeRange(hour1, min1, hour2, min2)\n  } else if (noOfArgs == 4) {\n    result = valueInRange(secondsElapsedToday(numericArgs[0], numericArgs[1], 0), secondsElapsedToday(getCurrentHour(useGMTzone, currentDate), getCurrentMinute(useGMTzone, currentDate), 0), secondsElapsedToday(numericArgs[2], numericArgs[3], 59)); // timeRange(hour1, min1, sec1, hour2, min2, sec2)\n  } else if (noOfArgs == 6) {\n    result = valueInRange(secondsElapsedToday(numericArgs[0], numericArgs[1], numericArgs[2]), secondsElapsedToday(getCurrentHour(useGMTzone, currentDate), getCurrentMinute(useGMTzone, currentDate), getCurrentSecond(useGMTzone, currentDate)), secondsElapsedToday(numericArgs[3], numericArgs[4], numericArgs[5]));\n  }\n\n  return result;\n}\n\nexports.default = timeRange;\n\nfunction secondsElapsedToday(hh, mm, ss) {\n  return hh * 3600 + mm * 60 + ss;\n}\n\nfunction getCurrentHour(gmt, currentDate) {\n  return gmt ? currentDate.getUTCHours() : currentDate.getHours();\n}\n\nfunction getCurrentMinute(gmt, currentDate) {\n  return gmt ? currentDate.getUTCMinutes() : currentDate.getMinutes();\n}\n\nfunction getCurrentSecond(gmt, currentDate) {\n  return gmt ? currentDate.getUTCSeconds() : currentDate.getSeconds();\n} // start <= value <= finish\n\n\nfunction valueInRange(start, value, finish) {\n  return start <= value && value <= finish;\n}","map":{"version":3,"sources":["../src/timeRange.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\n/**\n * True during (or between) the specified time(s).\n *\n * Even though the examples don't show it, this parameter may be present in\n * each of the different parameter profiles, always as the last parameter.\n *\n *\n * Examples:\n *\n * ``` js\n * timerange(12)\n * true from noon to 1pm.\n *\n * timerange(12, 13)\n * same as above.\n *\n * timerange(12, \"GMT\")\n * true from noon to 1pm, in GMT timezone.\n *\n * timerange(9, 17)\n * true from 9am to 5pm.\n *\n * timerange(8, 30, 17, 00)\n * true from 8:30am to 5:00pm.\n *\n * timerange(0, 0, 0, 0, 0, 30)\n * true between midnight and 30 seconds past midnight.\n * ```\n *\n * timeRange(hour)\n * timeRange(hour1, hour2)\n * timeRange(hour1, min1, hour2, min2)\n * timeRange(hour1, min1, sec1, hour2, min2, sec2)\n * timeRange(hour1, min1, sec1, hour2, min2, sec2, gmt)\n *\n * @param {String} hour is the hour from 0 to 23. (0 is midnight, 23 is 11 pm.)\n * @param {String} min minutes from 0 to 59.\n * @param {String} sec seconds from 0 to 59.\n * @param {String} gmt either the string \"GMT\" for GMT timezone, or not specified, for local timezone.\n * @return {Boolean}\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction timeRange() {\n    var args = Array.prototype.slice.call(arguments), lastArg = args.pop(), useGMTzone = lastArg == 'GMT', currentDate = new Date();\n    if (!useGMTzone) {\n        args.push(lastArg);\n    }\n    var noOfArgs = args.length, result = false, numericArgs = args.map(function (n) {\n        return parseInt(n);\n    });\n    // timeRange(hour)\n    if (noOfArgs == 1) {\n        result = getCurrentHour(useGMTzone, currentDate) == numericArgs[0];\n        // timeRange(hour1, hour2)\n    }\n    else if (noOfArgs == 2) {\n        var currentHour = getCurrentHour(useGMTzone, currentDate);\n        result = numericArgs[0] <= currentHour && currentHour < numericArgs[1];\n        // timeRange(hour1, min1, hour2, min2)\n    }\n    else if (noOfArgs == 4) {\n        result = valueInRange(secondsElapsedToday(numericArgs[0], numericArgs[1], 0), secondsElapsedToday(getCurrentHour(useGMTzone, currentDate), getCurrentMinute(useGMTzone, currentDate), 0), secondsElapsedToday(numericArgs[2], numericArgs[3], 59));\n        // timeRange(hour1, min1, sec1, hour2, min2, sec2)\n    }\n    else if (noOfArgs == 6) {\n        result = valueInRange(secondsElapsedToday(numericArgs[0], numericArgs[1], numericArgs[2]), secondsElapsedToday(getCurrentHour(useGMTzone, currentDate), getCurrentMinute(useGMTzone, currentDate), getCurrentSecond(useGMTzone, currentDate)), secondsElapsedToday(numericArgs[3], numericArgs[4], numericArgs[5]));\n    }\n    return result;\n}\nexports.default = timeRange;\nfunction secondsElapsedToday(hh, mm, ss) {\n    return hh * 3600 + mm * 60 + ss;\n}\nfunction getCurrentHour(gmt, currentDate) {\n    return gmt ? currentDate.getUTCHours() : currentDate.getHours();\n}\nfunction getCurrentMinute(gmt, currentDate) {\n    return gmt ? currentDate.getUTCMinutes() : currentDate.getMinutes();\n}\nfunction getCurrentSecond(gmt, currentDate) {\n    return gmt ? currentDate.getUTCSeconds() : currentDate.getSeconds();\n}\n// start <= value <= finish\nfunction valueInRange(start, value, finish) {\n    return start <= value && value <= finish;\n}\n//# sourceMappingURL=timeRange.js.map"]},"metadata":{},"sourceType":"script"}