{"ast":null,"code":"/**\n * Module dependencies.\n */\nvar colors = require('colors/safe'),\n    utils = require('./utils'),\n    repeat = utils.repeat,\n    truncate = utils.truncate,\n    pad = utils.pad;\n/**\n * Table constructor\n *\n * @param {Object} options\n * @api public\n */\n\n\nfunction Table(options) {\n  this.options = utils.options({\n    chars: {\n      'top': '─',\n      'top-mid': '┬',\n      'top-left': '┌',\n      'top-right': '┐',\n      'bottom': '─',\n      'bottom-mid': '┴',\n      'bottom-left': '└',\n      'bottom-right': '┘',\n      'left': '│',\n      'left-mid': '├',\n      'mid': '─',\n      'mid-mid': '┼',\n      'right': '│',\n      'right-mid': '┤',\n      'middle': '│'\n    },\n    truncate: '…',\n    colWidths: [],\n    colAligns: [],\n    style: {\n      'padding-left': 1,\n      'padding-right': 1,\n      head: ['red'],\n      border: ['grey'],\n      compact: false\n    },\n    head: []\n  }, options);\n}\n\n;\n/**\n * Inherit from Array.\n */\n\nTable.prototype.__proto__ = Array.prototype;\n/**\n * Width getter\n *\n * @return {Number} width\n * @api public\n */\n\nTable.prototype.__defineGetter__('width', function () {\n  var str = this.toString().split(\"\\n\");\n  if (str.length) return str[0].length;\n  return 0;\n});\n/**\n * Render to a string.\n *\n * @return {String} table representation\n * @api public\n */\n\n\nTable.prototype.render;\n\nTable.prototype.toString = function () {\n  var ret = '',\n      options = this.options,\n      style = options.style,\n      head = options.head,\n      chars = options.chars,\n      truncater = options.truncate,\n      colWidths = options.colWidths || new Array(this.head.length),\n      totalWidth = 0;\n  if (!head.length && !this.length) return '';\n\n  if (!colWidths.length) {\n    var all_rows = this.slice(0);\n\n    if (head.length) {\n      all_rows = all_rows.concat([head]);\n    }\n\n    ;\n    all_rows.forEach(function (cells) {\n      // horizontal (arrays)\n      if (typeof cells === 'object' && cells.length) {\n        extractColumnWidths(cells); // vertical (objects)\n      } else {\n        var header_cell = Object.keys(cells)[0],\n            value_cell = cells[header_cell];\n        colWidths[0] = Math.max(colWidths[0] || 0, get_width(header_cell) || 0); // cross (objects w/ array values)\n\n        if (typeof value_cell === 'object' && value_cell.length) {\n          extractColumnWidths(value_cell, 1);\n        } else {\n          colWidths[1] = Math.max(colWidths[1] || 0, get_width(value_cell) || 0);\n        }\n      }\n    });\n  }\n\n  ;\n  totalWidth = (colWidths.length == 1 ? colWidths[0] : colWidths.reduce(function (a, b) {\n    return a + b;\n  })) + colWidths.length + 1;\n\n  function extractColumnWidths(arr, offset) {\n    var offset = offset || 0;\n    arr.forEach(function (cell, i) {\n      colWidths[i + offset] = Math.max(colWidths[i + offset] || 0, get_width(cell) || 0);\n    });\n  }\n\n  ;\n\n  function get_width(obj) {\n    return typeof obj == 'object' && obj.width != undefined ? obj.width : (typeof obj == 'object' ? utils.strlen(obj.text) : utils.strlen(obj)) + (style['padding-left'] || 0) + (style['padding-right'] || 0);\n  } // draws a line\n\n\n  function line(line, left, right, intersection) {\n    var width = 0,\n        line = left + repeat(line, totalWidth - 2) + right;\n    colWidths.forEach(function (w, i) {\n      if (i == colWidths.length - 1) return;\n      width += w + 1;\n      line = line.substr(0, width) + intersection + line.substr(width + 1);\n    });\n    return applyStyles(options.style.border, line);\n  }\n\n  ; // draws the top line\n\n  function lineTop() {\n    var l = line(chars.top, chars['top-left'] || chars.top, chars['top-right'] || chars.top, chars['top-mid']);\n    if (l) ret += l + \"\\n\";\n  }\n\n  ;\n\n  function generateRow(items, style) {\n    var cells = [],\n        max_height = 0; // prepare vertical and cross table data\n\n    if (!Array.isArray(items) && typeof items === \"object\") {\n      var key = Object.keys(items)[0],\n          value = items[key],\n          first_cell_head = true;\n\n      if (Array.isArray(value)) {\n        items = value;\n        items.unshift(key);\n      } else {\n        items = [key, value];\n      }\n    } // transform array of item strings into structure of cells\n\n\n    items.forEach(function (item, i) {\n      var contents = item.toString().split(\"\\n\").reduce(function (memo, l) {\n        memo.push(string(l, i));\n        return memo;\n      }, []);\n      var height = contents.length;\n\n      if (height > max_height) {\n        max_height = height;\n      }\n\n      ;\n      cells.push({\n        contents: contents,\n        height: height\n      });\n    }); // transform vertical cells into horizontal lines\n\n    var lines = new Array(max_height);\n    cells.forEach(function (cell, i) {\n      cell.contents.forEach(function (line, j) {\n        if (!lines[j]) {\n          lines[j] = [];\n        }\n\n        ;\n\n        if (style || first_cell_head && i === 0 && options.style.head) {\n          line = applyStyles(options.style.head, line);\n        }\n\n        lines[j].push(line);\n      }); // populate empty lines in cell\n\n      for (var j = cell.height, l = max_height; j < l; j++) {\n        if (!lines[j]) {\n          lines[j] = [];\n        }\n\n        ;\n        lines[j].push(string('', i));\n      }\n    });\n    var ret = \"\";\n    lines.forEach(function (line, index) {\n      if (ret.length > 0) {\n        ret += \"\\n\" + applyStyles(options.style.border, chars.left);\n      }\n\n      ret += line.join(applyStyles(options.style.border, chars.middle)) + applyStyles(options.style.border, chars.right);\n    });\n    return applyStyles(options.style.border, chars.left) + ret;\n  }\n\n  ;\n\n  function applyStyles(styles, subject) {\n    if (!subject) return '';\n    styles.forEach(function (style) {\n      subject = colors[style](subject);\n    });\n    return subject;\n  }\n\n  ; // renders a string, by padding it or truncating it\n\n  function string(str, index) {\n    var str = String(typeof str == 'object' && str.text ? str.text : str),\n        length = utils.strlen(str),\n        width = colWidths[index] - (style['padding-left'] || 0) - (style['padding-right'] || 0),\n        align = options.colAligns[index] || 'left';\n    return repeat(' ', style['padding-left'] || 0) + (length == width ? str : length < width ? pad(str, width + (str.length - length), ' ', align == 'left' ? 'right' : align == 'middle' ? 'both' : 'left') : truncater ? truncate(str, width, truncater) : str) + repeat(' ', style['padding-right'] || 0);\n  }\n\n  ;\n\n  if (head.length) {\n    lineTop();\n    ret += generateRow(head, style.head) + \"\\n\";\n  }\n\n  if (this.length) this.forEach(function (cells, i) {\n    if (!head.length && i == 0) lineTop();else {\n      if (!style.compact || i < !!head.length ? 1 : 0 || cells.length == 0) {\n        var l = line(chars.mid, chars['left-mid'], chars['right-mid'], chars['mid-mid']);\n        if (l) ret += l + \"\\n\";\n      }\n    }\n\n    if (cells.hasOwnProperty(\"length\") && !cells.length) {\n      return;\n    } else {\n      ret += generateRow(cells) + \"\\n\";\n    }\n\n    ;\n  });\n  var l = line(chars.bottom, chars['bottom-left'] || chars.bottom, chars['bottom-right'] || chars.bottom, chars['bottom-mid']);\n  if (l) ret += l;else // trim the last '\\n' if we didn't add the bottom decoration\n    ret = ret.slice(0, -1);\n  return ret;\n};\n/**\n * Module exports.\n */\n\n\nmodule.exports = Table;\nmodule.exports.version = '0.0.1';","map":{"version":3,"sources":["/home/dev/Documentos/Projects/github-clone/node_modules/cli-table/lib/index.js"],"names":["colors","require","utils","repeat","truncate","pad","Table","options","chars","colWidths","colAligns","style","head","border","compact","prototype","__proto__","Array","__defineGetter__","str","toString","split","length","render","ret","truncater","totalWidth","all_rows","slice","concat","forEach","cells","extractColumnWidths","header_cell","Object","keys","value_cell","Math","max","get_width","reduce","a","b","arr","offset","cell","i","obj","width","undefined","strlen","text","line","left","right","intersection","w","substr","applyStyles","lineTop","l","top","generateRow","items","max_height","isArray","key","value","first_cell_head","unshift","item","contents","memo","push","string","height","lines","j","index","join","middle","styles","subject","String","align","mid","hasOwnProperty","bottom","module","exports","version"],"mappings":"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","sourcesContent":["\n/**\n * Module dependencies.\n */\n\nvar colors = require('colors/safe')\n  , utils = require('./utils')\n  , repeat = utils.repeat\n  , truncate = utils.truncate\n  , pad = utils.pad;\n\n/**\n * Table constructor\n *\n * @param {Object} options\n * @api public\n */\n\nfunction Table (options){\n  this.options = utils.options({\n      chars: {\n          'top': '─'\n        , 'top-mid': '┬'\n        , 'top-left': '┌'\n        , 'top-right': '┐'\n        , 'bottom': '─'\n        , 'bottom-mid': '┴'\n        , 'bottom-left': '└'\n        , 'bottom-right': '┘'\n        , 'left': '│'\n        , 'left-mid': '├'\n        , 'mid': '─'\n        , 'mid-mid': '┼'\n        , 'right': '│'\n        , 'right-mid': '┤'\n        , 'middle': '│'\n      }\n    , truncate: '…'\n    , colWidths: []\n    , colAligns: []\n    , style: {\n          'padding-left': 1\n        , 'padding-right': 1\n        , head: ['red']\n        , border: ['grey']\n        , compact : false\n      }\n    , head: []\n  }, options);\n};\n\n/**\n * Inherit from Array.\n */\n\nTable.prototype.__proto__ = Array.prototype;\n\n/**\n * Width getter\n *\n * @return {Number} width\n * @api public\n */\n\nTable.prototype.__defineGetter__('width', function (){\n  var str = this.toString().split(\"\\n\");\n  if (str.length) return str[0].length;\n  return 0;\n});\n\n/**\n * Render to a string.\n *\n * @return {String} table representation\n * @api public\n */\n\nTable.prototype.render\nTable.prototype.toString = function (){\n  var ret = ''\n    , options = this.options\n    , style = options.style\n    , head = options.head\n    , chars = options.chars\n    , truncater = options.truncate\n      , colWidths = options.colWidths || new Array(this.head.length)\n      , totalWidth = 0;\n\n    if (!head.length && !this.length) return '';\n\n    if (!colWidths.length){\n      var all_rows = this.slice(0);\n      if (head.length) { all_rows = all_rows.concat([head]) };\n\n      all_rows.forEach(function(cells){\n        // horizontal (arrays)\n        if (typeof cells === 'object' && cells.length) {\n          extractColumnWidths(cells);\n\n        // vertical (objects)\n        } else {\n          var header_cell = Object.keys(cells)[0]\n            , value_cell = cells[header_cell];\n\n          colWidths[0] = Math.max(colWidths[0] || 0, get_width(header_cell) || 0);\n\n          // cross (objects w/ array values)\n          if (typeof value_cell === 'object' && value_cell.length) {\n            extractColumnWidths(value_cell, 1);\n          } else {\n            colWidths[1] = Math.max(colWidths[1] || 0, get_width(value_cell) || 0);\n          }\n        }\n    });\n  };\n\n  totalWidth = (colWidths.length == 1 ? colWidths[0] : colWidths.reduce(\n    function (a, b){\n      return a + b\n    })) + colWidths.length + 1;\n\n  function extractColumnWidths(arr, offset) {\n    var offset = offset || 0;\n    arr.forEach(function(cell, i){\n      colWidths[i + offset] = Math.max(colWidths[i + offset] || 0, get_width(cell) || 0);\n    });\n  };\n\n  function get_width(obj) {\n    return typeof obj == 'object' && obj.width != undefined\n         ? obj.width\n         : ((typeof obj == 'object' ? utils.strlen(obj.text) : utils.strlen(obj)) + (style['padding-left'] || 0) + (style['padding-right'] || 0))\n  }\n\n  // draws a line\n  function line (line, left, right, intersection){\n    var width = 0\n      , line =\n          left\n        + repeat(line, totalWidth - 2)\n        + right;\n\n    colWidths.forEach(function (w, i){\n      if (i == colWidths.length - 1) return;\n      width += w + 1;\n      line = line.substr(0, width) + intersection + line.substr(width + 1);\n    });\n\n    return applyStyles(options.style.border, line);\n  };\n\n  // draws the top line\n  function lineTop (){\n    var l = line(chars.top\n               , chars['top-left'] || chars.top\n               , chars['top-right'] ||  chars.top\n               , chars['top-mid']);\n    if (l)\n      ret += l + \"\\n\";\n  };\n\n  function generateRow (items, style) {\n    var cells = []\n      , max_height = 0;\n\n    // prepare vertical and cross table data\n    if (!Array.isArray(items) && typeof items === \"object\") {\n      var key = Object.keys(items)[0]\n        , value = items[key]\n        , first_cell_head = true;\n\n      if (Array.isArray(value)) {\n        items = value;\n        items.unshift(key);\n      } else {\n        items = [key, value];\n      }\n    }\n\n    // transform array of item strings into structure of cells\n    items.forEach(function (item, i) {\n      var contents = item.toString().split(\"\\n\").reduce(function (memo, l) {\n        memo.push(string(l, i));\n        return memo;\n      }, [])\n\n      var height = contents.length;\n      if (height > max_height) { max_height = height };\n\n      cells.push({ contents: contents , height: height });\n    });\n\n    // transform vertical cells into horizontal lines\n    var lines = new Array(max_height);\n    cells.forEach(function (cell, i) {\n      cell.contents.forEach(function (line, j) {\n        if (!lines[j]) { lines[j] = [] };\n        if (style || (first_cell_head && i === 0 && options.style.head)) {\n          line = applyStyles(options.style.head, line)\n        }\n\n        lines[j].push(line);\n      });\n\n      // populate empty lines in cell\n      for (var j = cell.height, l = max_height; j < l; j++) {\n        if (!lines[j]) { lines[j] = [] };\n        lines[j].push(string('', i));\n      }\n    });\n    var ret = \"\";\n    lines.forEach(function (line, index) {\n      if (ret.length > 0) {\n        ret += \"\\n\" + applyStyles(options.style.border, chars.left);\n      }\n\n      ret += line.join(applyStyles(options.style.border, chars.middle)) + applyStyles(options.style.border, chars.right);\n    });\n\n    return applyStyles(options.style.border, chars.left) + ret;\n  };\n\n  function applyStyles(styles, subject) {\n    if (!subject)\n      return '';\n    styles.forEach(function(style) {\n      subject = colors[style](subject);\n    });\n    return subject;\n  };\n\n  // renders a string, by padding it or truncating it\n  function string (str, index){\n    var str = String(typeof str == 'object' && str.text ? str.text : str)\n      , length = utils.strlen(str)\n      , width = colWidths[index]\n          - (style['padding-left'] || 0)\n          - (style['padding-right'] || 0)\n      , align = options.colAligns[index] || 'left';\n\n    return repeat(' ', style['padding-left'] || 0)\n         + (length == width ? str :\n             (length < width\n              ? pad(str, ( width + (str.length - length) ), ' ', align == 'left' ? 'right' :\n                  (align == 'middle' ? 'both' : 'left'))\n              : (truncater ? truncate(str, width, truncater) : str))\n           )\n         + repeat(' ', style['padding-right'] || 0);\n  };\n\n  if (head.length){\n    lineTop();\n\n    ret += generateRow(head, style.head) + \"\\n\"\n  }\n\n  if (this.length)\n    this.forEach(function (cells, i){\n      if (!head.length && i == 0)\n        lineTop();\n      else {\n        if (!style.compact || i<(!!head.length) ?1:0 || cells.length == 0){\n          var l = line(chars.mid\n                     , chars['left-mid']\n                     , chars['right-mid']\n                     , chars['mid-mid']);\n          if (l)\n            ret += l + \"\\n\"\n        }\n      }\n\n      if (cells.hasOwnProperty(\"length\") && !cells.length) {\n        return\n      } else {\n        ret += generateRow(cells) + \"\\n\";\n      };\n    });\n\n  var l = line(chars.bottom\n             , chars['bottom-left'] || chars.bottom\n             , chars['bottom-right'] || chars.bottom\n             , chars['bottom-mid']);\n  if (l)\n    ret += l;\n  else\n    // trim the last '\\n' if we didn't add the bottom decoration\n    ret = ret.slice(0, -1);\n\n  return ret;\n};\n\n/**\n * Module exports.\n */\n\nmodule.exports = Table;\n\nmodule.exports.version = '0.0.1';\n"]},"metadata":{},"sourceType":"script"}