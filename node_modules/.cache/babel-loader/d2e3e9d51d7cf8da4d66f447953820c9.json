{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nconst checkMinRequiredVersion_1 = require(\"../checkMinRequiredVersion\");\n\nconst command_1 = require(\"../command\");\n\nconst commandUtils = require(\"../emulator/commandUtils\");\n\nconst optionsHelper = require(\"../extensions/emulator/optionsHelper\");\n\nmodule.exports = new command_1.Command(\"ext:dev:emulators:exec <script>\").description(\"emulate an extension, run a test script, then shut down the emulators\").before(commandUtils.setExportOnExitOptions).option(commandUtils.FLAG_INSPECT_FUNCTIONS, commandUtils.DESC_INSPECT_FUNCTIONS).option(commandUtils.FLAG_TEST_CONFIG, commandUtils.DESC_TEST_CONFIG).option(commandUtils.FLAG_TEST_PARAMS, commandUtils.DESC_TEST_PARAMS).option(commandUtils.FLAG_IMPORT, commandUtils.DESC_IMPORT).option(commandUtils.FLAG_EXPORT_ON_EXIT, commandUtils.DESC_EXPORT_ON_EXIT).option(commandUtils.FLAG_UI, commandUtils.DESC_UI).before(checkMinRequiredVersion_1.checkMinRequiredVersion, \"extDevMinVersion\").action(async (script, options) => {\n  const emulatorOptions = await optionsHelper.buildOptions(options);\n  commandUtils.beforeEmulatorCommand(emulatorOptions);\n  await commandUtils.emulatorExec(script, emulatorOptions);\n});","map":{"version":3,"sources":["/home/dev/Documentos/Projects/github-clone/node_modules/firebase-tools/lib/commands/ext-dev-emulators-exec.js"],"names":["Object","defineProperty","exports","value","checkMinRequiredVersion_1","require","command_1","commandUtils","optionsHelper","module","Command","description","before","setExportOnExitOptions","option","FLAG_INSPECT_FUNCTIONS","DESC_INSPECT_FUNCTIONS","FLAG_TEST_CONFIG","DESC_TEST_CONFIG","FLAG_TEST_PARAMS","DESC_TEST_PARAMS","FLAG_IMPORT","DESC_IMPORT","FLAG_EXPORT_ON_EXIT","DESC_EXPORT_ON_EXIT","FLAG_UI","DESC_UI","checkMinRequiredVersion","action","script","options","emulatorOptions","buildOptions","beforeEmulatorCommand","emulatorExec"],"mappings":"AAAA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;;AACA,MAAMC,yBAAyB,GAAGC,OAAO,CAAC,4BAAD,CAAzC;;AACA,MAAMC,SAAS,GAAGD,OAAO,CAAC,YAAD,CAAzB;;AACA,MAAME,YAAY,GAAGF,OAAO,CAAC,0BAAD,CAA5B;;AACA,MAAMG,aAAa,GAAGH,OAAO,CAAC,sCAAD,CAA7B;;AACAI,MAAM,CAACP,OAAP,GAAiB,IAAII,SAAS,CAACI,OAAd,CAAsB,iCAAtB,EACZC,WADY,CACA,uEADA,EAEZC,MAFY,CAELL,YAAY,CAACM,sBAFR,EAGZC,MAHY,CAGLP,YAAY,CAACQ,sBAHR,EAGgCR,YAAY,CAACS,sBAH7C,EAIZF,MAJY,CAILP,YAAY,CAACU,gBAJR,EAI0BV,YAAY,CAACW,gBAJvC,EAKZJ,MALY,CAKLP,YAAY,CAACY,gBALR,EAK0BZ,YAAY,CAACa,gBALvC,EAMZN,MANY,CAMLP,YAAY,CAACc,WANR,EAMqBd,YAAY,CAACe,WANlC,EAOZR,MAPY,CAOLP,YAAY,CAACgB,mBAPR,EAO6BhB,YAAY,CAACiB,mBAP1C,EAQZV,MARY,CAQLP,YAAY,CAACkB,OARR,EAQiBlB,YAAY,CAACmB,OAR9B,EASZd,MATY,CASLR,yBAAyB,CAACuB,uBATrB,EAS8C,kBAT9C,EAUZC,MAVY,CAUL,OAAOC,MAAP,EAAeC,OAAf,KAA2B;AACnC,QAAMC,eAAe,GAAG,MAAMvB,aAAa,CAACwB,YAAd,CAA2BF,OAA3B,CAA9B;AACAvB,EAAAA,YAAY,CAAC0B,qBAAb,CAAmCF,eAAnC;AACA,QAAMxB,YAAY,CAAC2B,YAAb,CAA0BL,MAA1B,EAAkCE,eAAlC,CAAN;AACH,CAdgB,CAAjB","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst checkMinRequiredVersion_1 = require(\"../checkMinRequiredVersion\");\nconst command_1 = require(\"../command\");\nconst commandUtils = require(\"../emulator/commandUtils\");\nconst optionsHelper = require(\"../extensions/emulator/optionsHelper\");\nmodule.exports = new command_1.Command(\"ext:dev:emulators:exec <script>\")\n    .description(\"emulate an extension, run a test script, then shut down the emulators\")\n    .before(commandUtils.setExportOnExitOptions)\n    .option(commandUtils.FLAG_INSPECT_FUNCTIONS, commandUtils.DESC_INSPECT_FUNCTIONS)\n    .option(commandUtils.FLAG_TEST_CONFIG, commandUtils.DESC_TEST_CONFIG)\n    .option(commandUtils.FLAG_TEST_PARAMS, commandUtils.DESC_TEST_PARAMS)\n    .option(commandUtils.FLAG_IMPORT, commandUtils.DESC_IMPORT)\n    .option(commandUtils.FLAG_EXPORT_ON_EXIT, commandUtils.DESC_EXPORT_ON_EXIT)\n    .option(commandUtils.FLAG_UI, commandUtils.DESC_UI)\n    .before(checkMinRequiredVersion_1.checkMinRequiredVersion, \"extDevMinVersion\")\n    .action(async (script, options) => {\n    const emulatorOptions = await optionsHelper.buildOptions(options);\n    commandUtils.beforeEmulatorCommand(emulatorOptions);\n    await commandUtils.emulatorExec(script, emulatorOptions);\n});\n"]},"metadata":{},"sourceType":"script"}