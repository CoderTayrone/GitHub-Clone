{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createDeploymentPlan = exports.calculateRegionalFunctionChanges = exports.allRegions = exports.functionsByRegion = void 0;\n\nconst functionsDeployHelper_1 = require(\"./functionsDeployHelper\");\n\nconst validate_1 = require(\"./validate\");\n\nconst deploymentTool_1 = require(\"../../deploymentTool\");\n\nconst utils_1 = require(\"../../utils\");\n\nconst backend = require(\"./backend\");\n\nconst gcfv2 = require(\"../../gcp/cloudfunctionsv2\");\n\nfunction functionsByRegion(allFunctions) {\n  const partitioned = {};\n\n  for (const fn of allFunctions) {\n    partitioned[fn.region] = partitioned[fn.region] || [];\n    partitioned[fn.region].push(fn);\n  }\n\n  return partitioned;\n}\n\nexports.functionsByRegion = functionsByRegion;\n\nfunction allRegions(spec, existing) {\n  return Object.keys(Object.assign(Object.assign({}, spec), existing));\n}\n\nexports.allRegions = allRegions;\n\nconst matchesId = hasId => test => {\n  return hasId.id === test.id;\n};\n\nfunction calculateRegionalFunctionChanges(want, have, options) {\n  want = want.filter(fn => functionsDeployHelper_1.functionMatchesAnyGroup(fn, options.filters));\n  have = have.filter(fn => functionsDeployHelper_1.functionMatchesAnyGroup(fn, options.filters));\n  let upgradedToGCFv2WithoutSettingConcurrency = false;\n  const functionsToCreate = want.filter(fn => !have.some(matchesId(fn)));\n  const functionsToUpdate = want.filter(fn => {\n    const haveFn = have.find(matchesId(fn));\n\n    if (!haveFn) {\n      return false;\n    }\n\n    validate_1.checkForInvalidChangeOfTrigger(fn, haveFn);\n\n    if (!options.overwriteEnvs) {\n      fn.environmentVariables = Object.assign(Object.assign({}, haveFn.environmentVariables), fn.environmentVariables);\n    }\n\n    if (haveFn.platform === \"gcfv1\" && fn.platform === \"gcfv2\" && !fn.concurrency) {\n      upgradedToGCFv2WithoutSettingConcurrency = true;\n    }\n\n    return true;\n  }).map(fn => {\n    const haveFn = have.find(matchesId(fn));\n    const deleteAndRecreate = needsDeleteAndRecreate(haveFn, fn);\n    return {\n      func: fn,\n      deleteAndRecreate\n    };\n  });\n  const functionsToDelete = have.filter(fn => !want.some(matchesId(fn))).filter(fn => deploymentTool_1.isFirebaseManaged(fn.labels || {}));\n\n  if (upgradedToGCFv2WithoutSettingConcurrency) {\n    utils_1.logLabeledBullet(\"functions\", \"You are updating one or more functions to Google Cloud Functions v2, \" + \"which introduces support for concurrent execution. New functions \" + \"default to 80 concurrent executions, but existing functions keep the \" + \"old default of 1. You can change this with the 'concurrency' option.\");\n  }\n\n  return {\n    functionsToCreate,\n    functionsToUpdate,\n    functionsToDelete\n  };\n}\n\nexports.calculateRegionalFunctionChanges = calculateRegionalFunctionChanges;\n\nfunction createDeploymentPlan(want, have, options) {\n  const deployment = {\n    regionalDeployments: {},\n    schedulesToUpsert: [],\n    schedulesToDelete: [],\n    topicsToDelete: []\n  };\n  const wantRegionalFunctions = functionsByRegion(want.cloudFunctions);\n  const haveRegionalFunctions = functionsByRegion(have.cloudFunctions);\n\n  for (const region of allRegions(wantRegionalFunctions, haveRegionalFunctions)) {\n    const want = wantRegionalFunctions[region] || [];\n    const have = haveRegionalFunctions[region] || [];\n    deployment.regionalDeployments[region] = calculateRegionalFunctionChanges(want, have, options);\n  }\n\n  deployment.schedulesToUpsert = want.schedules.filter(schedule => functionsDeployHelper_1.functionMatchesAnyGroup(schedule.targetService, options.filters));\n  deployment.schedulesToDelete = have.schedules.filter(schedule => !want.schedules.some(matchesId(schedule))).filter(schedule => functionsDeployHelper_1.functionMatchesAnyGroup(schedule.targetService, options.filters));\n  deployment.topicsToDelete = have.topics.filter(topic => !want.topics.some(matchesId(topic))).filter(topic => functionsDeployHelper_1.functionMatchesAnyGroup(topic.targetService, options.filters));\n  return deployment;\n}\n\nexports.createDeploymentPlan = createDeploymentPlan;\n\nfunction needsDeleteAndRecreate(exFn, fn) {\n  return changedV2PubSubTopic(exFn, fn);\n}\n\nfunction changedV2PubSubTopic(exFn, fn) {\n  if (exFn.platform !== \"gcfv2\") {\n    return false;\n  }\n\n  if (fn.platform !== \"gcfv2\") {\n    return false;\n  }\n\n  if (!backend.isEventTrigger(exFn.trigger)) {\n    return false;\n  }\n\n  if (!backend.isEventTrigger(fn.trigger)) {\n    return false;\n  }\n\n  if (exFn.trigger.eventType !== gcfv2.PUBSUB_PUBLISH_EVENT) {\n    return false;\n  }\n\n  if (fn.trigger.eventType != gcfv2.PUBSUB_PUBLISH_EVENT) {\n    return false;\n  }\n\n  return exFn.trigger.eventFilters[\"resource\"] != fn.trigger.eventFilters[\"resource\"];\n}","map":{"version":3,"sources":["/home/dev/Documentos/Projects/github-clone/node_modules/firebase-tools/lib/deploy/functions/deploymentPlanner.js"],"names":["Object","defineProperty","exports","value","createDeploymentPlan","calculateRegionalFunctionChanges","allRegions","functionsByRegion","functionsDeployHelper_1","require","validate_1","deploymentTool_1","utils_1","backend","gcfv2","allFunctions","partitioned","fn","region","push","spec","existing","keys","assign","matchesId","hasId","test","id","want","have","options","filter","functionMatchesAnyGroup","filters","upgradedToGCFv2WithoutSettingConcurrency","functionsToCreate","some","functionsToUpdate","haveFn","find","checkForInvalidChangeOfTrigger","overwriteEnvs","environmentVariables","platform","concurrency","map","deleteAndRecreate","needsDeleteAndRecreate","func","functionsToDelete","isFirebaseManaged","labels","logLabeledBullet","deployment","regionalDeployments","schedulesToUpsert","schedulesToDelete","topicsToDelete","wantRegionalFunctions","cloudFunctions","haveRegionalFunctions","schedules","schedule","targetService","topics","topic","exFn","changedV2PubSubTopic","isEventTrigger","trigger","eventType","PUBSUB_PUBLISH_EVENT","eventFilters"],"mappings":"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","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createDeploymentPlan = exports.calculateRegionalFunctionChanges = exports.allRegions = exports.functionsByRegion = void 0;\nconst functionsDeployHelper_1 = require(\"./functionsDeployHelper\");\nconst validate_1 = require(\"./validate\");\nconst deploymentTool_1 = require(\"../../deploymentTool\");\nconst utils_1 = require(\"../../utils\");\nconst backend = require(\"./backend\");\nconst gcfv2 = require(\"../../gcp/cloudfunctionsv2\");\nfunction functionsByRegion(allFunctions) {\n    const partitioned = {};\n    for (const fn of allFunctions) {\n        partitioned[fn.region] = partitioned[fn.region] || [];\n        partitioned[fn.region].push(fn);\n    }\n    return partitioned;\n}\nexports.functionsByRegion = functionsByRegion;\nfunction allRegions(spec, existing) {\n    return Object.keys(Object.assign(Object.assign({}, spec), existing));\n}\nexports.allRegions = allRegions;\nconst matchesId = (hasId) => (test) => {\n    return hasId.id === test.id;\n};\nfunction calculateRegionalFunctionChanges(want, have, options) {\n    want = want.filter((fn) => functionsDeployHelper_1.functionMatchesAnyGroup(fn, options.filters));\n    have = have.filter((fn) => functionsDeployHelper_1.functionMatchesAnyGroup(fn, options.filters));\n    let upgradedToGCFv2WithoutSettingConcurrency = false;\n    const functionsToCreate = want.filter((fn) => !have.some(matchesId(fn)));\n    const functionsToUpdate = want\n        .filter((fn) => {\n        const haveFn = have.find(matchesId(fn));\n        if (!haveFn) {\n            return false;\n        }\n        validate_1.checkForInvalidChangeOfTrigger(fn, haveFn);\n        if (!options.overwriteEnvs) {\n            fn.environmentVariables = Object.assign(Object.assign({}, haveFn.environmentVariables), fn.environmentVariables);\n        }\n        if (haveFn.platform === \"gcfv1\" && fn.platform === \"gcfv2\" && !fn.concurrency) {\n            upgradedToGCFv2WithoutSettingConcurrency = true;\n        }\n        return true;\n    })\n        .map((fn) => {\n        const haveFn = have.find(matchesId(fn));\n        const deleteAndRecreate = needsDeleteAndRecreate(haveFn, fn);\n        return {\n            func: fn,\n            deleteAndRecreate,\n        };\n    });\n    const functionsToDelete = have\n        .filter((fn) => !want.some(matchesId(fn)))\n        .filter((fn) => deploymentTool_1.isFirebaseManaged(fn.labels || {}));\n    if (upgradedToGCFv2WithoutSettingConcurrency) {\n        utils_1.logLabeledBullet(\"functions\", \"You are updating one or more functions to Google Cloud Functions v2, \" +\n            \"which introduces support for concurrent execution. New functions \" +\n            \"default to 80 concurrent executions, but existing functions keep the \" +\n            \"old default of 1. You can change this with the 'concurrency' option.\");\n    }\n    return { functionsToCreate, functionsToUpdate, functionsToDelete };\n}\nexports.calculateRegionalFunctionChanges = calculateRegionalFunctionChanges;\nfunction createDeploymentPlan(want, have, options) {\n    const deployment = {\n        regionalDeployments: {},\n        schedulesToUpsert: [],\n        schedulesToDelete: [],\n        topicsToDelete: [],\n    };\n    const wantRegionalFunctions = functionsByRegion(want.cloudFunctions);\n    const haveRegionalFunctions = functionsByRegion(have.cloudFunctions);\n    for (const region of allRegions(wantRegionalFunctions, haveRegionalFunctions)) {\n        const want = wantRegionalFunctions[region] || [];\n        const have = haveRegionalFunctions[region] || [];\n        deployment.regionalDeployments[region] = calculateRegionalFunctionChanges(want, have, options);\n    }\n    deployment.schedulesToUpsert = want.schedules.filter((schedule) => functionsDeployHelper_1.functionMatchesAnyGroup(schedule.targetService, options.filters));\n    deployment.schedulesToDelete = have.schedules\n        .filter((schedule) => !want.schedules.some(matchesId(schedule)))\n        .filter((schedule) => functionsDeployHelper_1.functionMatchesAnyGroup(schedule.targetService, options.filters));\n    deployment.topicsToDelete = have.topics\n        .filter((topic) => !want.topics.some(matchesId(topic)))\n        .filter((topic) => functionsDeployHelper_1.functionMatchesAnyGroup(topic.targetService, options.filters));\n    return deployment;\n}\nexports.createDeploymentPlan = createDeploymentPlan;\nfunction needsDeleteAndRecreate(exFn, fn) {\n    return changedV2PubSubTopic(exFn, fn);\n}\nfunction changedV2PubSubTopic(exFn, fn) {\n    if (exFn.platform !== \"gcfv2\") {\n        return false;\n    }\n    if (fn.platform !== \"gcfv2\") {\n        return false;\n    }\n    if (!backend.isEventTrigger(exFn.trigger)) {\n        return false;\n    }\n    if (!backend.isEventTrigger(fn.trigger)) {\n        return false;\n    }\n    if (exFn.trigger.eventType !== gcfv2.PUBSUB_PUBLISH_EVENT) {\n        return false;\n    }\n    if (fn.trigger.eventType != gcfv2.PUBSUB_PUBLISH_EVENT) {\n        return false;\n    }\n    return exFn.trigger.eventFilters[\"resource\"] != fn.trigger.eventFilters[\"resource\"];\n}\n"]},"metadata":{},"sourceType":"script"}