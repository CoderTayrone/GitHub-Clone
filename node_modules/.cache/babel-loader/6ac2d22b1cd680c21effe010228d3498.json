{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ErrorHandler = void 0;\n\nconst clc = require(\"cli-color\");\n\nconst logger_1 = require(\"../../logger\");\n\nconst functionsDeployHelper_1 = require(\"./functionsDeployHelper\");\n\nconst error_1 = require(\"../../error\");\n\nclass ErrorHandler {\n  constructor() {\n    this.errors = [];\n    this.warnings = [];\n  }\n\n  record(level, functionName, operationType, message) {\n    const info = {\n      functionName,\n      operationType,\n      message\n    };\n\n    if (level === \"error\") {\n      this.errors.push(info);\n    } else if (level === \"warning\") {\n      this.warnings.push(info);\n    }\n  }\n\n  printErrors() {\n    if (this.errors.length === 0) {\n      return;\n    }\n\n    logger_1.logger.info(\"\");\n    logger_1.logger.info(\"Functions deploy had errors with the following functions:\");\n\n    for (const failedDeployment of this.errors) {\n      logger_1.logger.info(`\\t${functionsDeployHelper_1.getFunctionLabel(failedDeployment.functionName)}`);\n    }\n\n    const failedIamCalls = this.errors.filter(e => e.operationType === \"set invoker\");\n\n    if (failedIamCalls.length) {\n      logger_1.logger.info(\"\");\n      logger_1.logger.info(\"Unable to set the invoker for the IAM policy on the following functions:\");\n\n      for (const failedDep of failedIamCalls) {\n        logger_1.logger.info(`\\t${failedDep.functionName}`);\n      }\n\n      logger_1.logger.info(\"\");\n      logger_1.logger.info(\"Some common causes of this:\");\n      logger_1.logger.info(\"\");\n      logger_1.logger.info(\"- You may not have the roles/functions.admin IAM role. Note that roles/functions.developer does not allow you to change IAM policies.\");\n      logger_1.logger.info(\"\");\n      logger_1.logger.info(\"- An organization policy that restricts Network Access on your project.\");\n    }\n\n    logger_1.logger.info(\"\");\n    logger_1.logger.info(\"To try redeploying those functions, run:\");\n    logger_1.logger.info(\"    \" + clc.bold(\"firebase deploy --only \") + clc.bold('\"') + clc.bold(this.errors.map(failedDeployment => `functions:${functionsDeployHelper_1.getFunctionId(failedDeployment.functionName).replace(/-/g, \".\")}`).join(\",\")) + clc.bold('\"'));\n    logger_1.logger.info(\"\");\n    logger_1.logger.info(\"To continue deploying other features (such as database), run:\");\n    logger_1.logger.info(\"    \" + clc.bold(\"firebase deploy --except functions\"));\n\n    for (const failedDeployment of this.errors) {\n      logger_1.logger.debug(`\\tError during ${failedDeployment.operationType} for ${failedDeployment.functionName}: ${failedDeployment.message}`);\n    }\n\n    throw new error_1.FirebaseError(\"Functions did not deploy properly.\");\n  }\n\n  printWarnings() {\n    if (this.warnings.length === 0) {\n      return;\n    }\n\n    for (const failedDeployment of this.warnings) {\n      logger_1.logger.debug(`\\tWarning during${failedDeployment.operationType} for ${failedDeployment.functionName}: ${failedDeployment.message}`);\n    }\n  }\n\n}\n\nexports.ErrorHandler = ErrorHandler;","map":{"version":3,"sources":["/home/dev/Documentos/Projects/github-clone/node_modules/firebase-tools/lib/deploy/functions/errorHandler.js"],"names":["Object","defineProperty","exports","value","ErrorHandler","clc","require","logger_1","functionsDeployHelper_1","error_1","constructor","errors","warnings","record","level","functionName","operationType","message","info","push","printErrors","length","logger","failedDeployment","getFunctionLabel","failedIamCalls","filter","e","failedDep","bold","map","getFunctionId","replace","join","debug","FirebaseError","printWarnings"],"mappings":"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","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ErrorHandler = void 0;\nconst clc = require(\"cli-color\");\nconst logger_1 = require(\"../../logger\");\nconst functionsDeployHelper_1 = require(\"./functionsDeployHelper\");\nconst error_1 = require(\"../../error\");\nclass ErrorHandler {\n    constructor() {\n        this.errors = [];\n        this.warnings = [];\n    }\n    record(level, functionName, operationType, message) {\n        const info = {\n            functionName,\n            operationType,\n            message,\n        };\n        if (level === \"error\") {\n            this.errors.push(info);\n        }\n        else if (level === \"warning\") {\n            this.warnings.push(info);\n        }\n    }\n    printErrors() {\n        if (this.errors.length === 0) {\n            return;\n        }\n        logger_1.logger.info(\"\");\n        logger_1.logger.info(\"Functions deploy had errors with the following functions:\");\n        for (const failedDeployment of this.errors) {\n            logger_1.logger.info(`\\t${functionsDeployHelper_1.getFunctionLabel(failedDeployment.functionName)}`);\n        }\n        const failedIamCalls = this.errors.filter((e) => e.operationType === \"set invoker\");\n        if (failedIamCalls.length) {\n            logger_1.logger.info(\"\");\n            logger_1.logger.info(\"Unable to set the invoker for the IAM policy on the following functions:\");\n            for (const failedDep of failedIamCalls) {\n                logger_1.logger.info(`\\t${failedDep.functionName}`);\n            }\n            logger_1.logger.info(\"\");\n            logger_1.logger.info(\"Some common causes of this:\");\n            logger_1.logger.info(\"\");\n            logger_1.logger.info(\"- You may not have the roles/functions.admin IAM role. Note that roles/functions.developer does not allow you to change IAM policies.\");\n            logger_1.logger.info(\"\");\n            logger_1.logger.info(\"- An organization policy that restricts Network Access on your project.\");\n        }\n        logger_1.logger.info(\"\");\n        logger_1.logger.info(\"To try redeploying those functions, run:\");\n        logger_1.logger.info(\"    \" +\n            clc.bold(\"firebase deploy --only \") +\n            clc.bold('\"') +\n            clc.bold(this.errors\n                .map((failedDeployment) => `functions:${functionsDeployHelper_1.getFunctionId(failedDeployment.functionName).replace(/-/g, \".\")}`)\n                .join(\",\")) +\n            clc.bold('\"'));\n        logger_1.logger.info(\"\");\n        logger_1.logger.info(\"To continue deploying other features (such as database), run:\");\n        logger_1.logger.info(\"    \" + clc.bold(\"firebase deploy --except functions\"));\n        for (const failedDeployment of this.errors) {\n            logger_1.logger.debug(`\\tError during ${failedDeployment.operationType} for ${failedDeployment.functionName}: ${failedDeployment.message}`);\n        }\n        throw new error_1.FirebaseError(\"Functions did not deploy properly.\");\n    }\n    printWarnings() {\n        if (this.warnings.length === 0) {\n            return;\n        }\n        for (const failedDeployment of this.warnings) {\n            logger_1.logger.debug(`\\tWarning during${failedDeployment.operationType} for ${failedDeployment.functionName}: ${failedDeployment.message}`);\n        }\n    }\n}\nexports.ErrorHandler = ErrorHandler;\n"]},"metadata":{},"sourceType":"script"}