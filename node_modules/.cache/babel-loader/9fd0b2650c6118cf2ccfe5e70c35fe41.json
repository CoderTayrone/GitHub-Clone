{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.profiler = void 0;\n\nconst fs = require(\"fs\");\n\nconst ora = require(\"ora\");\n\nconst readline = require(\"readline\");\n\nconst tmp = require(\"tmp\");\n\nconst abort_controller_1 = require(\"abort-controller\");\n\nconst apiv2_1 = require(\"./apiv2\");\n\nconst api_1 = require(\"./database/api\");\n\nconst logger_1 = require(\"./logger\");\n\nconst ProfileReport = require(\"./profileReport\");\n\nconst responseToError = require(\"./responseToError\");\n\nconst utils = require(\"./utils\");\n\ntmp.setGracefulCleanup();\n\nasync function profiler(options) {\n  const origin = api_1.realtimeOriginOrEmulatorOrCustomUrl(options.instanceDetails.databaseUrl);\n  const url = new URL(utils.getDatabaseUrl(origin, options.instance, \"/.settings/profile.json?\"));\n  const rl = readline.createInterface({\n    input: process.stdin\n  });\n  const fileOut = !!options.output;\n  const tmpFile = tmp.tmpNameSync();\n  const tmpStream = fs.createWriteStream(tmpFile);\n  const outStream = fileOut ? fs.createWriteStream(options.output) : process.stdout;\n  const spinner = ora({\n    text: \"0 operations recorded. Press [enter] to stop\",\n    color: \"yellow\"\n  });\n  const outputFormat = options.raw ? \"RAW\" : options.parent.json ? \"JSON\" : \"TXT\";\n  const controller = new abort_controller_1.default();\n\n  const generateReport = () => {\n    rl.close();\n    spinner.stop();\n    controller.abort();\n    const dataFile = options.input || tmpFile;\n    const reportOptions = {\n      format: outputFormat,\n      isFile: fileOut,\n      isInput: !!options.input,\n      collapse: options.collapse\n    };\n    const report = new ProfileReport(dataFile, outStream, reportOptions);\n    return report.generate();\n  };\n\n  if (options.input) {\n    return generateReport();\n  }\n\n  const c = new apiv2_1.Client({\n    urlPrefix: url.origin,\n    auth: true\n  });\n  const res = await c.request({\n    method: \"GET\",\n    path: url.pathname,\n    responseType: \"stream\",\n    resolveOnHTTPError: true,\n    headers: {\n      Accept: \"text/event-stream\"\n    },\n    signal: controller.signal\n  });\n\n  if (res.response.status >= 400) {\n    throw responseToError(res.response, await res.response.text());\n  }\n\n  if (!options.duration) {\n    spinner.start();\n  }\n\n  let counter = 0;\n  res.body.on(\"data\", chunk => {\n    if (chunk.toString().includes(\"event: log\")) {\n      counter++;\n      spinner.text = `${counter} operations recorded. Press [enter] to stop`;\n    }\n  });\n  res.body.on(\"end\", () => {\n    spinner.text = counter + \" operations recorded.\\n\";\n  });\n  let resError;\n  res.body.on(\"error\", e => {\n    if (e.type !== \"aborted\") {\n      resError = e;\n      logger_1.logger.error(\"Unexpected error from response stream:\", e);\n    }\n  });\n  const p = new Promise((resolve, reject) => {\n    const fn = () => {\n      controller.abort();\n\n      if (resError) {\n        return reject(resError);\n      }\n\n      resolve(generateReport());\n    };\n\n    if (options.duration) {\n      setTimeout(fn, options.duration * 1000);\n    } else {\n      rl.question(\"\", fn);\n    }\n  });\n  res.body.pipe(tmpStream);\n  return p;\n}\n\nexports.profiler = profiler;","map":{"version":3,"sources":["/home/dev/Documentos/Projects/github-clone/node_modules/firebase-tools/lib/profiler.js"],"names":["Object","defineProperty","exports","value","profiler","fs","require","ora","readline","tmp","abort_controller_1","apiv2_1","api_1","logger_1","ProfileReport","responseToError","utils","setGracefulCleanup","options","origin","realtimeOriginOrEmulatorOrCustomUrl","instanceDetails","databaseUrl","url","URL","getDatabaseUrl","instance","rl","createInterface","input","process","stdin","fileOut","output","tmpFile","tmpNameSync","tmpStream","createWriteStream","outStream","stdout","spinner","text","color","outputFormat","raw","parent","json","controller","default","generateReport","close","stop","abort","dataFile","reportOptions","format","isFile","isInput","collapse","report","generate","c","Client","urlPrefix","auth","res","request","method","path","pathname","responseType","resolveOnHTTPError","headers","Accept","signal","response","status","duration","start","counter","body","on","chunk","toString","includes","resError","e","type","logger","error","p","Promise","resolve","reject","fn","setTimeout","question","pipe"],"mappings":"AAAA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;AACAD,OAAO,CAACE,QAAR,GAAmB,KAAK,CAAxB;;AACA,MAAMC,EAAE,GAAGC,OAAO,CAAC,IAAD,CAAlB;;AACA,MAAMC,GAAG,GAAGD,OAAO,CAAC,KAAD,CAAnB;;AACA,MAAME,QAAQ,GAAGF,OAAO,CAAC,UAAD,CAAxB;;AACA,MAAMG,GAAG,GAAGH,OAAO,CAAC,KAAD,CAAnB;;AACA,MAAMI,kBAAkB,GAAGJ,OAAO,CAAC,kBAAD,CAAlC;;AACA,MAAMK,OAAO,GAAGL,OAAO,CAAC,SAAD,CAAvB;;AACA,MAAMM,KAAK,GAAGN,OAAO,CAAC,gBAAD,CAArB;;AACA,MAAMO,QAAQ,GAAGP,OAAO,CAAC,UAAD,CAAxB;;AACA,MAAMQ,aAAa,GAAGR,OAAO,CAAC,iBAAD,CAA7B;;AACA,MAAMS,eAAe,GAAGT,OAAO,CAAC,mBAAD,CAA/B;;AACA,MAAMU,KAAK,GAAGV,OAAO,CAAC,SAAD,CAArB;;AACAG,GAAG,CAACQ,kBAAJ;;AACA,eAAeb,QAAf,CAAwBc,OAAxB,EAAiC;AAC7B,QAAMC,MAAM,GAAGP,KAAK,CAACQ,mCAAN,CAA0CF,OAAO,CAACG,eAAR,CAAwBC,WAAlE,CAAf;AACA,QAAMC,GAAG,GAAG,IAAIC,GAAJ,CAAQR,KAAK,CAACS,cAAN,CAAqBN,MAArB,EAA6BD,OAAO,CAACQ,QAArC,EAA+C,0BAA/C,CAAR,CAAZ;AACA,QAAMC,EAAE,GAAGnB,QAAQ,CAACoB,eAAT,CAAyB;AAAEC,IAAAA,KAAK,EAAEC,OAAO,CAACC;AAAjB,GAAzB,CAAX;AACA,QAAMC,OAAO,GAAG,CAAC,CAACd,OAAO,CAACe,MAA1B;AACA,QAAMC,OAAO,GAAGzB,GAAG,CAAC0B,WAAJ,EAAhB;AACA,QAAMC,SAAS,GAAG/B,EAAE,CAACgC,iBAAH,CAAqBH,OAArB,CAAlB;AACA,QAAMI,SAAS,GAAGN,OAAO,GAAG3B,EAAE,CAACgC,iBAAH,CAAqBnB,OAAO,CAACe,MAA7B,CAAH,GAA0CH,OAAO,CAACS,MAA3E;AACA,QAAMC,OAAO,GAAGjC,GAAG,CAAC;AAChBkC,IAAAA,IAAI,EAAE,8CADU;AAEhBC,IAAAA,KAAK,EAAE;AAFS,GAAD,CAAnB;AAIA,QAAMC,YAAY,GAAGzB,OAAO,CAAC0B,GAAR,GAAc,KAAd,GAAsB1B,OAAO,CAAC2B,MAAR,CAAeC,IAAf,GAAsB,MAAtB,GAA+B,KAA1E;AACA,QAAMC,UAAU,GAAG,IAAIrC,kBAAkB,CAACsC,OAAvB,EAAnB;;AACA,QAAMC,cAAc,GAAG,MAAM;AACzBtB,IAAAA,EAAE,CAACuB,KAAH;AACAV,IAAAA,OAAO,CAACW,IAAR;AACAJ,IAAAA,UAAU,CAACK,KAAX;AACA,UAAMC,QAAQ,GAAGnC,OAAO,CAACW,KAAR,IAAiBK,OAAlC;AACA,UAAMoB,aAAa,GAAG;AAClBC,MAAAA,MAAM,EAAEZ,YADU;AAElBa,MAAAA,MAAM,EAAExB,OAFU;AAGlByB,MAAAA,OAAO,EAAE,CAAC,CAACvC,OAAO,CAACW,KAHD;AAIlB6B,MAAAA,QAAQ,EAAExC,OAAO,CAACwC;AAJA,KAAtB;AAMA,UAAMC,MAAM,GAAG,IAAI7C,aAAJ,CAAkBuC,QAAlB,EAA4Bf,SAA5B,EAAuCgB,aAAvC,CAAf;AACA,WAAOK,MAAM,CAACC,QAAP,EAAP;AACH,GAbD;;AAcA,MAAI1C,OAAO,CAACW,KAAZ,EAAmB;AACf,WAAOoB,cAAc,EAArB;AACH;;AACD,QAAMY,CAAC,GAAG,IAAIlD,OAAO,CAACmD,MAAZ,CAAmB;AAAEC,IAAAA,SAAS,EAAExC,GAAG,CAACJ,MAAjB;AAAyB6C,IAAAA,IAAI,EAAE;AAA/B,GAAnB,CAAV;AACA,QAAMC,GAAG,GAAG,MAAMJ,CAAC,CAACK,OAAF,CAAU;AACxBC,IAAAA,MAAM,EAAE,KADgB;AAExBC,IAAAA,IAAI,EAAE7C,GAAG,CAAC8C,QAFc;AAGxBC,IAAAA,YAAY,EAAE,QAHU;AAIxBC,IAAAA,kBAAkB,EAAE,IAJI;AAKxBC,IAAAA,OAAO,EAAE;AACLC,MAAAA,MAAM,EAAE;AADH,KALe;AAQxBC,IAAAA,MAAM,EAAE3B,UAAU,CAAC2B;AARK,GAAV,CAAlB;;AAUA,MAAIT,GAAG,CAACU,QAAJ,CAAaC,MAAb,IAAuB,GAA3B,EAAgC;AAC5B,UAAM7D,eAAe,CAACkD,GAAG,CAACU,QAAL,EAAe,MAAMV,GAAG,CAACU,QAAJ,CAAalC,IAAb,EAArB,CAArB;AACH;;AACD,MAAI,CAACvB,OAAO,CAAC2D,QAAb,EAAuB;AACnBrC,IAAAA,OAAO,CAACsC,KAAR;AACH;;AACD,MAAIC,OAAO,GAAG,CAAd;AACAd,EAAAA,GAAG,CAACe,IAAJ,CAASC,EAAT,CAAY,MAAZ,EAAqBC,KAAD,IAAW;AAC3B,QAAIA,KAAK,CAACC,QAAN,GAAiBC,QAAjB,CAA0B,YAA1B,CAAJ,EAA6C;AACzCL,MAAAA,OAAO;AACPvC,MAAAA,OAAO,CAACC,IAAR,GAAgB,GAAEsC,OAAQ,6CAA1B;AACH;AACJ,GALD;AAMAd,EAAAA,GAAG,CAACe,IAAJ,CAASC,EAAT,CAAY,KAAZ,EAAmB,MAAM;AACrBzC,IAAAA,OAAO,CAACC,IAAR,GAAesC,OAAO,GAAG,yBAAzB;AACH,GAFD;AAGA,MAAIM,QAAJ;AACApB,EAAAA,GAAG,CAACe,IAAJ,CAASC,EAAT,CAAY,OAAZ,EAAsBK,CAAD,IAAO;AACxB,QAAIA,CAAC,CAACC,IAAF,KAAW,SAAf,EAA0B;AACtBF,MAAAA,QAAQ,GAAGC,CAAX;AACAzE,MAAAA,QAAQ,CAAC2E,MAAT,CAAgBC,KAAhB,CAAsB,wCAAtB,EAAgEH,CAAhE;AACH;AACJ,GALD;AAMA,QAAMI,CAAC,GAAG,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACvC,UAAMC,EAAE,GAAG,MAAM;AACb/C,MAAAA,UAAU,CAACK,KAAX;;AACA,UAAIiC,QAAJ,EAAc;AACV,eAAOQ,MAAM,CAACR,QAAD,CAAb;AACH;;AACDO,MAAAA,OAAO,CAAC3C,cAAc,EAAf,CAAP;AACH,KAND;;AAOA,QAAI/B,OAAO,CAAC2D,QAAZ,EAAsB;AAClBkB,MAAAA,UAAU,CAACD,EAAD,EAAK5E,OAAO,CAAC2D,QAAR,GAAmB,IAAxB,CAAV;AACH,KAFD,MAGK;AACDlD,MAAAA,EAAE,CAACqE,QAAH,CAAY,EAAZ,EAAgBF,EAAhB;AACH;AACJ,GAdS,CAAV;AAeA7B,EAAAA,GAAG,CAACe,IAAJ,CAASiB,IAAT,CAAc7D,SAAd;AACA,SAAOsD,CAAP;AACH;;AACDxF,OAAO,CAACE,QAAR,GAAmBA,QAAnB","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.profiler = void 0;\nconst fs = require(\"fs\");\nconst ora = require(\"ora\");\nconst readline = require(\"readline\");\nconst tmp = require(\"tmp\");\nconst abort_controller_1 = require(\"abort-controller\");\nconst apiv2_1 = require(\"./apiv2\");\nconst api_1 = require(\"./database/api\");\nconst logger_1 = require(\"./logger\");\nconst ProfileReport = require(\"./profileReport\");\nconst responseToError = require(\"./responseToError\");\nconst utils = require(\"./utils\");\ntmp.setGracefulCleanup();\nasync function profiler(options) {\n    const origin = api_1.realtimeOriginOrEmulatorOrCustomUrl(options.instanceDetails.databaseUrl);\n    const url = new URL(utils.getDatabaseUrl(origin, options.instance, \"/.settings/profile.json?\"));\n    const rl = readline.createInterface({ input: process.stdin });\n    const fileOut = !!options.output;\n    const tmpFile = tmp.tmpNameSync();\n    const tmpStream = fs.createWriteStream(tmpFile);\n    const outStream = fileOut ? fs.createWriteStream(options.output) : process.stdout;\n    const spinner = ora({\n        text: \"0 operations recorded. Press [enter] to stop\",\n        color: \"yellow\",\n    });\n    const outputFormat = options.raw ? \"RAW\" : options.parent.json ? \"JSON\" : \"TXT\";\n    const controller = new abort_controller_1.default();\n    const generateReport = () => {\n        rl.close();\n        spinner.stop();\n        controller.abort();\n        const dataFile = options.input || tmpFile;\n        const reportOptions = {\n            format: outputFormat,\n            isFile: fileOut,\n            isInput: !!options.input,\n            collapse: options.collapse,\n        };\n        const report = new ProfileReport(dataFile, outStream, reportOptions);\n        return report.generate();\n    };\n    if (options.input) {\n        return generateReport();\n    }\n    const c = new apiv2_1.Client({ urlPrefix: url.origin, auth: true });\n    const res = await c.request({\n        method: \"GET\",\n        path: url.pathname,\n        responseType: \"stream\",\n        resolveOnHTTPError: true,\n        headers: {\n            Accept: \"text/event-stream\",\n        },\n        signal: controller.signal,\n    });\n    if (res.response.status >= 400) {\n        throw responseToError(res.response, await res.response.text());\n    }\n    if (!options.duration) {\n        spinner.start();\n    }\n    let counter = 0;\n    res.body.on(\"data\", (chunk) => {\n        if (chunk.toString().includes(\"event: log\")) {\n            counter++;\n            spinner.text = `${counter} operations recorded. Press [enter] to stop`;\n        }\n    });\n    res.body.on(\"end\", () => {\n        spinner.text = counter + \" operations recorded.\\n\";\n    });\n    let resError;\n    res.body.on(\"error\", (e) => {\n        if (e.type !== \"aborted\") {\n            resError = e;\n            logger_1.logger.error(\"Unexpected error from response stream:\", e);\n        }\n    });\n    const p = new Promise((resolve, reject) => {\n        const fn = () => {\n            controller.abort();\n            if (resError) {\n                return reject(resError);\n            }\n            resolve(generateReport());\n        };\n        if (options.duration) {\n            setTimeout(fn, options.duration * 1000);\n        }\n        else {\n            rl.question(\"\", fn);\n        }\n    });\n    res.body.pipe(tmpStream);\n    return p;\n}\nexports.profiler = profiler;\n"]},"metadata":{},"sourceType":"script"}