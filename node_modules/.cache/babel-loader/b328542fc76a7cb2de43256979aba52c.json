{"ast":null,"code":"\"use strict\";\n\nvar api = require(\"../api\");\n\nvar version = \"v2beta1\";\n\nvar _listEntries = function (projectId, filter, pageSize, order) {\n  return api.request(\"POST\", \"/\" + version + \"/entries:list\", {\n    auth: true,\n    data: {\n      projectIds: [projectId],\n      filter: filter,\n      orderBy: \"timestamp \" + order,\n      pageSize: pageSize\n    },\n    origin: api.cloudloggingOrigin\n  }).then(function (result) {\n    return Promise.resolve(result.body.entries);\n  });\n};\n\nmodule.exports = {\n  listEntries: _listEntries\n};","map":{"version":3,"sources":["/home/dev/Documentos/Projects/github-clone/node_modules/firebase-tools/lib/gcp/cloudlogging.js"],"names":["api","require","version","_listEntries","projectId","filter","pageSize","order","request","auth","data","projectIds","orderBy","origin","cloudloggingOrigin","then","result","Promise","resolve","body","entries","module","exports","listEntries"],"mappings":"AAAA;;AACA,IAAIA,GAAG,GAAGC,OAAO,CAAC,QAAD,CAAjB;;AACA,IAAIC,OAAO,GAAG,SAAd;;AACA,IAAIC,YAAY,GAAG,UAAUC,SAAV,EAAqBC,MAArB,EAA6BC,QAA7B,EAAuCC,KAAvC,EAA8C;AAC7D,SAAOP,GAAG,CACLQ,OADE,CACM,MADN,EACc,MAAMN,OAAN,GAAgB,eAD9B,EAC+C;AAClDO,IAAAA,IAAI,EAAE,IAD4C;AAElDC,IAAAA,IAAI,EAAE;AACFC,MAAAA,UAAU,EAAE,CAACP,SAAD,CADV;AAEFC,MAAAA,MAAM,EAAEA,MAFN;AAGFO,MAAAA,OAAO,EAAE,eAAeL,KAHtB;AAIFD,MAAAA,QAAQ,EAAEA;AAJR,KAF4C;AAQlDO,IAAAA,MAAM,EAAEb,GAAG,CAACc;AARsC,GAD/C,EAWFC,IAXE,CAWG,UAAUC,MAAV,EAAkB;AACxB,WAAOC,OAAO,CAACC,OAAR,CAAgBF,MAAM,CAACG,IAAP,CAAYC,OAA5B,CAAP;AACH,GAbM,CAAP;AAcH,CAfD;;AAgBAC,MAAM,CAACC,OAAP,GAAiB;AACbC,EAAAA,WAAW,EAAEpB;AADA,CAAjB","sourcesContent":["\"use strict\";\nvar api = require(\"../api\");\nvar version = \"v2beta1\";\nvar _listEntries = function (projectId, filter, pageSize, order) {\n    return api\n        .request(\"POST\", \"/\" + version + \"/entries:list\", {\n        auth: true,\n        data: {\n            projectIds: [projectId],\n            filter: filter,\n            orderBy: \"timestamp \" + order,\n            pageSize: pageSize,\n        },\n        origin: api.cloudloggingOrigin,\n    })\n        .then(function (result) {\n        return Promise.resolve(result.body.entries);\n    });\n};\nmodule.exports = {\n    listEntries: _listEntries,\n};\n"]},"metadata":{},"sourceType":"script"}