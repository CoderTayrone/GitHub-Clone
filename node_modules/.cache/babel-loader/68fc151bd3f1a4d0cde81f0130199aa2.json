{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nconst yaml = require(\"yaml\");\n\nclass OpenApiBuilder {\n  constructor(doc) {\n    this.rootDoc = doc || {\n      openapi: '3.0.0',\n      info: {\n        title: 'app',\n        version: 'version'\n      },\n      paths: {},\n      components: {\n        schemas: {},\n        responses: {},\n        parameters: {},\n        examples: {},\n        requestBodies: {},\n        headers: {},\n        securitySchemes: {},\n        links: {},\n        callbacks: {}\n      },\n      tags: [],\n      servers: []\n    };\n  }\n\n  static create(doc) {\n    return new OpenApiBuilder(doc);\n  }\n\n  getSpec() {\n    return this.rootDoc;\n  }\n\n  getSpecAsJson(replacer, space) {\n    return JSON.stringify(this.rootDoc, replacer, space);\n  }\n\n  getSpecAsYaml() {\n    return yaml.stringify(this.rootDoc);\n  }\n\n  static isValidOpenApiVersion(v) {\n    v = v || '';\n    const match = /(\\d+)\\.(\\d+).(\\d+)/.exec(v);\n\n    if (match) {\n      const major = parseInt(match[1], 10);\n\n      if (major >= 3) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  addOpenApiVersion(openApiVersion) {\n    if (!OpenApiBuilder.isValidOpenApiVersion(openApiVersion)) {\n      throw new Error('Invalid OpnApi version: ' + openApiVersion + '. Follow convention: 3.x.y');\n    }\n\n    this.rootDoc.openapi = openApiVersion;\n    return this;\n  }\n\n  addInfo(info) {\n    this.rootDoc.info = info;\n    return this;\n  }\n\n  addContact(contact) {\n    this.rootDoc.info.contact = contact;\n    return this;\n  }\n\n  addLicense(license) {\n    this.rootDoc.info.license = license;\n    return this;\n  }\n\n  addTitle(title) {\n    this.rootDoc.info.title = title;\n    return this;\n  }\n\n  addDescription(description) {\n    this.rootDoc.info.description = description;\n    return this;\n  }\n\n  addTermsOfService(termsOfService) {\n    this.rootDoc.info.termsOfService = termsOfService;\n    return this;\n  }\n\n  addVersion(version) {\n    this.rootDoc.info.version = version;\n    return this;\n  }\n\n  addPath(path, pathItem) {\n    this.rootDoc.paths[path] = pathItem;\n    return this;\n  }\n\n  addSchema(name, schema) {\n    this.rootDoc.components.schemas[name] = schema;\n    return this;\n  }\n\n  addResponse(name, response) {\n    this.rootDoc.components.responses[name] = response;\n    return this;\n  }\n\n  addParameter(name, parameter) {\n    this.rootDoc.components.parameters[name] = parameter;\n    return this;\n  }\n\n  addExample(name, example) {\n    this.rootDoc.components.examples[name] = example;\n    return this;\n  }\n\n  addRequestBody(name, reqBody) {\n    this.rootDoc.components.requestBodies[name] = reqBody;\n    return this;\n  }\n\n  addHeader(name, header) {\n    this.rootDoc.components.headers[name] = header;\n    return this;\n  }\n\n  addSecurityScheme(name, secScheme) {\n    this.rootDoc.components.securitySchemes[name] = secScheme;\n    return this;\n  }\n\n  addLink(name, link) {\n    this.rootDoc.components.links[name] = link;\n    return this;\n  }\n\n  addCallback(name, callback) {\n    this.rootDoc.components.callbacks[name] = callback;\n    return this;\n  }\n\n  addServer(server) {\n    this.rootDoc.servers.push(server);\n    return this;\n  }\n\n  addTag(tag) {\n    this.rootDoc.tags.push(tag);\n    return this;\n  }\n\n  addExternalDocs(extDoc) {\n    this.rootDoc.externalDocs = extDoc;\n    return this;\n  }\n\n}\n\nexports.OpenApiBuilder = OpenApiBuilder;","map":{"version":3,"sources":["../../src/dsl/OpenApiBuilder.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst yaml = require(\"yaml\");\r\nclass OpenApiBuilder {\r\n    constructor(doc) {\r\n        this.rootDoc = doc || {\r\n            openapi: '3.0.0',\r\n            info: {\r\n                title: 'app',\r\n                version: 'version'\r\n            },\r\n            paths: {},\r\n            components: {\r\n                schemas: {},\r\n                responses: {},\r\n                parameters: {},\r\n                examples: {},\r\n                requestBodies: {},\r\n                headers: {},\r\n                securitySchemes: {},\r\n                links: {},\r\n                callbacks: {}\r\n            },\r\n            tags: [],\r\n            servers: []\r\n        };\r\n    }\r\n    static create(doc) {\r\n        return new OpenApiBuilder(doc);\r\n    }\r\n    getSpec() {\r\n        return this.rootDoc;\r\n    }\r\n    getSpecAsJson(replacer, space) {\r\n        return JSON.stringify(this.rootDoc, replacer, space);\r\n    }\r\n    getSpecAsYaml() {\r\n        return yaml.stringify(this.rootDoc);\r\n    }\r\n    static isValidOpenApiVersion(v) {\r\n        v = v || '';\r\n        const match = /(\\d+)\\.(\\d+).(\\d+)/.exec(v);\r\n        if (match) {\r\n            const major = parseInt(match[1], 10);\r\n            if (major >= 3) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n    addOpenApiVersion(openApiVersion) {\r\n        if (!OpenApiBuilder.isValidOpenApiVersion(openApiVersion)) {\r\n            throw new Error('Invalid OpnApi version: ' + openApiVersion + '. Follow convention: 3.x.y');\r\n        }\r\n        this.rootDoc.openapi = openApiVersion;\r\n        return this;\r\n    }\r\n    addInfo(info) {\r\n        this.rootDoc.info = info;\r\n        return this;\r\n    }\r\n    addContact(contact) {\r\n        this.rootDoc.info.contact = contact;\r\n        return this;\r\n    }\r\n    addLicense(license) {\r\n        this.rootDoc.info.license = license;\r\n        return this;\r\n    }\r\n    addTitle(title) {\r\n        this.rootDoc.info.title = title;\r\n        return this;\r\n    }\r\n    addDescription(description) {\r\n        this.rootDoc.info.description = description;\r\n        return this;\r\n    }\r\n    addTermsOfService(termsOfService) {\r\n        this.rootDoc.info.termsOfService = termsOfService;\r\n        return this;\r\n    }\r\n    addVersion(version) {\r\n        this.rootDoc.info.version = version;\r\n        return this;\r\n    }\r\n    addPath(path, pathItem) {\r\n        this.rootDoc.paths[path] = pathItem;\r\n        return this;\r\n    }\r\n    addSchema(name, schema) {\r\n        this.rootDoc.components.schemas[name] = schema;\r\n        return this;\r\n    }\r\n    addResponse(name, response) {\r\n        this.rootDoc.components.responses[name] = response;\r\n        return this;\r\n    }\r\n    addParameter(name, parameter) {\r\n        this.rootDoc.components.parameters[name] = parameter;\r\n        return this;\r\n    }\r\n    addExample(name, example) {\r\n        this.rootDoc.components.examples[name] = example;\r\n        return this;\r\n    }\r\n    addRequestBody(name, reqBody) {\r\n        this.rootDoc.components.requestBodies[name] = reqBody;\r\n        return this;\r\n    }\r\n    addHeader(name, header) {\r\n        this.rootDoc.components.headers[name] = header;\r\n        return this;\r\n    }\r\n    addSecurityScheme(name, secScheme) {\r\n        this.rootDoc.components.securitySchemes[name] = secScheme;\r\n        return this;\r\n    }\r\n    addLink(name, link) {\r\n        this.rootDoc.components.links[name] = link;\r\n        return this;\r\n    }\r\n    addCallback(name, callback) {\r\n        this.rootDoc.components.callbacks[name] = callback;\r\n        return this;\r\n    }\r\n    addServer(server) {\r\n        this.rootDoc.servers.push(server);\r\n        return this;\r\n    }\r\n    addTag(tag) {\r\n        this.rootDoc.tags.push(tag);\r\n        return this;\r\n    }\r\n    addExternalDocs(extDoc) {\r\n        this.rootDoc.externalDocs = extDoc;\r\n        return this;\r\n    }\r\n}\r\nexports.OpenApiBuilder = OpenApiBuilder;\r\n//# sourceMappingURL=OpenApiBuilder.js.map"]},"metadata":{},"sourceType":"script"}