{"ast":null,"code":"\"use strict\";\n\nvar _ = require(\"lodash\");\n\nvar fs = require(\"fs\");\n\nvar path = require(\"path\");\n\nvar npmDependencies = require(\"./npm-dependencies\");\n\nvar {\n  prompt\n} = require(\"../../../prompt\");\n\nvar TEMPLATE_ROOT = path.resolve(__dirname, \"../../../../templates/init/functions/typescript/\");\nvar PACKAGE_LINTING_TEMPLATE = fs.readFileSync(path.join(TEMPLATE_ROOT, \"package.lint.json\"), \"utf8\");\nvar PACKAGE_NO_LINTING_TEMPLATE = fs.readFileSync(path.join(TEMPLATE_ROOT, \"package.nolint.json\"), \"utf8\");\nvar ESLINT_TEMPLATE = fs.readFileSync(path.join(TEMPLATE_ROOT, \"_eslintrc\"), \"utf8\");\nvar TSCONFIG_TEMPLATE = fs.readFileSync(path.join(TEMPLATE_ROOT, \"tsconfig.json\"), \"utf8\");\nvar TSCONFIG_DEV_TEMPLATE = fs.readFileSync(path.join(TEMPLATE_ROOT, \"tsconfig.dev.json\"), \"utf8\");\nvar INDEX_TEMPLATE = fs.readFileSync(path.join(TEMPLATE_ROOT, \"index.ts\"), \"utf8\");\nvar GITIGNORE_TEMPLATE = fs.readFileSync(path.join(TEMPLATE_ROOT, \"_gitignore\"), \"utf8\");\n\nmodule.exports = function (setup, config) {\n  return prompt(setup.functions, [{\n    name: \"lint\",\n    type: \"confirm\",\n    message: \"Do you want to use ESLint to catch probable bugs and enforce style?\",\n    default: true\n  }]).then(function () {\n    if (setup.functions.lint) {\n      _.set(setup, \"config.functions.predeploy\", ['npm --prefix \"$RESOURCE_DIR\" run lint', 'npm --prefix \"$RESOURCE_DIR\" run build']);\n\n      return config.askWriteProjectFile(\"functions/package.json\", PACKAGE_LINTING_TEMPLATE).then(function () {\n        return config.askWriteProjectFile(\"functions/.eslintrc.js\", ESLINT_TEMPLATE);\n      });\n    }\n\n    _.set(setup, \"config.functions.predeploy\", 'npm --prefix \"$RESOURCE_DIR\" run build');\n\n    return config.askWriteProjectFile(\"functions/package.json\", PACKAGE_NO_LINTING_TEMPLATE);\n  }).then(function () {\n    return config.askWriteProjectFile(\"functions/tsconfig.json\", TSCONFIG_TEMPLATE);\n  }).then(function () {\n    if (setup.functions.lint) {\n      return config.askWriteProjectFile(\"functions/tsconfig.dev.json\", TSCONFIG_DEV_TEMPLATE);\n    }\n  }).then(function () {\n    return config.askWriteProjectFile(\"functions/src/index.ts\", INDEX_TEMPLATE);\n  }).then(function () {\n    return config.askWriteProjectFile(\"functions/.gitignore\", GITIGNORE_TEMPLATE);\n  }).then(function () {\n    return npmDependencies.askInstallDependencies(setup.functions, config);\n  });\n};","map":{"version":3,"sources":["/home/dev/Documentos/Projects/github-clone/node_modules/firebase-tools/lib/init/features/functions/typescript.js"],"names":["_","require","fs","path","npmDependencies","prompt","TEMPLATE_ROOT","resolve","__dirname","PACKAGE_LINTING_TEMPLATE","readFileSync","join","PACKAGE_NO_LINTING_TEMPLATE","ESLINT_TEMPLATE","TSCONFIG_TEMPLATE","TSCONFIG_DEV_TEMPLATE","INDEX_TEMPLATE","GITIGNORE_TEMPLATE","module","exports","setup","config","functions","name","type","message","default","then","lint","set","askWriteProjectFile","askInstallDependencies"],"mappings":"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","sourcesContent":["\"use strict\";\nvar _ = require(\"lodash\");\nvar fs = require(\"fs\");\nvar path = require(\"path\");\nvar npmDependencies = require(\"./npm-dependencies\");\nvar { prompt } = require(\"../../../prompt\");\nvar TEMPLATE_ROOT = path.resolve(__dirname, \"../../../../templates/init/functions/typescript/\");\nvar PACKAGE_LINTING_TEMPLATE = fs.readFileSync(path.join(TEMPLATE_ROOT, \"package.lint.json\"), \"utf8\");\nvar PACKAGE_NO_LINTING_TEMPLATE = fs.readFileSync(path.join(TEMPLATE_ROOT, \"package.nolint.json\"), \"utf8\");\nvar ESLINT_TEMPLATE = fs.readFileSync(path.join(TEMPLATE_ROOT, \"_eslintrc\"), \"utf8\");\nvar TSCONFIG_TEMPLATE = fs.readFileSync(path.join(TEMPLATE_ROOT, \"tsconfig.json\"), \"utf8\");\nvar TSCONFIG_DEV_TEMPLATE = fs.readFileSync(path.join(TEMPLATE_ROOT, \"tsconfig.dev.json\"), \"utf8\");\nvar INDEX_TEMPLATE = fs.readFileSync(path.join(TEMPLATE_ROOT, \"index.ts\"), \"utf8\");\nvar GITIGNORE_TEMPLATE = fs.readFileSync(path.join(TEMPLATE_ROOT, \"_gitignore\"), \"utf8\");\nmodule.exports = function (setup, config) {\n    return prompt(setup.functions, [\n        {\n            name: \"lint\",\n            type: \"confirm\",\n            message: \"Do you want to use ESLint to catch probable bugs and enforce style?\",\n            default: true,\n        },\n    ])\n        .then(function () {\n        if (setup.functions.lint) {\n            _.set(setup, \"config.functions.predeploy\", [\n                'npm --prefix \"$RESOURCE_DIR\" run lint',\n                'npm --prefix \"$RESOURCE_DIR\" run build',\n            ]);\n            return config\n                .askWriteProjectFile(\"functions/package.json\", PACKAGE_LINTING_TEMPLATE)\n                .then(function () {\n                return config.askWriteProjectFile(\"functions/.eslintrc.js\", ESLINT_TEMPLATE);\n            });\n        }\n        _.set(setup, \"config.functions.predeploy\", 'npm --prefix \"$RESOURCE_DIR\" run build');\n        return config.askWriteProjectFile(\"functions/package.json\", PACKAGE_NO_LINTING_TEMPLATE);\n    })\n        .then(function () {\n        return config.askWriteProjectFile(\"functions/tsconfig.json\", TSCONFIG_TEMPLATE);\n    })\n        .then(function () {\n        if (setup.functions.lint) {\n            return config.askWriteProjectFile(\"functions/tsconfig.dev.json\", TSCONFIG_DEV_TEMPLATE);\n        }\n    })\n        .then(function () {\n        return config.askWriteProjectFile(\"functions/src/index.ts\", INDEX_TEMPLATE);\n    })\n        .then(function () {\n        return config.askWriteProjectFile(\"functions/.gitignore\", GITIGNORE_TEMPLATE);\n    })\n        .then(function () {\n        return npmDependencies.askInstallDependencies(setup.functions, config);\n    });\n};\n"]},"metadata":{},"sourceType":"script"}