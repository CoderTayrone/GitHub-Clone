{"ast":null,"code":"\"use strict\";\n\nvar spawn = require(\"cross-spawn\");\n\nconst {\n  logger\n} = require(\"../../../logger\");\n\nvar {\n  prompt\n} = require(\"../../../prompt\");\n\nexports.askInstallDependencies = function (setup, config) {\n  return prompt(setup, [{\n    name: \"npm\",\n    type: \"confirm\",\n    message: \"Do you want to install dependencies with npm now?\",\n    default: true\n  }]).then(function () {\n    if (setup.npm) {\n      return new Promise(function (resolve) {\n        var installer = spawn(\"npm\", [\"install\"], {\n          cwd: config.projectDir + \"/functions\",\n          stdio: \"inherit\"\n        });\n        installer.on(\"error\", function (err) {\n          logger.debug(err.stack);\n        });\n        installer.on(\"close\", function (code) {\n          if (code === 0) {\n            return resolve();\n          }\n\n          logger.info();\n          logger.error(\"NPM install failed, continuing with Firebase initialization...\");\n          return resolve();\n        });\n      });\n    }\n  });\n};","map":{"version":3,"sources":["/home/dev/Documentos/Projects/github-clone/node_modules/firebase-tools/lib/init/features/functions/npm-dependencies.js"],"names":["spawn","require","logger","prompt","exports","askInstallDependencies","setup","config","name","type","message","default","then","npm","Promise","resolve","installer","cwd","projectDir","stdio","on","err","debug","stack","code","info","error"],"mappings":"AAAA;;AACA,IAAIA,KAAK,GAAGC,OAAO,CAAC,aAAD,CAAnB;;AACA,MAAM;AAAEC,EAAAA;AAAF,IAAaD,OAAO,CAAC,iBAAD,CAA1B;;AACA,IAAI;AAAEE,EAAAA;AAAF,IAAaF,OAAO,CAAC,iBAAD,CAAxB;;AACAG,OAAO,CAACC,sBAAR,GAAiC,UAAUC,KAAV,EAAiBC,MAAjB,EAAyB;AACtD,SAAOJ,MAAM,CAACG,KAAD,EAAQ,CACjB;AACIE,IAAAA,IAAI,EAAE,KADV;AAEIC,IAAAA,IAAI,EAAE,SAFV;AAGIC,IAAAA,OAAO,EAAE,mDAHb;AAIIC,IAAAA,OAAO,EAAE;AAJb,GADiB,CAAR,CAAN,CAOJC,IAPI,CAOC,YAAY;AAChB,QAAIN,KAAK,CAACO,GAAV,EAAe;AACX,aAAO,IAAIC,OAAJ,CAAY,UAAUC,OAAV,EAAmB;AAClC,YAAIC,SAAS,GAAGhB,KAAK,CAAC,KAAD,EAAQ,CAAC,SAAD,CAAR,EAAqB;AACtCiB,UAAAA,GAAG,EAAEV,MAAM,CAACW,UAAP,GAAoB,YADa;AAEtCC,UAAAA,KAAK,EAAE;AAF+B,SAArB,CAArB;AAIAH,QAAAA,SAAS,CAACI,EAAV,CAAa,OAAb,EAAsB,UAAUC,GAAV,EAAe;AACjCnB,UAAAA,MAAM,CAACoB,KAAP,CAAaD,GAAG,CAACE,KAAjB;AACH,SAFD;AAGAP,QAAAA,SAAS,CAACI,EAAV,CAAa,OAAb,EAAsB,UAAUI,IAAV,EAAgB;AAClC,cAAIA,IAAI,KAAK,CAAb,EAAgB;AACZ,mBAAOT,OAAO,EAAd;AACH;;AACDb,UAAAA,MAAM,CAACuB,IAAP;AACAvB,UAAAA,MAAM,CAACwB,KAAP,CAAa,gEAAb;AACA,iBAAOX,OAAO,EAAd;AACH,SAPD;AAQH,OAhBM,CAAP;AAiBH;AACJ,GA3BM,CAAP;AA4BH,CA7BD","sourcesContent":["\"use strict\";\nvar spawn = require(\"cross-spawn\");\nconst { logger } = require(\"../../../logger\");\nvar { prompt } = require(\"../../../prompt\");\nexports.askInstallDependencies = function (setup, config) {\n    return prompt(setup, [\n        {\n            name: \"npm\",\n            type: \"confirm\",\n            message: \"Do you want to install dependencies with npm now?\",\n            default: true,\n        },\n    ]).then(function () {\n        if (setup.npm) {\n            return new Promise(function (resolve) {\n                var installer = spawn(\"npm\", [\"install\"], {\n                    cwd: config.projectDir + \"/functions\",\n                    stdio: \"inherit\",\n                });\n                installer.on(\"error\", function (err) {\n                    logger.debug(err.stack);\n                });\n                installer.on(\"close\", function (code) {\n                    if (code === 0) {\n                        return resolve();\n                    }\n                    logger.info();\n                    logger.error(\"NPM install failed, continuing with Firebase initialization...\");\n                    return resolve();\n                });\n            });\n        }\n    });\n};\n"]},"metadata":{},"sourceType":"script"}