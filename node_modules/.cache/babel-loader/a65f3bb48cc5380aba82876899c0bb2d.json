{"ast":null,"code":"\"use strict\";\n\nconst _ = require(\"lodash\");\n\nconst utils = require(\"../utils\");\n\nconst clc = require(\"cli-color\");\n\nconst childProcess = require(\"child_process\");\n\nconst {\n  FirebaseError\n} = require(\"../error\");\n\nconst needProjectId = require(\"../projectUtils\").needProjectId;\n\nconst {\n  logger\n} = require(\"../logger\");\n\nconst path = require(\"path\");\n\nfunction runCommand(command, childOptions) {\n  const escapedCommand = command.replace(/\\\"/g, '\\\\\"');\n  const translatedCommand = '\"' + process.execPath + '\" \"' + path.resolve(require.resolve(\"cross-env\"), \"..\", \"bin\", \"cross-env-shell.js\") + '\" \"' + escapedCommand + '\"';\n  return new Promise(function (resolve, reject) {\n    logger.info(\"Running command: \" + command);\n\n    if (translatedCommand === \"\") {\n      resolve();\n    }\n\n    const child = childProcess.spawn(translatedCommand, [], childOptions);\n    child.on(\"error\", function (err) {\n      reject(err);\n    });\n    child.on(\"exit\", function (code, signal) {\n      if (signal) {\n        reject(new Error(\"Command terminated with signal \" + signal));\n      } else if (code !== 0) {\n        reject(new Error(\"Command terminated with non-zero exit code\" + code));\n      } else {\n        resolve();\n      }\n    });\n  });\n}\n\nfunction getChildEnvironment(target, overallOptions, config) {\n  const projectId = needProjectId(overallOptions);\n  const projectDir = overallOptions.projectRoot;\n  let resourceDir;\n\n  switch (target) {\n    case \"hosting\":\n      resourceDir = overallOptions.config.path(config.public);\n      break;\n\n    case \"functions\":\n      resourceDir = overallOptions.config.path(config.source);\n      break;\n\n    default:\n      resourceDir = overallOptions.config.path(overallOptions.config.projectDir);\n  }\n\n  return _.assign({}, process.env, {\n    GCLOUD_PROJECT: projectId,\n    PROJECT_DIR: projectDir,\n    RESOURCE_DIR: resourceDir\n  });\n}\n\nfunction runTargetCommands(target, hook, overallOptions, config) {\n  let commands = config[hook];\n\n  if (!commands) {\n    return Promise.resolve();\n  }\n\n  if (typeof commands === \"string\") {\n    commands = [commands];\n  }\n\n  const childOptions = {\n    cwd: overallOptions.config.projectDir,\n    env: getChildEnvironment(target, overallOptions, config),\n    shell: true,\n    stdio: [0, 1, 2]\n  };\n\n  const runAllCommands = _.reduce(commands, function (soFar, command) {\n    return soFar.then(function () {\n      return runCommand(command, childOptions);\n    });\n  }, Promise.resolve());\n\n  let logIdentifier = target;\n\n  if (config.target) {\n    logIdentifier += `[${config.target}]`;\n  }\n\n  return runAllCommands.then(function () {\n    utils.logSuccess(clc.green.bold(logIdentifier + \":\") + \" Finished running \" + clc.bold(hook) + \" script.\");\n  }).catch(function (err) {\n    throw new FirebaseError(logIdentifier + \" \" + hook + \" error: \" + err.message);\n  });\n}\n\nfunction getReleventConfigs(target, options) {\n  let targetConfigs = options.config.get(target);\n\n  if (!targetConfigs) {\n    return [];\n  }\n\n  if (!_.isArray(targetConfigs)) {\n    targetConfigs = [targetConfigs];\n  }\n\n  if (!options.only) {\n    return targetConfigs;\n  }\n\n  var onlyTargets = options.only.split(\",\");\n\n  if (_.includes(onlyTargets, target)) {\n    return targetConfigs;\n  }\n\n  onlyTargets = onlyTargets.filter(function (individualOnly) {\n    return individualOnly.indexOf(`${target}:`) === 0;\n  }).map(function (individualOnly) {\n    return individualOnly.replace(`${target}:`, \"\");\n  });\n  return targetConfigs.filter(function (config) {\n    return !config.target || _.includes(onlyTargets, config.target);\n  });\n}\n\nmodule.exports = function (target, hook) {\n  return function (context, options) {\n    return _.reduce(getReleventConfigs(target, options), function (previousCommands, individualConfig) {\n      return previousCommands.then(function () {\n        return runTargetCommands(target, hook, options, individualConfig);\n      });\n    }, Promise.resolve());\n  };\n};","map":{"version":3,"sources":["/home/dev/Documentos/Projects/github-clone/node_modules/firebase-tools/lib/deploy/lifecycleHooks.js"],"names":["_","require","utils","clc","childProcess","FirebaseError","needProjectId","logger","path","runCommand","command","childOptions","escapedCommand","replace","translatedCommand","process","execPath","resolve","Promise","reject","info","child","spawn","on","err","code","signal","Error","getChildEnvironment","target","overallOptions","config","projectId","projectDir","projectRoot","resourceDir","public","source","assign","env","GCLOUD_PROJECT","PROJECT_DIR","RESOURCE_DIR","runTargetCommands","hook","commands","cwd","shell","stdio","runAllCommands","reduce","soFar","then","logIdentifier","logSuccess","green","bold","catch","message","getReleventConfigs","options","targetConfigs","get","isArray","only","onlyTargets","split","includes","filter","individualOnly","indexOf","map","module","exports","context","previousCommands","individualConfig"],"mappings":"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","sourcesContent":["\"use strict\";\nconst _ = require(\"lodash\");\nconst utils = require(\"../utils\");\nconst clc = require(\"cli-color\");\nconst childProcess = require(\"child_process\");\nconst { FirebaseError } = require(\"../error\");\nconst needProjectId = require(\"../projectUtils\").needProjectId;\nconst { logger } = require(\"../logger\");\nconst path = require(\"path\");\nfunction runCommand(command, childOptions) {\n    const escapedCommand = command.replace(/\\\"/g, '\\\\\"');\n    const translatedCommand = '\"' +\n        process.execPath +\n        '\" \"' +\n        path.resolve(require.resolve(\"cross-env\"), \"..\", \"bin\", \"cross-env-shell.js\") +\n        '\" \"' +\n        escapedCommand +\n        '\"';\n    return new Promise(function (resolve, reject) {\n        logger.info(\"Running command: \" + command);\n        if (translatedCommand === \"\") {\n            resolve();\n        }\n        const child = childProcess.spawn(translatedCommand, [], childOptions);\n        child.on(\"error\", function (err) {\n            reject(err);\n        });\n        child.on(\"exit\", function (code, signal) {\n            if (signal) {\n                reject(new Error(\"Command terminated with signal \" + signal));\n            }\n            else if (code !== 0) {\n                reject(new Error(\"Command terminated with non-zero exit code\" + code));\n            }\n            else {\n                resolve();\n            }\n        });\n    });\n}\nfunction getChildEnvironment(target, overallOptions, config) {\n    const projectId = needProjectId(overallOptions);\n    const projectDir = overallOptions.projectRoot;\n    let resourceDir;\n    switch (target) {\n        case \"hosting\":\n            resourceDir = overallOptions.config.path(config.public);\n            break;\n        case \"functions\":\n            resourceDir = overallOptions.config.path(config.source);\n            break;\n        default:\n            resourceDir = overallOptions.config.path(overallOptions.config.projectDir);\n    }\n    return _.assign({}, process.env, {\n        GCLOUD_PROJECT: projectId,\n        PROJECT_DIR: projectDir,\n        RESOURCE_DIR: resourceDir,\n    });\n}\nfunction runTargetCommands(target, hook, overallOptions, config) {\n    let commands = config[hook];\n    if (!commands) {\n        return Promise.resolve();\n    }\n    if (typeof commands === \"string\") {\n        commands = [commands];\n    }\n    const childOptions = {\n        cwd: overallOptions.config.projectDir,\n        env: getChildEnvironment(target, overallOptions, config),\n        shell: true,\n        stdio: [0, 1, 2],\n    };\n    const runAllCommands = _.reduce(commands, function (soFar, command) {\n        return soFar.then(function () {\n            return runCommand(command, childOptions);\n        });\n    }, Promise.resolve());\n    let logIdentifier = target;\n    if (config.target) {\n        logIdentifier += `[${config.target}]`;\n    }\n    return runAllCommands\n        .then(function () {\n        utils.logSuccess(clc.green.bold(logIdentifier + \":\") + \" Finished running \" + clc.bold(hook) + \" script.\");\n    })\n        .catch(function (err) {\n        throw new FirebaseError(logIdentifier + \" \" + hook + \" error: \" + err.message);\n    });\n}\nfunction getReleventConfigs(target, options) {\n    let targetConfigs = options.config.get(target);\n    if (!targetConfigs) {\n        return [];\n    }\n    if (!_.isArray(targetConfigs)) {\n        targetConfigs = [targetConfigs];\n    }\n    if (!options.only) {\n        return targetConfigs;\n    }\n    var onlyTargets = options.only.split(\",\");\n    if (_.includes(onlyTargets, target)) {\n        return targetConfigs;\n    }\n    onlyTargets = onlyTargets\n        .filter(function (individualOnly) {\n        return individualOnly.indexOf(`${target}:`) === 0;\n    })\n        .map(function (individualOnly) {\n        return individualOnly.replace(`${target}:`, \"\");\n    });\n    return targetConfigs.filter(function (config) {\n        return !config.target || _.includes(onlyTargets, config.target);\n    });\n}\nmodule.exports = function (target, hook) {\n    return function (context, options) {\n        return _.reduce(getReleventConfigs(target, options), function (previousCommands, individualConfig) {\n            return previousCommands.then(function () {\n                return runTargetCommands(target, hook, options, individualConfig);\n            });\n        }, Promise.resolve());\n    };\n};\n"]},"metadata":{},"sourceType":"script"}