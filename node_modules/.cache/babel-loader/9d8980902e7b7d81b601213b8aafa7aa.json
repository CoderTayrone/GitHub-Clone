{"ast":null,"code":"import { o as YAMLReferenceError, T as Type, g as YAMLSemanticError, _ as _createForOfIteratorHelper, e as _defineProperty, j as _inherits, k as _createSuper, c as _classCallCheck, p as _assertThisInitialized, b as _createClass, a as _typeof, l as _get, m as _getPrototypeOf } from './PlainValue-b8036b75.js';\nimport { j as resolveString, b as binaryOptions, c as stringifyString, h as resolveSeq, P as Pair, d as YAMLMap, Y as YAMLSeq, t as toJSON, S as Scalar, l as findPair, g as resolveMap, k as stringifyNumber } from './resolveSeq-492ab440.js';\n/* global atob, btoa, Buffer */\n\nvar binary = {\n  identify: function identify(value) {\n    return value instanceof Uint8Array;\n  },\n  // Buffer inherits from Uint8Array\n  default: false,\n  tag: 'tag:yaml.org,2002:binary',\n\n  /**\n   * Returns a Buffer in node and an Uint8Array in browsers\n   *\n   * To use the resulting buffer as an image, you'll want to do something like:\n   *\n   *   const blob = new Blob([buffer], { type: 'image/jpeg' })\n   *   document.querySelector('#photo').src = URL.createObjectURL(blob)\n   */\n  resolve: function resolve(doc, node) {\n    var src = resolveString(doc, node);\n\n    if (typeof Buffer === 'function') {\n      return Buffer.from(src, 'base64');\n    } else if (typeof atob === 'function') {\n      // On IE 11, atob() can't handle newlines\n      var str = atob(src.replace(/[\\n\\r]/g, ''));\n      var buffer = new Uint8Array(str.length);\n\n      for (var i = 0; i < str.length; ++i) {\n        buffer[i] = str.charCodeAt(i);\n      }\n\n      return buffer;\n    } else {\n      var msg = 'This environment does not support reading binary tags; either Buffer or atob is required';\n      doc.errors.push(new YAMLReferenceError(node, msg));\n      return null;\n    }\n  },\n  options: binaryOptions,\n  stringify: function stringify(_ref, ctx, onComment, onChompKeep) {\n    var comment = _ref.comment,\n        type = _ref.type,\n        value = _ref.value;\n    var src;\n\n    if (typeof Buffer === 'function') {\n      src = value instanceof Buffer ? value.toString('base64') : Buffer.from(value.buffer).toString('base64');\n    } else if (typeof btoa === 'function') {\n      var s = '';\n\n      for (var i = 0; i < value.length; ++i) {\n        s += String.fromCharCode(value[i]);\n      }\n\n      src = btoa(s);\n    } else {\n      throw new Error('This environment does not support writing binary tags; either Buffer or btoa is required');\n    }\n\n    if (!type) type = binaryOptions.defaultType;\n\n    if (type === Type.QUOTE_DOUBLE) {\n      value = src;\n    } else {\n      var lineWidth = binaryOptions.lineWidth;\n      var n = Math.ceil(src.length / lineWidth);\n      var lines = new Array(n);\n\n      for (var _i = 0, o = 0; _i < n; ++_i, o += lineWidth) {\n        lines[_i] = src.substr(o, lineWidth);\n      }\n\n      value = lines.join(type === Type.BLOCK_LITERAL ? '\\n' : ' ');\n    }\n\n    return stringifyString({\n      comment: comment,\n      type: type,\n      value: value\n    }, ctx, onComment, onChompKeep);\n  }\n};\n\nfunction parsePairs(doc, cst) {\n  var seq = resolveSeq(doc, cst);\n\n  for (var i = 0; i < seq.items.length; ++i) {\n    var item = seq.items[i];\n    if (item instanceof Pair) continue;else if (item instanceof YAMLMap) {\n      if (item.items.length > 1) {\n        var msg = 'Each pair must have its own sequence indicator';\n        throw new YAMLSemanticError(cst, msg);\n      }\n\n      var pair = item.items[0] || new Pair();\n      if (item.commentBefore) pair.commentBefore = pair.commentBefore ? \"\".concat(item.commentBefore, \"\\n\").concat(pair.commentBefore) : item.commentBefore;\n      if (item.comment) pair.comment = pair.comment ? \"\".concat(item.comment, \"\\n\").concat(pair.comment) : item.comment;\n      item = pair;\n    }\n    seq.items[i] = item instanceof Pair ? item : new Pair(item);\n  }\n\n  return seq;\n}\n\nfunction createPairs(schema, iterable, ctx) {\n  var pairs = new YAMLSeq(schema);\n  pairs.tag = 'tag:yaml.org,2002:pairs';\n\n  var _iterator = _createForOfIteratorHelper(iterable),\n      _step;\n\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var it = _step.value;\n      var key = void 0,\n          value = void 0;\n\n      if (Array.isArray(it)) {\n        if (it.length === 2) {\n          key = it[0];\n          value = it[1];\n        } else throw new TypeError(\"Expected [key, value] tuple: \".concat(it));\n      } else if (it && it instanceof Object) {\n        var keys = Object.keys(it);\n\n        if (keys.length === 1) {\n          key = keys[0];\n          value = it[key];\n        } else throw new TypeError(\"Expected { key: value } tuple: \".concat(it));\n      } else {\n        key = it;\n      }\n\n      var pair = schema.createPair(key, value, ctx);\n      pairs.items.push(pair);\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n\n  return pairs;\n}\n\nvar pairs = {\n  default: false,\n  tag: 'tag:yaml.org,2002:pairs',\n  resolve: parsePairs,\n  createNode: createPairs\n};\n\nvar YAMLOMap = /*#__PURE__*/function (_YAMLSeq) {\n  _inherits(YAMLOMap, _YAMLSeq);\n\n  var _super = _createSuper(YAMLOMap);\n\n  function YAMLOMap() {\n    var _this;\n\n    _classCallCheck(this, YAMLOMap);\n\n    _this = _super.call(this);\n\n    _defineProperty(_assertThisInitialized(_this), \"add\", YAMLMap.prototype.add.bind(_assertThisInitialized(_this)));\n\n    _defineProperty(_assertThisInitialized(_this), \"delete\", YAMLMap.prototype.delete.bind(_assertThisInitialized(_this)));\n\n    _defineProperty(_assertThisInitialized(_this), \"get\", YAMLMap.prototype.get.bind(_assertThisInitialized(_this)));\n\n    _defineProperty(_assertThisInitialized(_this), \"has\", YAMLMap.prototype.has.bind(_assertThisInitialized(_this)));\n\n    _defineProperty(_assertThisInitialized(_this), \"set\", YAMLMap.prototype.set.bind(_assertThisInitialized(_this)));\n\n    _this.tag = YAMLOMap.tag;\n    return _this;\n  }\n\n  _createClass(YAMLOMap, [{\n    key: \"toJSON\",\n    value: function toJSON$1(_, ctx) {\n      var map = new Map();\n      if (ctx && ctx.onCreate) ctx.onCreate(map);\n\n      var _iterator = _createForOfIteratorHelper(this.items),\n          _step;\n\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var pair = _step.value;\n          var key = void 0,\n              value = void 0;\n\n          if (pair instanceof Pair) {\n            key = toJSON(pair.key, '', ctx);\n            value = toJSON(pair.value, key, ctx);\n          } else {\n            key = toJSON(pair, '', ctx);\n          }\n\n          if (map.has(key)) throw new Error('Ordered maps must not include duplicate keys');\n          map.set(key, value);\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n\n      return map;\n    }\n  }]);\n\n  return YAMLOMap;\n}(YAMLSeq);\n\n_defineProperty(YAMLOMap, \"tag\", 'tag:yaml.org,2002:omap');\n\nfunction parseOMap(doc, cst) {\n  var pairs = parsePairs(doc, cst);\n  var seenKeys = [];\n\n  var _iterator2 = _createForOfIteratorHelper(pairs.items),\n      _step2;\n\n  try {\n    for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n      var key = _step2.value.key;\n\n      if (key instanceof Scalar) {\n        if (seenKeys.includes(key.value)) {\n          var msg = 'Ordered maps must not include duplicate keys';\n          throw new YAMLSemanticError(cst, msg);\n        } else {\n          seenKeys.push(key.value);\n        }\n      }\n    }\n  } catch (err) {\n    _iterator2.e(err);\n  } finally {\n    _iterator2.f();\n  }\n\n  return Object.assign(new YAMLOMap(), pairs);\n}\n\nfunction createOMap(schema, iterable, ctx) {\n  var pairs = createPairs(schema, iterable, ctx);\n  var omap = new YAMLOMap();\n  omap.items = pairs.items;\n  return omap;\n}\n\nvar omap = {\n  identify: function identify(value) {\n    return value instanceof Map;\n  },\n  nodeClass: YAMLOMap,\n  default: false,\n  tag: 'tag:yaml.org,2002:omap',\n  resolve: parseOMap,\n  createNode: createOMap\n};\n\nvar YAMLSet = /*#__PURE__*/function (_YAMLMap) {\n  _inherits(YAMLSet, _YAMLMap);\n\n  var _super = _createSuper(YAMLSet);\n\n  function YAMLSet() {\n    var _this;\n\n    _classCallCheck(this, YAMLSet);\n\n    _this = _super.call(this);\n    _this.tag = YAMLSet.tag;\n    return _this;\n  }\n\n  _createClass(YAMLSet, [{\n    key: \"add\",\n    value: function add(key) {\n      var pair = key instanceof Pair ? key : new Pair(key);\n      var prev = findPair(this.items, pair.key);\n      if (!prev) this.items.push(pair);\n    }\n  }, {\n    key: \"get\",\n    value: function get(key, keepPair) {\n      var pair = findPair(this.items, key);\n      return !keepPair && pair instanceof Pair ? pair.key instanceof Scalar ? pair.key.value : pair.key : pair;\n    }\n  }, {\n    key: \"set\",\n    value: function set(key, value) {\n      if (typeof value !== 'boolean') throw new Error(\"Expected boolean value for set(key, value) in a YAML set, not \".concat(_typeof(value)));\n      var prev = findPair(this.items, key);\n\n      if (prev && !value) {\n        this.items.splice(this.items.indexOf(prev), 1);\n      } else if (!prev && value) {\n        this.items.push(new Pair(key));\n      }\n    }\n  }, {\n    key: \"toJSON\",\n    value: function toJSON(_, ctx) {\n      return _get(_getPrototypeOf(YAMLSet.prototype), \"toJSON\", this).call(this, _, ctx, Set);\n    }\n  }, {\n    key: \"toString\",\n    value: function toString(ctx, onComment, onChompKeep) {\n      if (!ctx) return JSON.stringify(this);\n      if (this.hasAllNullValues()) return _get(_getPrototypeOf(YAMLSet.prototype), \"toString\", this).call(this, ctx, onComment, onChompKeep);else throw new Error('Set items must all have null values');\n    }\n  }]);\n\n  return YAMLSet;\n}(YAMLMap);\n\n_defineProperty(YAMLSet, \"tag\", 'tag:yaml.org,2002:set');\n\nfunction parseSet(doc, cst) {\n  var map = resolveMap(doc, cst);\n  if (!map.hasAllNullValues()) throw new YAMLSemanticError(cst, 'Set items must all have null values');\n  return Object.assign(new YAMLSet(), map);\n}\n\nfunction createSet(schema, iterable, ctx) {\n  var set = new YAMLSet();\n\n  var _iterator = _createForOfIteratorHelper(iterable),\n      _step;\n\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var value = _step.value;\n      set.items.push(schema.createPair(value, null, ctx));\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n\n  return set;\n}\n\nvar set = {\n  identify: function identify(value) {\n    return value instanceof Set;\n  },\n  nodeClass: YAMLSet,\n  default: false,\n  tag: 'tag:yaml.org,2002:set',\n  resolve: parseSet,\n  createNode: createSet\n};\n\nvar parseSexagesimal = function parseSexagesimal(sign, parts) {\n  var n = parts.split(':').reduce(function (n, p) {\n    return n * 60 + Number(p);\n  }, 0);\n  return sign === '-' ? -n : n;\n}; // hhhh:mm:ss.sss\n\n\nvar stringifySexagesimal = function stringifySexagesimal(_ref) {\n  var value = _ref.value;\n  if (isNaN(value) || !isFinite(value)) return stringifyNumber(value);\n  var sign = '';\n\n  if (value < 0) {\n    sign = '-';\n    value = Math.abs(value);\n  }\n\n  var parts = [value % 60]; // seconds, including ms\n\n  if (value < 60) {\n    parts.unshift(0); // at least one : is required\n  } else {\n    value = Math.round((value - parts[0]) / 60);\n    parts.unshift(value % 60); // minutes\n\n    if (value >= 60) {\n      value = Math.round((value - parts[0]) / 60);\n      parts.unshift(value); // hours\n    }\n  }\n\n  return sign + parts.map(function (n) {\n    return n < 10 ? '0' + String(n) : String(n);\n  }).join(':').replace(/000000\\d*$/, '') // % 60 may introduce error\n  ;\n};\n\nvar intTime = {\n  identify: function identify(value) {\n    return typeof value === 'number';\n  },\n  default: true,\n  tag: 'tag:yaml.org,2002:int',\n  format: 'TIME',\n  test: /^([-+]?)([0-9][0-9_]*(?::[0-5]?[0-9])+)$/,\n  resolve: function resolve(str, sign, parts) {\n    return parseSexagesimal(sign, parts.replace(/_/g, ''));\n  },\n  stringify: stringifySexagesimal\n};\nvar floatTime = {\n  identify: function identify(value) {\n    return typeof value === 'number';\n  },\n  default: true,\n  tag: 'tag:yaml.org,2002:float',\n  format: 'TIME',\n  test: /^([-+]?)([0-9][0-9_]*(?::[0-5]?[0-9])+\\.[0-9_]*)$/,\n  resolve: function resolve(str, sign, parts) {\n    return parseSexagesimal(sign, parts.replace(/_/g, ''));\n  },\n  stringify: stringifySexagesimal\n};\nvar timestamp = {\n  identify: function identify(value) {\n    return value instanceof Date;\n  },\n  default: true,\n  tag: 'tag:yaml.org,2002:timestamp',\n  // If the time zone is omitted, the timestamp is assumed to be specified in UTC. The time part\n  // may be omitted altogether, resulting in a date format. In such a case, the time part is\n  // assumed to be 00:00:00Z (start of day, UTC).\n  test: RegExp('^(?:' + '([0-9]{4})-([0-9]{1,2})-([0-9]{1,2})' + // YYYY-Mm-Dd\n  '(?:(?:t|T|[ \\\\t]+)' + // t | T | whitespace\n  '([0-9]{1,2}):([0-9]{1,2}):([0-9]{1,2}(\\\\.[0-9]+)?)' + // Hh:Mm:Ss(.ss)?\n  '(?:[ \\\\t]*(Z|[-+][012]?[0-9](?::[0-9]{2})?))?' + // Z | +5 | -03:30\n  ')?' + ')$'),\n  resolve: function resolve(str, year, month, day, hour, minute, second, millisec, tz) {\n    if (millisec) millisec = (millisec + '00').substr(1, 3);\n    var date = Date.UTC(year, month - 1, day, hour || 0, minute || 0, second || 0, millisec || 0);\n\n    if (tz && tz !== 'Z') {\n      var d = parseSexagesimal(tz[0], tz.slice(1));\n      if (Math.abs(d) < 30) d *= 60;\n      date -= 60000 * d;\n    }\n\n    return new Date(date);\n  },\n  stringify: function stringify(_ref2) {\n    var value = _ref2.value;\n    return value.toISOString().replace(/((T00:00)?:00)?\\.000Z$/, '');\n  }\n};\n/* global console, process, YAML_SILENCE_DEPRECATION_WARNINGS, YAML_SILENCE_WARNINGS */\n\nfunction shouldWarn(deprecation) {\n  var env = typeof process !== 'undefined' && process.env || {};\n\n  if (deprecation) {\n    if (typeof YAML_SILENCE_DEPRECATION_WARNINGS !== 'undefined') return !YAML_SILENCE_DEPRECATION_WARNINGS;\n    return !env.YAML_SILENCE_DEPRECATION_WARNINGS;\n  }\n\n  if (typeof YAML_SILENCE_WARNINGS !== 'undefined') return !YAML_SILENCE_WARNINGS;\n  return !env.YAML_SILENCE_WARNINGS;\n}\n\nfunction warn(warning, type) {\n  if (shouldWarn(false)) {\n    var emit = typeof process !== 'undefined' && process.emitWarning; // This will throw in Jest if `warning` is an Error instance due to\n    // https://github.com/facebook/jest/issues/2549\n\n    if (emit) emit(warning, type);else {\n      // eslint-disable-next-line no-console\n      console.warn(type ? \"\".concat(type, \": \").concat(warning) : warning);\n    }\n  }\n}\n\nfunction warnFileDeprecation(filename) {\n  if (shouldWarn(true)) {\n    var path = filename.replace(/.*yaml[/\\\\]/i, '').replace(/\\.js$/, '').replace(/\\\\/g, '/');\n    warn(\"The endpoint 'yaml/\".concat(path, \"' will be removed in a future release.\"), 'DeprecationWarning');\n  }\n}\n\nvar warned = {};\n\nfunction warnOptionDeprecation(name, alternative) {\n  if (!warned[name] && shouldWarn(true)) {\n    warned[name] = true;\n    var msg = \"The option '\".concat(name, \"' will be removed in a future release\");\n    msg += alternative ? \", use '\".concat(alternative, \"' instead.\") : '.';\n    warn(msg, 'DeprecationWarning');\n  }\n}\n\nexport { warnOptionDeprecation as a, binary as b, warnFileDeprecation as c, floatTime as f, intTime as i, omap as o, pairs as p, set as s, timestamp as t, warn as w };","map":{"version":3,"sources":["/home/dev/Documentos/Projects/github-clone/node_modules/yaml/browser/dist/warnings-df54cb69.js"],"names":["o","YAMLReferenceError","T","Type","g","YAMLSemanticError","_","_createForOfIteratorHelper","e","_defineProperty","j","_inherits","k","_createSuper","c","_classCallCheck","p","_assertThisInitialized","b","_createClass","a","_typeof","l","_get","m","_getPrototypeOf","resolveString","binaryOptions","stringifyString","h","resolveSeq","P","Pair","d","YAMLMap","Y","YAMLSeq","t","toJSON","S","Scalar","findPair","resolveMap","stringifyNumber","binary","identify","value","Uint8Array","default","tag","resolve","doc","node","src","Buffer","from","atob","str","replace","buffer","length","i","charCodeAt","msg","errors","push","options","stringify","_ref","ctx","onComment","onChompKeep","comment","type","toString","btoa","s","String","fromCharCode","Error","defaultType","QUOTE_DOUBLE","lineWidth","n","Math","ceil","lines","Array","_i","substr","join","BLOCK_LITERAL","parsePairs","cst","seq","items","item","pair","commentBefore","concat","createPairs","schema","iterable","pairs","_iterator","_step","done","it","key","isArray","TypeError","Object","keys","createPair","err","f","createNode","YAMLOMap","_YAMLSeq","_super","_this","call","prototype","add","bind","delete","get","has","set","toJSON$1","map","Map","onCreate","parseOMap","seenKeys","_iterator2","_step2","includes","assign","createOMap","omap","nodeClass","YAMLSet","_YAMLMap","prev","keepPair","splice","indexOf","Set","JSON","hasAllNullValues","parseSet","createSet","parseSexagesimal","sign","parts","split","reduce","Number","stringifySexagesimal","isNaN","isFinite","abs","unshift","round","intTime","format","test","floatTime","timestamp","Date","RegExp","year","month","day","hour","minute","second","millisec","tz","date","UTC","slice","_ref2","toISOString","shouldWarn","deprecation","env","process","YAML_SILENCE_DEPRECATION_WARNINGS","YAML_SILENCE_WARNINGS","warn","warning","emit","emitWarning","console","warnFileDeprecation","filename","path","warned","warnOptionDeprecation","name","alternative","w"],"mappings":"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","sourcesContent":["import { o as YAMLReferenceError, T as Type, g as YAMLSemanticError, _ as _createForOfIteratorHelper, e as _defineProperty, j as _inherits, k as _createSuper, c as _classCallCheck, p as _assertThisInitialized, b as _createClass, a as _typeof, l as _get, m as _getPrototypeOf } from './PlainValue-b8036b75.js';\nimport { j as resolveString, b as binaryOptions, c as stringifyString, h as resolveSeq, P as Pair, d as YAMLMap, Y as YAMLSeq, t as toJSON, S as Scalar, l as findPair, g as resolveMap, k as stringifyNumber } from './resolveSeq-492ab440.js';\n\n/* global atob, btoa, Buffer */\nvar binary = {\n  identify: function identify(value) {\n    return value instanceof Uint8Array;\n  },\n  // Buffer inherits from Uint8Array\n  default: false,\n  tag: 'tag:yaml.org,2002:binary',\n\n  /**\n   * Returns a Buffer in node and an Uint8Array in browsers\n   *\n   * To use the resulting buffer as an image, you'll want to do something like:\n   *\n   *   const blob = new Blob([buffer], { type: 'image/jpeg' })\n   *   document.querySelector('#photo').src = URL.createObjectURL(blob)\n   */\n  resolve: function resolve(doc, node) {\n    var src = resolveString(doc, node);\n\n    if (typeof Buffer === 'function') {\n      return Buffer.from(src, 'base64');\n    } else if (typeof atob === 'function') {\n      // On IE 11, atob() can't handle newlines\n      var str = atob(src.replace(/[\\n\\r]/g, ''));\n      var buffer = new Uint8Array(str.length);\n\n      for (var i = 0; i < str.length; ++i) {\n        buffer[i] = str.charCodeAt(i);\n      }\n\n      return buffer;\n    } else {\n      var msg = 'This environment does not support reading binary tags; either Buffer or atob is required';\n      doc.errors.push(new YAMLReferenceError(node, msg));\n      return null;\n    }\n  },\n  options: binaryOptions,\n  stringify: function stringify(_ref, ctx, onComment, onChompKeep) {\n    var comment = _ref.comment,\n        type = _ref.type,\n        value = _ref.value;\n    var src;\n\n    if (typeof Buffer === 'function') {\n      src = value instanceof Buffer ? value.toString('base64') : Buffer.from(value.buffer).toString('base64');\n    } else if (typeof btoa === 'function') {\n      var s = '';\n\n      for (var i = 0; i < value.length; ++i) {\n        s += String.fromCharCode(value[i]);\n      }\n\n      src = btoa(s);\n    } else {\n      throw new Error('This environment does not support writing binary tags; either Buffer or btoa is required');\n    }\n\n    if (!type) type = binaryOptions.defaultType;\n\n    if (type === Type.QUOTE_DOUBLE) {\n      value = src;\n    } else {\n      var lineWidth = binaryOptions.lineWidth;\n      var n = Math.ceil(src.length / lineWidth);\n      var lines = new Array(n);\n\n      for (var _i = 0, o = 0; _i < n; ++_i, o += lineWidth) {\n        lines[_i] = src.substr(o, lineWidth);\n      }\n\n      value = lines.join(type === Type.BLOCK_LITERAL ? '\\n' : ' ');\n    }\n\n    return stringifyString({\n      comment: comment,\n      type: type,\n      value: value\n    }, ctx, onComment, onChompKeep);\n  }\n};\n\nfunction parsePairs(doc, cst) {\n  var seq = resolveSeq(doc, cst);\n\n  for (var i = 0; i < seq.items.length; ++i) {\n    var item = seq.items[i];\n    if (item instanceof Pair) continue;else if (item instanceof YAMLMap) {\n      if (item.items.length > 1) {\n        var msg = 'Each pair must have its own sequence indicator';\n        throw new YAMLSemanticError(cst, msg);\n      }\n\n      var pair = item.items[0] || new Pair();\n      if (item.commentBefore) pair.commentBefore = pair.commentBefore ? \"\".concat(item.commentBefore, \"\\n\").concat(pair.commentBefore) : item.commentBefore;\n      if (item.comment) pair.comment = pair.comment ? \"\".concat(item.comment, \"\\n\").concat(pair.comment) : item.comment;\n      item = pair;\n    }\n    seq.items[i] = item instanceof Pair ? item : new Pair(item);\n  }\n\n  return seq;\n}\nfunction createPairs(schema, iterable, ctx) {\n  var pairs = new YAMLSeq(schema);\n  pairs.tag = 'tag:yaml.org,2002:pairs';\n\n  var _iterator = _createForOfIteratorHelper(iterable),\n      _step;\n\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var it = _step.value;\n      var key = void 0,\n          value = void 0;\n\n      if (Array.isArray(it)) {\n        if (it.length === 2) {\n          key = it[0];\n          value = it[1];\n        } else throw new TypeError(\"Expected [key, value] tuple: \".concat(it));\n      } else if (it && it instanceof Object) {\n        var keys = Object.keys(it);\n\n        if (keys.length === 1) {\n          key = keys[0];\n          value = it[key];\n        } else throw new TypeError(\"Expected { key: value } tuple: \".concat(it));\n      } else {\n        key = it;\n      }\n\n      var pair = schema.createPair(key, value, ctx);\n      pairs.items.push(pair);\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n\n  return pairs;\n}\nvar pairs = {\n  default: false,\n  tag: 'tag:yaml.org,2002:pairs',\n  resolve: parsePairs,\n  createNode: createPairs\n};\n\nvar YAMLOMap = /*#__PURE__*/function (_YAMLSeq) {\n  _inherits(YAMLOMap, _YAMLSeq);\n\n  var _super = _createSuper(YAMLOMap);\n\n  function YAMLOMap() {\n    var _this;\n\n    _classCallCheck(this, YAMLOMap);\n\n    _this = _super.call(this);\n\n    _defineProperty(_assertThisInitialized(_this), \"add\", YAMLMap.prototype.add.bind(_assertThisInitialized(_this)));\n\n    _defineProperty(_assertThisInitialized(_this), \"delete\", YAMLMap.prototype.delete.bind(_assertThisInitialized(_this)));\n\n    _defineProperty(_assertThisInitialized(_this), \"get\", YAMLMap.prototype.get.bind(_assertThisInitialized(_this)));\n\n    _defineProperty(_assertThisInitialized(_this), \"has\", YAMLMap.prototype.has.bind(_assertThisInitialized(_this)));\n\n    _defineProperty(_assertThisInitialized(_this), \"set\", YAMLMap.prototype.set.bind(_assertThisInitialized(_this)));\n\n    _this.tag = YAMLOMap.tag;\n    return _this;\n  }\n\n  _createClass(YAMLOMap, [{\n    key: \"toJSON\",\n    value: function toJSON$1(_, ctx) {\n      var map = new Map();\n      if (ctx && ctx.onCreate) ctx.onCreate(map);\n\n      var _iterator = _createForOfIteratorHelper(this.items),\n          _step;\n\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var pair = _step.value;\n          var key = void 0,\n              value = void 0;\n\n          if (pair instanceof Pair) {\n            key = toJSON(pair.key, '', ctx);\n            value = toJSON(pair.value, key, ctx);\n          } else {\n            key = toJSON(pair, '', ctx);\n          }\n\n          if (map.has(key)) throw new Error('Ordered maps must not include duplicate keys');\n          map.set(key, value);\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n\n      return map;\n    }\n  }]);\n\n  return YAMLOMap;\n}(YAMLSeq);\n\n_defineProperty(YAMLOMap, \"tag\", 'tag:yaml.org,2002:omap');\n\nfunction parseOMap(doc, cst) {\n  var pairs = parsePairs(doc, cst);\n  var seenKeys = [];\n\n  var _iterator2 = _createForOfIteratorHelper(pairs.items),\n      _step2;\n\n  try {\n    for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n      var key = _step2.value.key;\n\n      if (key instanceof Scalar) {\n        if (seenKeys.includes(key.value)) {\n          var msg = 'Ordered maps must not include duplicate keys';\n          throw new YAMLSemanticError(cst, msg);\n        } else {\n          seenKeys.push(key.value);\n        }\n      }\n    }\n  } catch (err) {\n    _iterator2.e(err);\n  } finally {\n    _iterator2.f();\n  }\n\n  return Object.assign(new YAMLOMap(), pairs);\n}\n\nfunction createOMap(schema, iterable, ctx) {\n  var pairs = createPairs(schema, iterable, ctx);\n  var omap = new YAMLOMap();\n  omap.items = pairs.items;\n  return omap;\n}\n\nvar omap = {\n  identify: function identify(value) {\n    return value instanceof Map;\n  },\n  nodeClass: YAMLOMap,\n  default: false,\n  tag: 'tag:yaml.org,2002:omap',\n  resolve: parseOMap,\n  createNode: createOMap\n};\n\nvar YAMLSet = /*#__PURE__*/function (_YAMLMap) {\n  _inherits(YAMLSet, _YAMLMap);\n\n  var _super = _createSuper(YAMLSet);\n\n  function YAMLSet() {\n    var _this;\n\n    _classCallCheck(this, YAMLSet);\n\n    _this = _super.call(this);\n    _this.tag = YAMLSet.tag;\n    return _this;\n  }\n\n  _createClass(YAMLSet, [{\n    key: \"add\",\n    value: function add(key) {\n      var pair = key instanceof Pair ? key : new Pair(key);\n      var prev = findPair(this.items, pair.key);\n      if (!prev) this.items.push(pair);\n    }\n  }, {\n    key: \"get\",\n    value: function get(key, keepPair) {\n      var pair = findPair(this.items, key);\n      return !keepPair && pair instanceof Pair ? pair.key instanceof Scalar ? pair.key.value : pair.key : pair;\n    }\n  }, {\n    key: \"set\",\n    value: function set(key, value) {\n      if (typeof value !== 'boolean') throw new Error(\"Expected boolean value for set(key, value) in a YAML set, not \".concat(_typeof(value)));\n      var prev = findPair(this.items, key);\n\n      if (prev && !value) {\n        this.items.splice(this.items.indexOf(prev), 1);\n      } else if (!prev && value) {\n        this.items.push(new Pair(key));\n      }\n    }\n  }, {\n    key: \"toJSON\",\n    value: function toJSON(_, ctx) {\n      return _get(_getPrototypeOf(YAMLSet.prototype), \"toJSON\", this).call(this, _, ctx, Set);\n    }\n  }, {\n    key: \"toString\",\n    value: function toString(ctx, onComment, onChompKeep) {\n      if (!ctx) return JSON.stringify(this);\n      if (this.hasAllNullValues()) return _get(_getPrototypeOf(YAMLSet.prototype), \"toString\", this).call(this, ctx, onComment, onChompKeep);else throw new Error('Set items must all have null values');\n    }\n  }]);\n\n  return YAMLSet;\n}(YAMLMap);\n\n_defineProperty(YAMLSet, \"tag\", 'tag:yaml.org,2002:set');\n\nfunction parseSet(doc, cst) {\n  var map = resolveMap(doc, cst);\n  if (!map.hasAllNullValues()) throw new YAMLSemanticError(cst, 'Set items must all have null values');\n  return Object.assign(new YAMLSet(), map);\n}\n\nfunction createSet(schema, iterable, ctx) {\n  var set = new YAMLSet();\n\n  var _iterator = _createForOfIteratorHelper(iterable),\n      _step;\n\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var value = _step.value;\n      set.items.push(schema.createPair(value, null, ctx));\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n\n  return set;\n}\n\nvar set = {\n  identify: function identify(value) {\n    return value instanceof Set;\n  },\n  nodeClass: YAMLSet,\n  default: false,\n  tag: 'tag:yaml.org,2002:set',\n  resolve: parseSet,\n  createNode: createSet\n};\n\nvar parseSexagesimal = function parseSexagesimal(sign, parts) {\n  var n = parts.split(':').reduce(function (n, p) {\n    return n * 60 + Number(p);\n  }, 0);\n  return sign === '-' ? -n : n;\n}; // hhhh:mm:ss.sss\n\n\nvar stringifySexagesimal = function stringifySexagesimal(_ref) {\n  var value = _ref.value;\n  if (isNaN(value) || !isFinite(value)) return stringifyNumber(value);\n  var sign = '';\n\n  if (value < 0) {\n    sign = '-';\n    value = Math.abs(value);\n  }\n\n  var parts = [value % 60]; // seconds, including ms\n\n  if (value < 60) {\n    parts.unshift(0); // at least one : is required\n  } else {\n    value = Math.round((value - parts[0]) / 60);\n    parts.unshift(value % 60); // minutes\n\n    if (value >= 60) {\n      value = Math.round((value - parts[0]) / 60);\n      parts.unshift(value); // hours\n    }\n  }\n\n  return sign + parts.map(function (n) {\n    return n < 10 ? '0' + String(n) : String(n);\n  }).join(':').replace(/000000\\d*$/, '') // % 60 may introduce error\n  ;\n};\n\nvar intTime = {\n  identify: function identify(value) {\n    return typeof value === 'number';\n  },\n  default: true,\n  tag: 'tag:yaml.org,2002:int',\n  format: 'TIME',\n  test: /^([-+]?)([0-9][0-9_]*(?::[0-5]?[0-9])+)$/,\n  resolve: function resolve(str, sign, parts) {\n    return parseSexagesimal(sign, parts.replace(/_/g, ''));\n  },\n  stringify: stringifySexagesimal\n};\nvar floatTime = {\n  identify: function identify(value) {\n    return typeof value === 'number';\n  },\n  default: true,\n  tag: 'tag:yaml.org,2002:float',\n  format: 'TIME',\n  test: /^([-+]?)([0-9][0-9_]*(?::[0-5]?[0-9])+\\.[0-9_]*)$/,\n  resolve: function resolve(str, sign, parts) {\n    return parseSexagesimal(sign, parts.replace(/_/g, ''));\n  },\n  stringify: stringifySexagesimal\n};\nvar timestamp = {\n  identify: function identify(value) {\n    return value instanceof Date;\n  },\n  default: true,\n  tag: 'tag:yaml.org,2002:timestamp',\n  // If the time zone is omitted, the timestamp is assumed to be specified in UTC. The time part\n  // may be omitted altogether, resulting in a date format. In such a case, the time part is\n  // assumed to be 00:00:00Z (start of day, UTC).\n  test: RegExp('^(?:' + '([0-9]{4})-([0-9]{1,2})-([0-9]{1,2})' + // YYYY-Mm-Dd\n  '(?:(?:t|T|[ \\\\t]+)' + // t | T | whitespace\n  '([0-9]{1,2}):([0-9]{1,2}):([0-9]{1,2}(\\\\.[0-9]+)?)' + // Hh:Mm:Ss(.ss)?\n  '(?:[ \\\\t]*(Z|[-+][012]?[0-9](?::[0-9]{2})?))?' + // Z | +5 | -03:30\n  ')?' + ')$'),\n  resolve: function resolve(str, year, month, day, hour, minute, second, millisec, tz) {\n    if (millisec) millisec = (millisec + '00').substr(1, 3);\n    var date = Date.UTC(year, month - 1, day, hour || 0, minute || 0, second || 0, millisec || 0);\n\n    if (tz && tz !== 'Z') {\n      var d = parseSexagesimal(tz[0], tz.slice(1));\n      if (Math.abs(d) < 30) d *= 60;\n      date -= 60000 * d;\n    }\n\n    return new Date(date);\n  },\n  stringify: function stringify(_ref2) {\n    var value = _ref2.value;\n    return value.toISOString().replace(/((T00:00)?:00)?\\.000Z$/, '');\n  }\n};\n\n/* global console, process, YAML_SILENCE_DEPRECATION_WARNINGS, YAML_SILENCE_WARNINGS */\nfunction shouldWarn(deprecation) {\n  var env = typeof process !== 'undefined' && process.env || {};\n\n  if (deprecation) {\n    if (typeof YAML_SILENCE_DEPRECATION_WARNINGS !== 'undefined') return !YAML_SILENCE_DEPRECATION_WARNINGS;\n    return !env.YAML_SILENCE_DEPRECATION_WARNINGS;\n  }\n\n  if (typeof YAML_SILENCE_WARNINGS !== 'undefined') return !YAML_SILENCE_WARNINGS;\n  return !env.YAML_SILENCE_WARNINGS;\n}\n\nfunction warn(warning, type) {\n  if (shouldWarn(false)) {\n    var emit = typeof process !== 'undefined' && process.emitWarning; // This will throw in Jest if `warning` is an Error instance due to\n    // https://github.com/facebook/jest/issues/2549\n\n    if (emit) emit(warning, type);else {\n      // eslint-disable-next-line no-console\n      console.warn(type ? \"\".concat(type, \": \").concat(warning) : warning);\n    }\n  }\n}\nfunction warnFileDeprecation(filename) {\n  if (shouldWarn(true)) {\n    var path = filename.replace(/.*yaml[/\\\\]/i, '').replace(/\\.js$/, '').replace(/\\\\/g, '/');\n    warn(\"The endpoint 'yaml/\".concat(path, \"' will be removed in a future release.\"), 'DeprecationWarning');\n  }\n}\nvar warned = {};\nfunction warnOptionDeprecation(name, alternative) {\n  if (!warned[name] && shouldWarn(true)) {\n    warned[name] = true;\n    var msg = \"The option '\".concat(name, \"' will be removed in a future release\");\n    msg += alternative ? \", use '\".concat(alternative, \"' instead.\") : '.';\n    warn(msg, 'DeprecationWarning');\n  }\n}\n\nexport { warnOptionDeprecation as a, binary as b, warnFileDeprecation as c, floatTime as f, intTime as i, omap as o, pairs as p, set as s, timestamp as t, warn as w };\n"]},"metadata":{},"sourceType":"module"}