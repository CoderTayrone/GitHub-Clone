{"ast":null,"code":"'use strict';\n/**\n * `list` type prompt\n */\n\nvar _ = require('lodash');\n\nvar chalk = require('chalk');\n\nvar cliCursor = require('cli-cursor');\n\nvar figures = require('figures');\n\nvar {\n  map,\n  takeUntil\n} = require('rxjs/operators');\n\nvar Base = require('./base');\n\nvar observe = require('../utils/events');\n\nvar Paginator = require('../utils/paginator');\n\nclass CheckboxPrompt extends Base {\n  constructor(questions, rl, answers) {\n    super(questions, rl, answers);\n\n    if (!this.opt.choices) {\n      this.throwParamError('choices');\n    }\n\n    if (_.isArray(this.opt.default)) {\n      this.opt.choices.forEach(function (choice) {\n        if (this.opt.default.indexOf(choice.value) >= 0) {\n          choice.checked = true;\n        }\n      }, this);\n    }\n\n    this.pointer = 0; // Make sure no default is set (so it won't be printed)\n\n    this.opt.default = null;\n    this.paginator = new Paginator(this.screen);\n  }\n  /**\n   * Start the Inquiry session\n   * @param  {Function} cb      Callback when prompt is done\n   * @return {this}\n   */\n\n\n  _run(cb) {\n    this.done = cb;\n    var events = observe(this.rl);\n    var validation = this.handleSubmitEvents(events.line.pipe(map(this.getCurrentValue.bind(this))));\n    validation.success.forEach(this.onEnd.bind(this));\n    validation.error.forEach(this.onError.bind(this));\n    events.normalizedUpKey.pipe(takeUntil(validation.success)).forEach(this.onUpKey.bind(this));\n    events.normalizedDownKey.pipe(takeUntil(validation.success)).forEach(this.onDownKey.bind(this));\n    events.numberKey.pipe(takeUntil(validation.success)).forEach(this.onNumberKey.bind(this));\n    events.spaceKey.pipe(takeUntil(validation.success)).forEach(this.onSpaceKey.bind(this));\n    events.aKey.pipe(takeUntil(validation.success)).forEach(this.onAllKey.bind(this));\n    events.iKey.pipe(takeUntil(validation.success)).forEach(this.onInverseKey.bind(this)); // Init the prompt\n\n    cliCursor.hide();\n    this.render();\n    this.firstRender = false;\n    return this;\n  }\n  /**\n   * Render the prompt to screen\n   * @return {CheckboxPrompt} self\n   */\n\n\n  render(error) {\n    // Render question\n    var message = this.getQuestion();\n    var bottomContent = '';\n\n    if (!this.spaceKeyPressed) {\n      message += '(Press ' + chalk.cyan.bold('<space>') + ' to select, ' + chalk.cyan.bold('<a>') + ' to toggle all, ' + chalk.cyan.bold('<i>') + ' to invert selection)';\n    } // Render choices or answer depending on the state\n\n\n    if (this.status === 'answered') {\n      message += chalk.cyan(this.selection.join(', '));\n    } else {\n      var choicesStr = renderChoices(this.opt.choices, this.pointer);\n      var indexPosition = this.opt.choices.indexOf(this.opt.choices.getChoice(this.pointer));\n      message += '\\n' + this.paginator.paginate(choicesStr, indexPosition, this.opt.pageSize);\n    }\n\n    if (error) {\n      bottomContent = chalk.red('>> ') + error;\n    }\n\n    this.screen.render(message, bottomContent);\n  }\n  /**\n   * When user press `enter` key\n   */\n\n\n  onEnd(state) {\n    this.status = 'answered'; // Rerender prompt (and clean subline error)\n\n    this.render();\n    this.screen.done();\n    cliCursor.show();\n    this.done(state.value);\n  }\n\n  onError(state) {\n    this.render(state.isValid);\n  }\n\n  getCurrentValue() {\n    var choices = this.opt.choices.filter(function (choice) {\n      return Boolean(choice.checked) && !choice.disabled;\n    });\n    this.selection = _.map(choices, 'short');\n    return _.map(choices, 'value');\n  }\n\n  onUpKey() {\n    var len = this.opt.choices.realLength;\n    this.pointer = this.pointer > 0 ? this.pointer - 1 : len - 1;\n    this.render();\n  }\n\n  onDownKey() {\n    var len = this.opt.choices.realLength;\n    this.pointer = this.pointer < len - 1 ? this.pointer + 1 : 0;\n    this.render();\n  }\n\n  onNumberKey(input) {\n    if (input <= this.opt.choices.realLength) {\n      this.pointer = input - 1;\n      this.toggleChoice(this.pointer);\n    }\n\n    this.render();\n  }\n\n  onSpaceKey() {\n    this.spaceKeyPressed = true;\n    this.toggleChoice(this.pointer);\n    this.render();\n  }\n\n  onAllKey() {\n    var shouldBeChecked = Boolean(this.opt.choices.find(function (choice) {\n      return choice.type !== 'separator' && !choice.checked;\n    }));\n    this.opt.choices.forEach(function (choice) {\n      if (choice.type !== 'separator') {\n        choice.checked = shouldBeChecked;\n      }\n    });\n    this.render();\n  }\n\n  onInverseKey() {\n    this.opt.choices.forEach(function (choice) {\n      if (choice.type !== 'separator') {\n        choice.checked = !choice.checked;\n      }\n    });\n    this.render();\n  }\n\n  toggleChoice(index) {\n    var item = this.opt.choices.getChoice(index);\n\n    if (item !== undefined) {\n      this.opt.choices.getChoice(index).checked = !item.checked;\n    }\n  }\n\n}\n/**\n * Function for rendering checkbox choices\n * @param  {Number} pointer Position of the pointer\n * @return {String}         Rendered content\n */\n\n\nfunction renderChoices(choices, pointer) {\n  var output = '';\n  var separatorOffset = 0;\n  choices.forEach(function (choice, i) {\n    if (choice.type === 'separator') {\n      separatorOffset++;\n      output += ' ' + choice + '\\n';\n      return;\n    }\n\n    if (choice.disabled) {\n      separatorOffset++;\n      output += ' - ' + choice.name;\n      output += ' (' + (_.isString(choice.disabled) ? choice.disabled : 'Disabled') + ')';\n    } else {\n      var line = getCheckbox(choice.checked) + ' ' + choice.name;\n\n      if (i - separatorOffset === pointer) {\n        output += chalk.cyan(figures.pointer + line);\n      } else {\n        output += ' ' + line;\n      }\n    }\n\n    output += '\\n';\n  });\n  return output.replace(/\\n$/, '');\n}\n/**\n * Get the checkbox\n * @param  {Boolean} checked - add a X or not to the checkbox\n * @return {String} Composited checkbox string\n */\n\n\nfunction getCheckbox(checked) {\n  return checked ? chalk.green(figures.radioOn) : figures.radioOff;\n}\n\nmodule.exports = CheckboxPrompt;","map":{"version":3,"sources":["/home/dev/Documentos/Projects/github-clone/node_modules/inquirer/lib/prompts/checkbox.js"],"names":["_","require","chalk","cliCursor","figures","map","takeUntil","Base","observe","Paginator","CheckboxPrompt","constructor","questions","rl","answers","opt","choices","throwParamError","isArray","default","forEach","choice","indexOf","value","checked","pointer","paginator","screen","_run","cb","done","events","validation","handleSubmitEvents","line","pipe","getCurrentValue","bind","success","onEnd","error","onError","normalizedUpKey","onUpKey","normalizedDownKey","onDownKey","numberKey","onNumberKey","spaceKey","onSpaceKey","aKey","onAllKey","iKey","onInverseKey","hide","render","firstRender","message","getQuestion","bottomContent","spaceKeyPressed","cyan","bold","status","selection","join","choicesStr","renderChoices","indexPosition","getChoice","paginate","pageSize","red","state","show","isValid","filter","Boolean","disabled","len","realLength","input","toggleChoice","shouldBeChecked","find","type","index","item","undefined","output","separatorOffset","i","name","isString","getCheckbox","replace","green","radioOn","radioOff","module","exports"],"mappings":"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","sourcesContent":["'use strict';\n/**\n * `list` type prompt\n */\n\nvar _ = require('lodash');\nvar chalk = require('chalk');\nvar cliCursor = require('cli-cursor');\nvar figures = require('figures');\nvar { map, takeUntil } = require('rxjs/operators');\nvar Base = require('./base');\nvar observe = require('../utils/events');\nvar Paginator = require('../utils/paginator');\n\nclass CheckboxPrompt extends Base {\n  constructor(questions, rl, answers) {\n    super(questions, rl, answers);\n\n    if (!this.opt.choices) {\n      this.throwParamError('choices');\n    }\n\n    if (_.isArray(this.opt.default)) {\n      this.opt.choices.forEach(function(choice) {\n        if (this.opt.default.indexOf(choice.value) >= 0) {\n          choice.checked = true;\n        }\n      }, this);\n    }\n\n    this.pointer = 0;\n\n    // Make sure no default is set (so it won't be printed)\n    this.opt.default = null;\n\n    this.paginator = new Paginator(this.screen);\n  }\n\n  /**\n   * Start the Inquiry session\n   * @param  {Function} cb      Callback when prompt is done\n   * @return {this}\n   */\n\n  _run(cb) {\n    this.done = cb;\n\n    var events = observe(this.rl);\n\n    var validation = this.handleSubmitEvents(\n      events.line.pipe(map(this.getCurrentValue.bind(this)))\n    );\n    validation.success.forEach(this.onEnd.bind(this));\n    validation.error.forEach(this.onError.bind(this));\n\n    events.normalizedUpKey\n      .pipe(takeUntil(validation.success))\n      .forEach(this.onUpKey.bind(this));\n    events.normalizedDownKey\n      .pipe(takeUntil(validation.success))\n      .forEach(this.onDownKey.bind(this));\n    events.numberKey\n      .pipe(takeUntil(validation.success))\n      .forEach(this.onNumberKey.bind(this));\n    events.spaceKey\n      .pipe(takeUntil(validation.success))\n      .forEach(this.onSpaceKey.bind(this));\n    events.aKey.pipe(takeUntil(validation.success)).forEach(this.onAllKey.bind(this));\n    events.iKey.pipe(takeUntil(validation.success)).forEach(this.onInverseKey.bind(this));\n\n    // Init the prompt\n    cliCursor.hide();\n    this.render();\n    this.firstRender = false;\n\n    return this;\n  }\n\n  /**\n   * Render the prompt to screen\n   * @return {CheckboxPrompt} self\n   */\n\n  render(error) {\n    // Render question\n    var message = this.getQuestion();\n    var bottomContent = '';\n\n    if (!this.spaceKeyPressed) {\n      message +=\n        '(Press ' +\n        chalk.cyan.bold('<space>') +\n        ' to select, ' +\n        chalk.cyan.bold('<a>') +\n        ' to toggle all, ' +\n        chalk.cyan.bold('<i>') +\n        ' to invert selection)';\n    }\n\n    // Render choices or answer depending on the state\n    if (this.status === 'answered') {\n      message += chalk.cyan(this.selection.join(', '));\n    } else {\n      var choicesStr = renderChoices(this.opt.choices, this.pointer);\n      var indexPosition = this.opt.choices.indexOf(\n        this.opt.choices.getChoice(this.pointer)\n      );\n      message +=\n        '\\n' + this.paginator.paginate(choicesStr, indexPosition, this.opt.pageSize);\n    }\n\n    if (error) {\n      bottomContent = chalk.red('>> ') + error;\n    }\n\n    this.screen.render(message, bottomContent);\n  }\n\n  /**\n   * When user press `enter` key\n   */\n\n  onEnd(state) {\n    this.status = 'answered';\n\n    // Rerender prompt (and clean subline error)\n    this.render();\n\n    this.screen.done();\n    cliCursor.show();\n    this.done(state.value);\n  }\n\n  onError(state) {\n    this.render(state.isValid);\n  }\n\n  getCurrentValue() {\n    var choices = this.opt.choices.filter(function(choice) {\n      return Boolean(choice.checked) && !choice.disabled;\n    });\n\n    this.selection = _.map(choices, 'short');\n    return _.map(choices, 'value');\n  }\n\n  onUpKey() {\n    var len = this.opt.choices.realLength;\n    this.pointer = this.pointer > 0 ? this.pointer - 1 : len - 1;\n    this.render();\n  }\n\n  onDownKey() {\n    var len = this.opt.choices.realLength;\n    this.pointer = this.pointer < len - 1 ? this.pointer + 1 : 0;\n    this.render();\n  }\n\n  onNumberKey(input) {\n    if (input <= this.opt.choices.realLength) {\n      this.pointer = input - 1;\n      this.toggleChoice(this.pointer);\n    }\n\n    this.render();\n  }\n\n  onSpaceKey() {\n    this.spaceKeyPressed = true;\n    this.toggleChoice(this.pointer);\n    this.render();\n  }\n\n  onAllKey() {\n    var shouldBeChecked = Boolean(\n      this.opt.choices.find(function(choice) {\n        return choice.type !== 'separator' && !choice.checked;\n      })\n    );\n\n    this.opt.choices.forEach(function(choice) {\n      if (choice.type !== 'separator') {\n        choice.checked = shouldBeChecked;\n      }\n    });\n\n    this.render();\n  }\n\n  onInverseKey() {\n    this.opt.choices.forEach(function(choice) {\n      if (choice.type !== 'separator') {\n        choice.checked = !choice.checked;\n      }\n    });\n\n    this.render();\n  }\n\n  toggleChoice(index) {\n    var item = this.opt.choices.getChoice(index);\n    if (item !== undefined) {\n      this.opt.choices.getChoice(index).checked = !item.checked;\n    }\n  }\n}\n\n/**\n * Function for rendering checkbox choices\n * @param  {Number} pointer Position of the pointer\n * @return {String}         Rendered content\n */\n\nfunction renderChoices(choices, pointer) {\n  var output = '';\n  var separatorOffset = 0;\n\n  choices.forEach(function(choice, i) {\n    if (choice.type === 'separator') {\n      separatorOffset++;\n      output += ' ' + choice + '\\n';\n      return;\n    }\n\n    if (choice.disabled) {\n      separatorOffset++;\n      output += ' - ' + choice.name;\n      output += ' (' + (_.isString(choice.disabled) ? choice.disabled : 'Disabled') + ')';\n    } else {\n      var line = getCheckbox(choice.checked) + ' ' + choice.name;\n      if (i - separatorOffset === pointer) {\n        output += chalk.cyan(figures.pointer + line);\n      } else {\n        output += ' ' + line;\n      }\n    }\n\n    output += '\\n';\n  });\n\n  return output.replace(/\\n$/, '');\n}\n\n/**\n * Get the checkbox\n * @param  {Boolean} checked - add a X or not to the checkbox\n * @return {String} Composited checkbox string\n */\n\nfunction getCheckbox(checked) {\n  return checked ? chalk.green(figures.radioOn) : figures.radioOff;\n}\n\nmodule.exports = CheckboxPrompt;\n"]},"metadata":{},"sourceType":"script"}