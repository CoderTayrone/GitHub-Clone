{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.StorageCloudFunctions = void 0;\n\nconst registry_1 = require(\"../registry\");\n\nconst types_1 = require(\"../types\");\n\nconst emulatorLogger_1 = require(\"../emulatorLogger\");\n\nconst metadata_1 = require(\"./metadata\");\n\nconst apiv2_1 = require(\"../../apiv2\");\n\nclass StorageCloudFunctions {\n  constructor(projectId) {\n    this.projectId = projectId;\n    this.logger = emulatorLogger_1.EmulatorLogger.forEmulator(types_1.Emulators.STORAGE);\n    this.multicastOrigin = \"\";\n    this.multicastPath = \"\";\n    this.enabled = false;\n    const functionsEmulator = registry_1.EmulatorRegistry.get(types_1.Emulators.FUNCTIONS);\n\n    if (functionsEmulator) {\n      this.enabled = true;\n      this.functionsEmulatorInfo = functionsEmulator.getInfo();\n      this.multicastOrigin = `http://${registry_1.EmulatorRegistry.getInfoHostString(this.functionsEmulatorInfo)}`;\n      this.multicastPath = `/functions/projects/${projectId}/trigger_multicast`;\n    }\n  }\n\n  async dispatch(action, object) {\n    if (!this.enabled) return;\n    const multicastEventBody = this.createEventRequestBody(action, object);\n    const c = new apiv2_1.Client({\n      urlPrefix: this.multicastOrigin,\n      auth: false\n    });\n    let res;\n    let err;\n\n    try {\n      res = await c.post(this.multicastPath, multicastEventBody);\n    } catch (e) {\n      err = e;\n    }\n\n    if (err || (res === null || res === void 0 ? void 0 : res.status) != 200) {\n      this.logger.logLabeled(\"WARN\", \"functions\", `Firebase Storage function was not triggered due to emulation error. Please file a bug.`);\n    }\n  }\n\n  createEventRequestBody(action, objectMetadataPayload) {\n    const timestamp = new Date();\n    return JSON.stringify({\n      eventId: `${timestamp.getTime()}`,\n      timestamp: metadata_1.toSerializedDate(timestamp),\n      eventType: `google.storage.object.${action}`,\n      resource: {\n        service: \"storage.googleapis.com\",\n        name: `projects/_/buckets/${objectMetadataPayload.bucket}/objects/${objectMetadataPayload.name}`,\n        type: \"storage#object\"\n      },\n      data: objectMetadataPayload\n    });\n  }\n\n}\n\nexports.StorageCloudFunctions = StorageCloudFunctions;","map":{"version":3,"sources":["/home/dev/Documentos/Projects/github-clone/node_modules/firebase-tools/lib/emulator/storage/cloudFunctions.js"],"names":["Object","defineProperty","exports","value","StorageCloudFunctions","registry_1","require","types_1","emulatorLogger_1","metadata_1","apiv2_1","constructor","projectId","logger","EmulatorLogger","forEmulator","Emulators","STORAGE","multicastOrigin","multicastPath","enabled","functionsEmulator","EmulatorRegistry","get","FUNCTIONS","functionsEmulatorInfo","getInfo","getInfoHostString","dispatch","action","object","multicastEventBody","createEventRequestBody","c","Client","urlPrefix","auth","res","err","post","e","status","logLabeled","objectMetadataPayload","timestamp","Date","JSON","stringify","eventId","getTime","toSerializedDate","eventType","resource","service","name","bucket","type","data"],"mappings":"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","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.StorageCloudFunctions = void 0;\nconst registry_1 = require(\"../registry\");\nconst types_1 = require(\"../types\");\nconst emulatorLogger_1 = require(\"../emulatorLogger\");\nconst metadata_1 = require(\"./metadata\");\nconst apiv2_1 = require(\"../../apiv2\");\nclass StorageCloudFunctions {\n    constructor(projectId) {\n        this.projectId = projectId;\n        this.logger = emulatorLogger_1.EmulatorLogger.forEmulator(types_1.Emulators.STORAGE);\n        this.multicastOrigin = \"\";\n        this.multicastPath = \"\";\n        this.enabled = false;\n        const functionsEmulator = registry_1.EmulatorRegistry.get(types_1.Emulators.FUNCTIONS);\n        if (functionsEmulator) {\n            this.enabled = true;\n            this.functionsEmulatorInfo = functionsEmulator.getInfo();\n            this.multicastOrigin = `http://${registry_1.EmulatorRegistry.getInfoHostString(this.functionsEmulatorInfo)}`;\n            this.multicastPath = `/functions/projects/${projectId}/trigger_multicast`;\n        }\n    }\n    async dispatch(action, object) {\n        if (!this.enabled)\n            return;\n        const multicastEventBody = this.createEventRequestBody(action, object);\n        const c = new apiv2_1.Client({ urlPrefix: this.multicastOrigin, auth: false });\n        let res;\n        let err;\n        try {\n            res = await c.post(this.multicastPath, multicastEventBody);\n        }\n        catch (e) {\n            err = e;\n        }\n        if (err || (res === null || res === void 0 ? void 0 : res.status) != 200) {\n            this.logger.logLabeled(\"WARN\", \"functions\", `Firebase Storage function was not triggered due to emulation error. Please file a bug.`);\n        }\n    }\n    createEventRequestBody(action, objectMetadataPayload) {\n        const timestamp = new Date();\n        return JSON.stringify({\n            eventId: `${timestamp.getTime()}`,\n            timestamp: metadata_1.toSerializedDate(timestamp),\n            eventType: `google.storage.object.${action}`,\n            resource: {\n                service: \"storage.googleapis.com\",\n                name: `projects/_/buckets/${objectMetadataPayload.bucket}/objects/${objectMetadataPayload.name}`,\n                type: \"storage#object\",\n            },\n            data: objectMetadataPayload,\n        });\n    }\n}\nexports.StorageCloudFunctions = StorageCloudFunctions;\n"]},"metadata":{},"sourceType":"script"}