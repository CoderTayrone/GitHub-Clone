{"ast":null,"code":"\"use strict\";\n\nconst _ = require(\"lodash\");\n\nconst {\n  FirebaseError\n} = require(\"./error\");\n\nmodule.exports = function (response, body) {\n  if (typeof body === \"string\" && response.statusCode === 404) {\n    body = {\n      error: {\n        message: \"Not Found\"\n      }\n    };\n  }\n\n  if (response.statusCode < 400) {\n    return null;\n  }\n\n  if (typeof body !== \"object\") {\n    try {\n      body = JSON.parse(body);\n    } catch (e) {\n      body = {};\n    }\n  }\n\n  if (!body.error) {\n    const errMessage = response.statusCode === 404 ? \"Not Found\" : \"Unknown Error\";\n    body.error = {\n      message: errMessage\n    };\n  }\n\n  const message = \"HTTP Error: \" + response.statusCode + \", \" + (body.error.message || body.error);\n  let exitCode;\n\n  if (response.statusCode >= 500) {\n    exitCode = 2;\n  } else {\n    exitCode = 1;\n  }\n\n  _.unset(response, \"request.headers\");\n\n  return new FirebaseError(message, {\n    context: {\n      body: body,\n      response: response\n    },\n    exit: exitCode,\n    status: response.statusCode\n  });\n};","map":{"version":3,"sources":["/home/dev/Documentos/Projects/github-clone/node_modules/firebase-tools/lib/responseToError.js"],"names":["_","require","FirebaseError","module","exports","response","body","statusCode","error","message","JSON","parse","e","errMessage","exitCode","unset","context","exit","status"],"mappings":"AAAA;;AACA,MAAMA,CAAC,GAAGC,OAAO,CAAC,QAAD,CAAjB;;AACA,MAAM;AAAEC,EAAAA;AAAF,IAAoBD,OAAO,CAAC,SAAD,CAAjC;;AACAE,MAAM,CAACC,OAAP,GAAiB,UAAUC,QAAV,EAAoBC,IAApB,EAA0B;AACvC,MAAI,OAAOA,IAAP,KAAgB,QAAhB,IAA4BD,QAAQ,CAACE,UAAT,KAAwB,GAAxD,EAA6D;AACzDD,IAAAA,IAAI,GAAG;AACHE,MAAAA,KAAK,EAAE;AACHC,QAAAA,OAAO,EAAE;AADN;AADJ,KAAP;AAKH;;AACD,MAAIJ,QAAQ,CAACE,UAAT,GAAsB,GAA1B,EAA+B;AAC3B,WAAO,IAAP;AACH;;AACD,MAAI,OAAOD,IAAP,KAAgB,QAApB,EAA8B;AAC1B,QAAI;AACAA,MAAAA,IAAI,GAAGI,IAAI,CAACC,KAAL,CAAWL,IAAX,CAAP;AACH,KAFD,CAGA,OAAOM,CAAP,EAAU;AACNN,MAAAA,IAAI,GAAG,EAAP;AACH;AACJ;;AACD,MAAI,CAACA,IAAI,CAACE,KAAV,EAAiB;AACb,UAAMK,UAAU,GAAGR,QAAQ,CAACE,UAAT,KAAwB,GAAxB,GAA8B,WAA9B,GAA4C,eAA/D;AACAD,IAAAA,IAAI,CAACE,KAAL,GAAa;AACTC,MAAAA,OAAO,EAAEI;AADA,KAAb;AAGH;;AACD,QAAMJ,OAAO,GAAG,iBAAiBJ,QAAQ,CAACE,UAA1B,GAAuC,IAAvC,IAA+CD,IAAI,CAACE,KAAL,CAAWC,OAAX,IAAsBH,IAAI,CAACE,KAA1E,CAAhB;AACA,MAAIM,QAAJ;;AACA,MAAIT,QAAQ,CAACE,UAAT,IAAuB,GAA3B,EAAgC;AAC5BO,IAAAA,QAAQ,GAAG,CAAX;AACH,GAFD,MAGK;AACDA,IAAAA,QAAQ,GAAG,CAAX;AACH;;AACDd,EAAAA,CAAC,CAACe,KAAF,CAAQV,QAAR,EAAkB,iBAAlB;;AACA,SAAO,IAAIH,aAAJ,CAAkBO,OAAlB,EAA2B;AAC9BO,IAAAA,OAAO,EAAE;AACLV,MAAAA,IAAI,EAAEA,IADD;AAELD,MAAAA,QAAQ,EAAEA;AAFL,KADqB;AAK9BY,IAAAA,IAAI,EAAEH,QALwB;AAM9BI,IAAAA,MAAM,EAAEb,QAAQ,CAACE;AANa,GAA3B,CAAP;AAQH,CA1CD","sourcesContent":["\"use strict\";\nconst _ = require(\"lodash\");\nconst { FirebaseError } = require(\"./error\");\nmodule.exports = function (response, body) {\n    if (typeof body === \"string\" && response.statusCode === 404) {\n        body = {\n            error: {\n                message: \"Not Found\",\n            },\n        };\n    }\n    if (response.statusCode < 400) {\n        return null;\n    }\n    if (typeof body !== \"object\") {\n        try {\n            body = JSON.parse(body);\n        }\n        catch (e) {\n            body = {};\n        }\n    }\n    if (!body.error) {\n        const errMessage = response.statusCode === 404 ? \"Not Found\" : \"Unknown Error\";\n        body.error = {\n            message: errMessage,\n        };\n    }\n    const message = \"HTTP Error: \" + response.statusCode + \", \" + (body.error.message || body.error);\n    let exitCode;\n    if (response.statusCode >= 500) {\n        exitCode = 2;\n    }\n    else {\n        exitCode = 1;\n    }\n    _.unset(response, \"request.headers\");\n    return new FirebaseError(message, {\n        context: {\n            body: body,\n            response: response,\n        },\n        exit: exitCode,\n        status: response.statusCode,\n    });\n};\n"]},"metadata":{},"sourceType":"script"}