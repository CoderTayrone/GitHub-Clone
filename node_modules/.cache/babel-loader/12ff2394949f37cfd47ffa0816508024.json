{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.validateDeploy = void 0;\n\nconst path = require(\"path\");\n\nconst clc = require(\"cli-color\");\n\nconst error_1 = require(\"../../error\");\n\nconst projectPath_1 = require(\"../../projectPath\");\n\nconst fsutils_1 = require(\"../../fsutils\");\n\nconst utils_1 = require(\"../../utils\");\n\nfunction validateDeploy(deploy, options) {\n  var _a, _b, _c;\n\n  const cfg = deploy.config;\n  const hasPublicDir = !!cfg.public;\n  const hasAnyStaticRewrites = !!((_a = (cfg.rewrites || []).filter(rw => rw.destination)) === null || _a === void 0 ? void 0 : _a.length);\n  const hasAnyDynamicRewrites = !!((_b = (cfg.rewrites || []).filter(rw => !rw.destination)) === null || _b === void 0 ? void 0 : _b.length);\n  const hasAnyRedirects = !!((_c = cfg.redirects) === null || _c === void 0 ? void 0 : _c.length);\n\n  if (!hasPublicDir && hasAnyStaticRewrites) {\n    throw new error_1.FirebaseError('Must supply a \"public\" directory when using \"destination\" rewrites.');\n  }\n\n  if (!hasPublicDir && !hasAnyDynamicRewrites && !hasAnyRedirects) {\n    throw new error_1.FirebaseError('Must supply a \"public\" directory or at least one rewrite or redirect in each \"hosting\" config.');\n  }\n\n  if (hasPublicDir && !fsutils_1.dirExistsSync(projectPath_1.resolveProjectPath(options, cfg.public))) {\n    throw new error_1.FirebaseError(`Specified \"public\" directory \"${cfg.public}\" does not exist, can't deploy hosting to site \"${deploy.site}\"`);\n  }\n\n  if (cfg.i18n) {\n    if (!hasPublicDir) {\n      throw new error_1.FirebaseError('Must supply a \"public\" directory when using \"i18n\" configuration.');\n    }\n\n    if (!cfg.i18n.root) {\n      throw new error_1.FirebaseError('Must supply a \"root\" in \"i18n\" config.');\n    } else {\n      const i18nPath = path.join(cfg.public, cfg.i18n.root);\n\n      if (!fsutils_1.dirExistsSync(projectPath_1.resolveProjectPath(options, i18nPath))) {\n        utils_1.logLabeledWarning(\"hosting\", `Couldn't find specified i18n root directory ${clc.bold(cfg.i18n.root)} in public directory ${clc.bold(cfg.public)}.`);\n      }\n    }\n  }\n}\n\nexports.validateDeploy = validateDeploy;","map":{"version":3,"sources":["/home/dev/Documentos/Projects/github-clone/node_modules/firebase-tools/lib/deploy/hosting/validate.js"],"names":["Object","defineProperty","exports","value","validateDeploy","path","require","clc","error_1","projectPath_1","fsutils_1","utils_1","deploy","options","_a","_b","_c","cfg","config","hasPublicDir","public","hasAnyStaticRewrites","rewrites","filter","rw","destination","length","hasAnyDynamicRewrites","hasAnyRedirects","redirects","FirebaseError","dirExistsSync","resolveProjectPath","site","i18n","root","i18nPath","join","logLabeledWarning","bold"],"mappings":"AAAA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;AACAD,OAAO,CAACE,cAAR,GAAyB,KAAK,CAA9B;;AACA,MAAMC,IAAI,GAAGC,OAAO,CAAC,MAAD,CAApB;;AACA,MAAMC,GAAG,GAAGD,OAAO,CAAC,WAAD,CAAnB;;AACA,MAAME,OAAO,GAAGF,OAAO,CAAC,aAAD,CAAvB;;AACA,MAAMG,aAAa,GAAGH,OAAO,CAAC,mBAAD,CAA7B;;AACA,MAAMI,SAAS,GAAGJ,OAAO,CAAC,eAAD,CAAzB;;AACA,MAAMK,OAAO,GAAGL,OAAO,CAAC,aAAD,CAAvB;;AACA,SAASF,cAAT,CAAwBQ,MAAxB,EAAgCC,OAAhC,EAAyC;AACrC,MAAIC,EAAJ,EAAQC,EAAR,EAAYC,EAAZ;;AACA,QAAMC,GAAG,GAAGL,MAAM,CAACM,MAAnB;AACA,QAAMC,YAAY,GAAG,CAAC,CAACF,GAAG,CAACG,MAA3B;AACA,QAAMC,oBAAoB,GAAG,CAAC,EAAE,CAACP,EAAE,GAAG,CAACG,GAAG,CAACK,QAAJ,IAAgB,EAAjB,EAAqBC,MAArB,CAA6BC,EAAD,IAAQA,EAAE,CAACC,WAAvC,CAAN,MAA+D,IAA/D,IAAuEX,EAAE,KAAK,KAAK,CAAnF,GAAuF,KAAK,CAA5F,GAAgGA,EAAE,CAACY,MAArG,CAA9B;AACA,QAAMC,qBAAqB,GAAG,CAAC,EAAE,CAACZ,EAAE,GAAG,CAACE,GAAG,CAACK,QAAJ,IAAgB,EAAjB,EAAqBC,MAArB,CAA6BC,EAAD,IAAQ,CAACA,EAAE,CAACC,WAAxC,CAAN,MAAgE,IAAhE,IAAwEV,EAAE,KAAK,KAAK,CAApF,GAAwF,KAAK,CAA7F,GAAiGA,EAAE,CAACW,MAAtG,CAA/B;AACA,QAAME,eAAe,GAAG,CAAC,EAAE,CAACZ,EAAE,GAAGC,GAAG,CAACY,SAAV,MAAyB,IAAzB,IAAiCb,EAAE,KAAK,KAAK,CAA7C,GAAiD,KAAK,CAAtD,GAA0DA,EAAE,CAACU,MAA/D,CAAzB;;AACA,MAAI,CAACP,YAAD,IAAiBE,oBAArB,EAA2C;AACvC,UAAM,IAAIb,OAAO,CAACsB,aAAZ,CAA0B,qEAA1B,CAAN;AACH;;AACD,MAAI,CAACX,YAAD,IAAiB,CAACQ,qBAAlB,IAA2C,CAACC,eAAhD,EAAiE;AAC7D,UAAM,IAAIpB,OAAO,CAACsB,aAAZ,CAA0B,gGAA1B,CAAN;AACH;;AACD,MAAIX,YAAY,IAAI,CAACT,SAAS,CAACqB,aAAV,CAAwBtB,aAAa,CAACuB,kBAAd,CAAiCnB,OAAjC,EAA0CI,GAAG,CAACG,MAA9C,CAAxB,CAArB,EAAqG;AACjG,UAAM,IAAIZ,OAAO,CAACsB,aAAZ,CAA2B,iCAAgCb,GAAG,CAACG,MAAO,mDAAkDR,MAAM,CAACqB,IAAK,GAApI,CAAN;AACH;;AACD,MAAIhB,GAAG,CAACiB,IAAR,EAAc;AACV,QAAI,CAACf,YAAL,EAAmB;AACf,YAAM,IAAIX,OAAO,CAACsB,aAAZ,CAA0B,mEAA1B,CAAN;AACH;;AACD,QAAI,CAACb,GAAG,CAACiB,IAAJ,CAASC,IAAd,EAAoB;AAChB,YAAM,IAAI3B,OAAO,CAACsB,aAAZ,CAA0B,wCAA1B,CAAN;AACH,KAFD,MAGK;AACD,YAAMM,QAAQ,GAAG/B,IAAI,CAACgC,IAAL,CAAUpB,GAAG,CAACG,MAAd,EAAsBH,GAAG,CAACiB,IAAJ,CAASC,IAA/B,CAAjB;;AACA,UAAI,CAACzB,SAAS,CAACqB,aAAV,CAAwBtB,aAAa,CAACuB,kBAAd,CAAiCnB,OAAjC,EAA0CuB,QAA1C,CAAxB,CAAL,EAAmF;AAC/EzB,QAAAA,OAAO,CAAC2B,iBAAR,CAA0B,SAA1B,EAAsC,+CAA8C/B,GAAG,CAACgC,IAAJ,CAAStB,GAAG,CAACiB,IAAJ,CAASC,IAAlB,CAAwB,wBAAuB5B,GAAG,CAACgC,IAAJ,CAAStB,GAAG,CAACG,MAAb,CAAqB,GAAxJ;AACH;AACJ;AACJ;AACJ;;AACDlB,OAAO,CAACE,cAAR,GAAyBA,cAAzB","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.validateDeploy = void 0;\nconst path = require(\"path\");\nconst clc = require(\"cli-color\");\nconst error_1 = require(\"../../error\");\nconst projectPath_1 = require(\"../../projectPath\");\nconst fsutils_1 = require(\"../../fsutils\");\nconst utils_1 = require(\"../../utils\");\nfunction validateDeploy(deploy, options) {\n    var _a, _b, _c;\n    const cfg = deploy.config;\n    const hasPublicDir = !!cfg.public;\n    const hasAnyStaticRewrites = !!((_a = (cfg.rewrites || []).filter((rw) => rw.destination)) === null || _a === void 0 ? void 0 : _a.length);\n    const hasAnyDynamicRewrites = !!((_b = (cfg.rewrites || []).filter((rw) => !rw.destination)) === null || _b === void 0 ? void 0 : _b.length);\n    const hasAnyRedirects = !!((_c = cfg.redirects) === null || _c === void 0 ? void 0 : _c.length);\n    if (!hasPublicDir && hasAnyStaticRewrites) {\n        throw new error_1.FirebaseError('Must supply a \"public\" directory when using \"destination\" rewrites.');\n    }\n    if (!hasPublicDir && !hasAnyDynamicRewrites && !hasAnyRedirects) {\n        throw new error_1.FirebaseError('Must supply a \"public\" directory or at least one rewrite or redirect in each \"hosting\" config.');\n    }\n    if (hasPublicDir && !fsutils_1.dirExistsSync(projectPath_1.resolveProjectPath(options, cfg.public))) {\n        throw new error_1.FirebaseError(`Specified \"public\" directory \"${cfg.public}\" does not exist, can't deploy hosting to site \"${deploy.site}\"`);\n    }\n    if (cfg.i18n) {\n        if (!hasPublicDir) {\n            throw new error_1.FirebaseError('Must supply a \"public\" directory when using \"i18n\" configuration.');\n        }\n        if (!cfg.i18n.root) {\n            throw new error_1.FirebaseError('Must supply a \"root\" in \"i18n\" config.');\n        }\n        else {\n            const i18nPath = path.join(cfg.public, cfg.i18n.root);\n            if (!fsutils_1.dirExistsSync(projectPath_1.resolveProjectPath(options, i18nPath))) {\n                utils_1.logLabeledWarning(\"hosting\", `Couldn't find specified i18n root directory ${clc.bold(cfg.i18n.root)} in public directory ${clc.bold(cfg.public)}.`);\n            }\n        }\n    }\n}\nexports.validateDeploy = validateDeploy;\n"]},"metadata":{},"sourceType":"script"}