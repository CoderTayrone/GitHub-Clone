{"ast":null,"code":"\"use strict\";\n\nvar chalk = require('chalk');\n\nvar Table = require('cli-table');\n\nvar cardinal = require('cardinal');\n\nvar emoji = require('node-emoji');\n\nconst ansiEscapes = require('ansi-escapes');\n\nconst supportsHyperlinks = require('supports-hyperlinks');\n\nvar TABLE_CELL_SPLIT = '^*||*^';\nvar TABLE_ROW_WRAP = '*|*|*|*';\nvar TABLE_ROW_WRAP_REGEXP = new RegExp(escapeRegExp(TABLE_ROW_WRAP), 'g');\nvar COLON_REPLACER = '*#COLON|*';\nvar COLON_REPLACER_REGEXP = new RegExp(escapeRegExp(COLON_REPLACER), 'g');\nvar TAB_ALLOWED_CHARACTERS = ['\\t']; // HARD_RETURN holds a character sequence used to indicate text has a\n// hard (no-reflowing) line break.  Previously \\r and \\r\\n were turned\n// into \\n in marked's lexer- preprocessing step. So \\r is safe to use\n// to indicate a hard (non-reflowed) return.\n\nvar HARD_RETURN = '\\r',\n    HARD_RETURN_RE = new RegExp(HARD_RETURN),\n    HARD_RETURN_GFM_RE = new RegExp(HARD_RETURN + '|<br />');\nvar defaultOptions = {\n  code: chalk.yellow,\n  blockquote: chalk.gray.italic,\n  html: chalk.gray,\n  heading: chalk.green.bold,\n  firstHeading: chalk.magenta.underline.bold,\n  hr: chalk.reset,\n  listitem: chalk.reset,\n  list: list,\n  table: chalk.reset,\n  paragraph: chalk.reset,\n  strong: chalk.bold,\n  em: chalk.italic,\n  codespan: chalk.yellow,\n  del: chalk.dim.gray.strikethrough,\n  link: chalk.blue,\n  href: chalk.blue.underline,\n  text: identity,\n  unescape: true,\n  emoji: true,\n  width: 80,\n  showSectionPrefix: true,\n  reflowText: false,\n  tab: 4,\n  tableOptions: {}\n};\n\nfunction Renderer(options, highlightOptions) {\n  this.o = Object.assign({}, defaultOptions, options);\n  this.tab = sanitizeTab(this.o.tab, defaultOptions.tab);\n  this.tableSettings = this.o.tableOptions;\n  this.emoji = this.o.emoji ? insertEmojis : identity;\n  this.unescape = this.o.unescape ? unescapeEntities : identity;\n  this.highlightOptions = highlightOptions || {};\n  this.transform = compose(undoColon, this.unescape, this.emoji);\n}\n\n; // Compute length of str not including ANSI escape codes.\n// See http://en.wikipedia.org/wiki/ANSI_escape_code#graphics\n\nfunction textLength(str) {\n  return str.replace(/\\u001b\\[(?:\\d{1,3})(?:;\\d{1,3})*m/g, \"\").length;\n}\n\n;\nRenderer.prototype.textLength = textLength;\n\nfunction fixHardReturn(text, reflow) {\n  return reflow ? text.replace(HARD_RETURN, /\\n/g) : text;\n}\n\nRenderer.prototype.text = function (text) {\n  return this.o.text(text);\n};\n\nRenderer.prototype.code = function (code, lang, escaped) {\n  return section(indentify(this.tab, highlight(code, lang, this.o, this.highlightOptions)));\n};\n\nRenderer.prototype.blockquote = function (quote) {\n  return section(this.o.blockquote(indentify(this.tab, quote.trim())));\n};\n\nRenderer.prototype.html = function (html) {\n  return this.o.html(html);\n};\n\nRenderer.prototype.heading = function (text, level, raw) {\n  text = this.transform(text);\n  var prefix = this.o.showSectionPrefix ? new Array(level + 1).join('#') + ' ' : '';\n  text = prefix + text;\n\n  if (this.o.reflowText) {\n    text = reflowText(text, this.o.width, this.options.gfm);\n  }\n\n  return section(level === 1 ? this.o.firstHeading(text) : this.o.heading(text));\n};\n\nRenderer.prototype.hr = function () {\n  return section(this.o.hr(hr('-', this.o.reflowText && this.o.width)));\n};\n\nRenderer.prototype.list = function (body, ordered) {\n  body = this.o.list(body, ordered, this.tab);\n  return section(fixNestedLists(indentLines(this.tab, body), this.tab));\n};\n\nRenderer.prototype.listitem = function (text) {\n  var transform = compose(this.o.listitem, this.transform);\n  var isNested = text.indexOf('\\n') !== -1;\n  if (isNested) text = text.trim(); // Use BULLET_POINT as a marker for ordered or unordered list item\n\n  return '\\n' + BULLET_POINT + transform(text);\n};\n\nRenderer.prototype.checkbox = function (checked) {\n  return '[' + (checked ? \"X\" : \" \") + '] ';\n};\n\nRenderer.prototype.paragraph = function (text) {\n  var transform = compose(this.o.paragraph, this.transform);\n  text = transform(text);\n\n  if (this.o.reflowText) {\n    text = reflowText(text, this.o.width, this.options.gfm);\n  }\n\n  return section(text);\n};\n\nRenderer.prototype.table = function (header, body) {\n  var table = new Table(Object.assign({}, {\n    head: generateTableRow(header)[0]\n  }, this.tableSettings));\n  generateTableRow(body, this.transform).forEach(function (row) {\n    table.push(row);\n  });\n  return section(this.o.table(table.toString()));\n};\n\nRenderer.prototype.tablerow = function (content) {\n  return TABLE_ROW_WRAP + content + TABLE_ROW_WRAP + '\\n';\n};\n\nRenderer.prototype.tablecell = function (content, flags) {\n  return content + TABLE_CELL_SPLIT;\n}; // span level renderer\n\n\nRenderer.prototype.strong = function (text) {\n  return this.o.strong(text);\n};\n\nRenderer.prototype.em = function (text) {\n  text = fixHardReturn(text, this.o.reflowText);\n  return this.o.em(text);\n};\n\nRenderer.prototype.codespan = function (text) {\n  text = fixHardReturn(text, this.o.reflowText);\n  return this.o.codespan(text.replace(/:/g, COLON_REPLACER));\n};\n\nRenderer.prototype.br = function () {\n  return this.o.reflowText ? HARD_RETURN : '\\n';\n};\n\nRenderer.prototype.del = function (text) {\n  return this.o.del(text);\n};\n\nRenderer.prototype.link = function (href, title, text) {\n  if (this.options.sanitize) {\n    try {\n      var prot = decodeURIComponent(unescape(href)).replace(/[^\\w:]/g, '').toLowerCase();\n    } catch (e) {\n      return '';\n    }\n\n    if (prot.indexOf('javascript:') === 0) {\n      return '';\n    }\n  }\n\n  var hasText = text && text !== href;\n  var out = '';\n\n  if (supportsHyperlinks.stdout) {\n    let link = '';\n\n    if (text) {\n      link = this.o.href(this.emoji(text));\n    } else {\n      link = this.o.href(href);\n    }\n\n    out = ansiEscapes.link(link, href);\n  } else {\n    if (hasText) out += this.emoji(text) + ' (';\n    out += this.o.href(href);\n    if (hasText) out += ')';\n  }\n\n  return this.o.link(out);\n};\n\nRenderer.prototype.image = function (href, title, text) {\n  var out = '![' + text;\n  if (title) out += ' â€“ ' + title;\n  return out + '](' + href + ')\\n';\n};\n\nmodule.exports = Renderer; // Munge \\n's and spaces in \"text\" so that the number of\n// characters between \\n's is less than or equal to \"width\".\n\nfunction reflowText(text, width, gfm) {\n  // Hard break was inserted by Renderer.prototype.br or is\n  // <br /> when gfm is true\n  var splitRe = gfm ? HARD_RETURN_GFM_RE : HARD_RETURN_RE,\n      sections = text.split(splitRe),\n      reflowed = [];\n  sections.forEach(function (section) {\n    // Split the section by escape codes so that we can\n    // deal with them separately.\n    var fragments = section.split(/(\\u001b\\[(?:\\d{1,3})(?:;\\d{1,3})*m)/g);\n    var column = 0;\n    var currentLine = '';\n    var lastWasEscapeChar = false;\n\n    while (fragments.length) {\n      var fragment = fragments[0];\n\n      if (fragment === '') {\n        fragments.splice(0, 1);\n        lastWasEscapeChar = false;\n        continue;\n      } // This is an escape code - leave it whole and\n      // move to the next fragment.\n\n\n      if (!textLength(fragment)) {\n        currentLine += fragment;\n        fragments.splice(0, 1);\n        lastWasEscapeChar = true;\n        continue;\n      }\n\n      var words = fragment.split(/[ \\t\\n]+/);\n\n      for (var i = 0; i < words.length; i++) {\n        var word = words[i];\n        var addSpace = column != 0;\n        if (lastWasEscapeChar) addSpace = false; // If adding the new word overflows the required width\n\n        if (column + word.length + addSpace > width) {\n          if (word.length <= width) {\n            // If the new word is smaller than the required width\n            // just add it at the beginning of a new line\n            reflowed.push(currentLine);\n            currentLine = word;\n            column = word.length;\n          } else {\n            // If the new word is longer than the required width\n            // split this word into smaller parts.\n            var w = word.substr(0, width - column - addSpace);\n            if (addSpace) currentLine += ' ';\n            currentLine += w;\n            reflowed.push(currentLine);\n            currentLine = '';\n            column = 0;\n            word = word.substr(w.length);\n\n            while (word.length) {\n              var w = word.substr(0, width);\n              if (!w.length) break;\n\n              if (w.length < width) {\n                currentLine = w;\n                column = w.length;\n                break;\n              } else {\n                reflowed.push(w);\n                word = word.substr(width);\n              }\n            }\n          }\n        } else {\n          if (addSpace) {\n            currentLine += ' ';\n            column++;\n          }\n\n          currentLine += word;\n          column += word.length;\n        }\n\n        lastWasEscapeChar = false;\n      }\n\n      fragments.splice(0, 1);\n    }\n\n    if (textLength(currentLine)) reflowed.push(currentLine);\n  });\n  return reflowed.join('\\n');\n}\n\nfunction indentLines(indent, text) {\n  return text.replace(/(^|\\n)(.+)/g, '$1' + indent + '$2');\n}\n\nfunction indentify(indent, text) {\n  if (!text) return text;\n  return indent + text.split('\\n').join('\\n' + indent);\n}\n\nvar BULLET_POINT_REGEX = '\\\\*';\nvar NUMBERED_POINT_REGEX = '\\\\d+\\\\.';\nvar POINT_REGEX = '(?:' + [BULLET_POINT_REGEX, NUMBERED_POINT_REGEX].join('|') + ')'; // Prevents nested lists from joining their parent list's last line\n\nfunction fixNestedLists(body, indent) {\n  var regex = new RegExp('' + '(\\\\S(?: |  )?)' + // Last char of current point, plus one or two spaces\n  // to allow trailing spaces\n  '((?:' + indent + ')+)' + // Indentation of sub point\n  '(' + POINT_REGEX + '(?:.*)+)$', 'gm'); // Body of subpoint\n\n  return body.replace(regex, '$1\\n' + indent + '$2$3');\n}\n\nvar isPointedLine = function (line, indent) {\n  return line.match('^(?:' + indent + ')*' + POINT_REGEX);\n};\n\nfunction toSpaces(str) {\n  return ' '.repeat(str.length);\n}\n\nvar BULLET_POINT = '* ';\n\nfunction bulletPointLine(indent, line) {\n  return isPointedLine(line, indent) ? line : toSpaces(BULLET_POINT) + line;\n}\n\nfunction bulletPointLines(lines, indent) {\n  var transform = bulletPointLine.bind(null, indent);\n  return lines.split('\\n').filter(identity).map(transform).join('\\n');\n}\n\nvar numberedPoint = function (n) {\n  return n + '. ';\n};\n\nfunction numberedLine(indent, line, num) {\n  return isPointedLine(line, indent) ? {\n    num: num + 1,\n    line: line.replace(BULLET_POINT, numberedPoint(num + 1))\n  } : {\n    num: num,\n    line: toSpaces(numberedPoint(num)) + line\n  };\n}\n\nfunction numberedLines(lines, indent) {\n  var transform = numberedLine.bind(null, indent);\n  let num = 0;\n  return lines.split('\\n').filter(identity).map(line => {\n    const numbered = transform(line, num);\n    num = numbered.num;\n    return numbered.line;\n  }).join('\\n');\n}\n\nfunction list(body, ordered, indent) {\n  body = body.trim();\n  body = ordered ? numberedLines(body, indent) : bulletPointLines(body, indent);\n  return body;\n}\n\nfunction section(text) {\n  return text + '\\n\\n';\n}\n\nfunction highlight(code, lang, opts, hightlightOpts) {\n  if (!chalk.enabled) return code;\n  var style = opts.code;\n  code = fixHardReturn(code, opts.reflowText);\n\n  if (lang !== 'javascript' && lang !== 'js') {\n    return style(code);\n  }\n\n  try {\n    return cardinal.highlight(code, hightlightOpts);\n  } catch (e) {\n    return style(code);\n  }\n}\n\nfunction insertEmojis(text) {\n  return text.replace(/:([A-Za-z0-9_\\-\\+]+?):/g, function (emojiString) {\n    var emojiSign = emoji.get(emojiString);\n    if (!emojiSign) return emojiString;\n    return emojiSign + ' ';\n  });\n}\n\nfunction hr(inputHrStr, length) {\n  length = length || process.stdout.columns;\n  return new Array(length).join(inputHrStr);\n}\n\nfunction undoColon(str) {\n  return str.replace(COLON_REPLACER_REGEXP, ':');\n}\n\nfunction generateTableRow(text, escape) {\n  if (!text) return [];\n  escape = escape || identity;\n  var lines = escape(text).split('\\n');\n  var data = [];\n  lines.forEach(function (line) {\n    if (!line) return;\n    var parsed = line.replace(TABLE_ROW_WRAP_REGEXP, '').split(TABLE_CELL_SPLIT);\n    data.push(parsed.splice(0, parsed.length - 1));\n  });\n  return data;\n}\n\nfunction escapeRegExp(str) {\n  return str.replace(/[\\-\\[\\]\\/\\{\\}\\(\\)\\*\\+\\?\\.\\\\\\^\\$\\|]/g, \"\\\\$&\");\n}\n\nfunction unescapeEntities(html) {\n  return html.replace(/&amp;/g, '&').replace(/&lt;/g, '<').replace(/&gt;/g, '>').replace(/&quot;/g, '\"').replace(/&#39;/g, \"'\");\n}\n\nfunction identity(str) {\n  return str;\n}\n\nfunction compose() {\n  var funcs = arguments;\n  return function () {\n    var args = arguments;\n\n    for (var i = funcs.length; i-- > 0;) {\n      args = [funcs[i].apply(this, args)];\n    }\n\n    return args[0];\n  };\n}\n\nfunction isAllowedTabString(string) {\n  return TAB_ALLOWED_CHARACTERS.some(function (char) {\n    return string.match('^(' + char + ')+$');\n  });\n}\n\nfunction sanitizeTab(tab, fallbackTab) {\n  if (typeof tab === 'number') {\n    return new Array(tab + 1).join(' ');\n  } else if (typeof tab === 'string' && isAllowedTabString(tab)) {\n    return tab;\n  } else {\n    return new Array(fallbackTab + 1).join(' ');\n  }\n}","map":{"version":3,"sources":["/home/dev/Documentos/Projects/github-clone/node_modules/marked-terminal/index.js"],"names":["chalk","require","Table","cardinal","emoji","ansiEscapes","supportsHyperlinks","TABLE_CELL_SPLIT","TABLE_ROW_WRAP","TABLE_ROW_WRAP_REGEXP","RegExp","escapeRegExp","COLON_REPLACER","COLON_REPLACER_REGEXP","TAB_ALLOWED_CHARACTERS","HARD_RETURN","HARD_RETURN_RE","HARD_RETURN_GFM_RE","defaultOptions","code","yellow","blockquote","gray","italic","html","heading","green","bold","firstHeading","magenta","underline","hr","reset","listitem","list","table","paragraph","strong","em","codespan","del","dim","strikethrough","link","blue","href","text","identity","unescape","width","showSectionPrefix","reflowText","tab","tableOptions","Renderer","options","highlightOptions","o","Object","assign","sanitizeTab","tableSettings","insertEmojis","unescapeEntities","transform","compose","undoColon","textLength","str","replace","length","prototype","fixHardReturn","reflow","lang","escaped","section","indentify","highlight","quote","trim","level","raw","prefix","Array","join","gfm","body","ordered","fixNestedLists","indentLines","isNested","indexOf","BULLET_POINT","checkbox","checked","header","head","generateTableRow","forEach","row","push","toString","tablerow","content","tablecell","flags","br","title","sanitize","prot","decodeURIComponent","toLowerCase","e","hasText","out","stdout","image","module","exports","splitRe","sections","split","reflowed","fragments","column","currentLine","lastWasEscapeChar","fragment","splice","words","i","word","addSpace","w","substr","indent","BULLET_POINT_REGEX","NUMBERED_POINT_REGEX","POINT_REGEX","regex","isPointedLine","line","match","toSpaces","repeat","bulletPointLine","bulletPointLines","lines","bind","filter","map","numberedPoint","n","numberedLine","num","numberedLines","numbered","opts","hightlightOpts","enabled","style","emojiString","emojiSign","get","inputHrStr","process","columns","escape","data","parsed","funcs","arguments","args","apply","isAllowedTabString","string","some","char","fallbackTab"],"mappings":"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","sourcesContent":["\"use strict\";\n\nvar chalk = require('chalk');\nvar Table = require('cli-table');\nvar cardinal = require('cardinal');\nvar emoji = require('node-emoji');\nconst ansiEscapes = require('ansi-escapes');\nconst supportsHyperlinks = require('supports-hyperlinks');\n\n\nvar TABLE_CELL_SPLIT = '^*||*^';\nvar TABLE_ROW_WRAP = '*|*|*|*';\nvar TABLE_ROW_WRAP_REGEXP = new RegExp(escapeRegExp(TABLE_ROW_WRAP), 'g');\n\nvar COLON_REPLACER = '*#COLON|*';\nvar COLON_REPLACER_REGEXP = new RegExp(escapeRegExp(COLON_REPLACER), 'g');\n\nvar TAB_ALLOWED_CHARACTERS = ['\\t'];\n\n// HARD_RETURN holds a character sequence used to indicate text has a\n// hard (no-reflowing) line break.  Previously \\r and \\r\\n were turned\n// into \\n in marked's lexer- preprocessing step. So \\r is safe to use\n// to indicate a hard (non-reflowed) return.\nvar HARD_RETURN = '\\r',\n    HARD_RETURN_RE = new RegExp(HARD_RETURN),\n    HARD_RETURN_GFM_RE = new RegExp(HARD_RETURN + '|<br />');\n\nvar defaultOptions = {\n  code: chalk.yellow,\n  blockquote: chalk.gray.italic,\n  html: chalk.gray,\n  heading: chalk.green.bold,\n  firstHeading: chalk.magenta.underline.bold,\n  hr: chalk.reset,\n  listitem: chalk.reset,\n  list: list,\n  table: chalk.reset,\n  paragraph: chalk.reset,\n  strong: chalk.bold,\n  em: chalk.italic,\n  codespan: chalk.yellow,\n  del: chalk.dim.gray.strikethrough,\n  link: chalk.blue,\n  href: chalk.blue.underline,\n  text: identity,\n  unescape: true,\n  emoji: true,\n  width: 80,\n  showSectionPrefix: true,\n  reflowText: false,\n  tab: 4,\n  tableOptions: {}\n};\n\nfunction Renderer(options, highlightOptions) {\n  this.o = Object.assign({}, defaultOptions, options);\n  this.tab = sanitizeTab(this.o.tab, defaultOptions.tab);\n  this.tableSettings = this.o.tableOptions;\n  this.emoji = this.o.emoji ? insertEmojis : identity;\n  this.unescape = this.o.unescape ? unescapeEntities : identity;\n  this.highlightOptions = highlightOptions || {};\n\n  this.transform = compose(undoColon, this.unescape, this.emoji);\n};\n\n// Compute length of str not including ANSI escape codes.\n// See http://en.wikipedia.org/wiki/ANSI_escape_code#graphics\nfunction textLength(str) {\n  return str.replace(/\\u001b\\[(?:\\d{1,3})(?:;\\d{1,3})*m/g, \"\").length;\n};\n\nRenderer.prototype.textLength = textLength;\n\nfunction fixHardReturn(text, reflow) {\n  return reflow ? text.replace(HARD_RETURN, /\\n/g) : text;\n}\n\nRenderer.prototype.text = function (text) {\n  return this.o.text(text);\n};\n\nRenderer.prototype.code = function(code, lang, escaped) {\n  return section(indentify(\n    this.tab,\n    highlight(code, lang, this.o, this.highlightOptions)\n  ));\n};\n\nRenderer.prototype.blockquote = function(quote) {\n  return section(this.o.blockquote(indentify(this.tab, quote.trim())));\n};\n\nRenderer.prototype.html = function(html) {\n  return this.o.html(html);\n};\n\nRenderer.prototype.heading = function(text, level, raw) {\n  text = this.transform(text);\n\n  var prefix = this.o.showSectionPrefix ?\n    (new Array(level + 1)).join('#')+' ' : '';\n  text = prefix + text;\n  if (this.o.reflowText) {\n    text = reflowText(text, this.o.width, this.options.gfm);\n  }\n  return section(level === 1 ? this.o.firstHeading(text) : this.o.heading(text));\n};\n\nRenderer.prototype.hr = function() {\n  return section(this.o.hr(hr('-', this.o.reflowText && this.o.width)));\n};\n\nRenderer.prototype.list = function(body, ordered) {\n  body = this.o.list(body, ordered, this.tab);\n  return section(fixNestedLists(indentLines(this.tab, body), this.tab));\n};\n\nRenderer.prototype.listitem = function(text) {\n  var transform = compose(this.o.listitem, this.transform);\n  var isNested = text.indexOf('\\n') !== -1;\n  if (isNested) text = text.trim();\n\n  // Use BULLET_POINT as a marker for ordered or unordered list item\n  return '\\n' + BULLET_POINT + transform(text);\n};\n\nRenderer.prototype.checkbox = function(checked) {\n  return '[' + (checked ? \"X\" : \" \") + '] ';\n};\n\nRenderer.prototype.paragraph = function(text) {\n  var transform = compose(this.o.paragraph, this.transform);\n  text = transform(text);\n  if (this.o.reflowText) {\n    text = reflowText(text, this.o.width, this.options.gfm);\n  }\n  return section(text);\n};\n\nRenderer.prototype.table = function(header, body) {\n  var table = new Table(Object.assign({}, {\n      head: generateTableRow(header)[0]\n  }, this.tableSettings));\n\n  generateTableRow(body, this.transform).forEach(function (row) {\n    table.push(row);\n  });\n  return section(this.o.table(table.toString()));\n};\n\nRenderer.prototype.tablerow = function(content) {\n  return TABLE_ROW_WRAP + content + TABLE_ROW_WRAP + '\\n';\n};\n\nRenderer.prototype.tablecell = function(content, flags) {\n  return content + TABLE_CELL_SPLIT;\n};\n\n// span level renderer\nRenderer.prototype.strong = function(text) {\n  return this.o.strong(text);\n};\n\nRenderer.prototype.em = function(text) {\n  text = fixHardReturn(text, this.o.reflowText);\n  return this.o.em(text);\n};\n\nRenderer.prototype.codespan = function(text) {\n  text = fixHardReturn(text, this.o.reflowText);\n  return this.o.codespan(text.replace(/:/g, COLON_REPLACER));\n};\n\nRenderer.prototype.br = function() {\n  return this.o.reflowText ? HARD_RETURN : '\\n';\n};\n\nRenderer.prototype.del = function(text) {\n  return this.o.del(text);\n};\n\nRenderer.prototype.link = function(href, title, text) {\n  if (this.options.sanitize) {\n    try {\n      var prot = decodeURIComponent(unescape(href))\n        .replace(/[^\\w:]/g, '')\n        .toLowerCase();\n    } catch (e) {\n      return '';\n    }\n    if (prot.indexOf('javascript:') === 0) {\n      return '';\n    }\n  }\n\n  var hasText = text && text !== href;\n\n  var out = '';\n\n  if (supportsHyperlinks.stdout) {\n    let link = ''\n    if(text){\n      link = this.o.href(this.emoji(text))\n    }else{\n      link = this.o.href(href)\n    }\n    out = ansiEscapes.link(link, href);\n  }else{\n    if (hasText) out += this.emoji(text) + ' (';\n    out +=  this.o.href(href);\n    if (hasText) out += ')';\n  }\n  return this.o.link(out);\n};\n\nRenderer.prototype.image = function(href, title, text) {\n  var out = '!['+text;\n  if (title) out += ' â€“ ' + title;\n  return out + '](' + href + ')\\n';\n};\n\nmodule.exports = Renderer;\n\n// Munge \\n's and spaces in \"text\" so that the number of\n// characters between \\n's is less than or equal to \"width\".\nfunction reflowText (text, width, gfm) {\n  // Hard break was inserted by Renderer.prototype.br or is\n  // <br /> when gfm is true\n  var splitRe = gfm ? HARD_RETURN_GFM_RE : HARD_RETURN_RE,\n      sections = text.split(splitRe),\n      reflowed = [];\n\n  sections.forEach(function (section) {\n    // Split the section by escape codes so that we can\n    // deal with them separately.\n    var fragments = section.split(/(\\u001b\\[(?:\\d{1,3})(?:;\\d{1,3})*m)/g);\n    var column = 0;\n    var currentLine = '';\n    var lastWasEscapeChar = false;\n\n    while (fragments.length) {\n      var fragment = fragments[0];\n\n      if (fragment === '') {\n        fragments.splice(0, 1);\n        lastWasEscapeChar = false;\n        continue;\n      }\n\n      // This is an escape code - leave it whole and\n      // move to the next fragment.\n      if (!textLength(fragment)) {\n        currentLine += fragment;\n        fragments.splice(0, 1);\n        lastWasEscapeChar = true;\n        continue;\n      }\n\n      var words = fragment.split(/[ \\t\\n]+/);\n\n      for (var i = 0; i < words.length; i++) {\n        var word = words[i];\n        var addSpace = column != 0;\n        if (lastWasEscapeChar) addSpace = false;\n\n        // If adding the new word overflows the required width\n        if (column + word.length + addSpace > width) {\n\n          if (word.length <= width) {\n            // If the new word is smaller than the required width\n            // just add it at the beginning of a new line\n            reflowed.push(currentLine);\n            currentLine = word;\n            column = word.length;\n          } else {\n            // If the new word is longer than the required width\n            // split this word into smaller parts.\n            var w = word.substr(0, width - column - addSpace);\n            if (addSpace) currentLine += ' ';\n            currentLine += w;\n            reflowed.push(currentLine);\n            currentLine = '';\n            column = 0;\n\n            word = word.substr(w.length);\n            while (word.length) {\n              var w = word.substr(0, width);\n\n              if (!w.length) break;\n\n              if (w.length < width) {\n                currentLine = w;\n                column = w.length;\n                break;\n              } else {\n                reflowed.push(w);\n                word = word.substr(width);\n              }\n            }\n          }\n        } else {\n          if (addSpace) {\n            currentLine += ' ';\n            column++;\n          }\n\n          currentLine += word;\n          column += word.length;\n        }\n\n        lastWasEscapeChar = false;\n      }\n\n      fragments.splice(0, 1);\n    }\n\n    if (textLength(currentLine)) reflowed.push(currentLine);\n  });\n\n  return reflowed.join('\\n');\n}\n\nfunction indentLines (indent, text) {\n  return text.replace(/(^|\\n)(.+)/g, '$1' + indent + '$2');\n}\n\nfunction indentify(indent, text) {\n  if (!text) return text;\n  return indent + text.split('\\n').join('\\n' + indent);\n}\n\nvar BULLET_POINT_REGEX = '\\\\*';\nvar NUMBERED_POINT_REGEX = '\\\\d+\\\\.';\nvar POINT_REGEX = '(?:' + [BULLET_POINT_REGEX, NUMBERED_POINT_REGEX].join('|') + ')';\n\n// Prevents nested lists from joining their parent list's last line\nfunction fixNestedLists (body, indent) {\n  var regex = new RegExp('' +\n    '(\\\\S(?: |  )?)' + // Last char of current point, plus one or two spaces\n                       // to allow trailing spaces\n    '((?:' + indent + ')+)' + // Indentation of sub point\n    '(' + POINT_REGEX + '(?:.*)+)$', 'gm'); // Body of subpoint\n  return body.replace(regex, '$1\\n' + indent + '$2$3');\n}\n\nvar isPointedLine = function (line, indent) {\n  return line.match('^(?:' + indent + ')*' + POINT_REGEX);\n}\n\nfunction toSpaces (str) {\n  return (' ').repeat(str.length);\n}\n\nvar BULLET_POINT = '* ';\nfunction bulletPointLine (indent, line) {\n  return isPointedLine(line, indent) ? line : toSpaces(BULLET_POINT) + line;\n}\n\nfunction bulletPointLines (lines, indent) {\n  var transform = bulletPointLine.bind(null, indent);\n  return lines.split('\\n')\n    .filter(identity)\n    .map(transform)\n    .join('\\n');\n}\n\nvar numberedPoint = function (n) {\n  return  n + '. ';\n};\nfunction numberedLine (indent, line, num) {\n  return isPointedLine(line, indent) ? {\n    num: num+1,\n    line: line.replace(BULLET_POINT, numberedPoint(num+1))\n  } : {\n    num: num,\n    line: toSpaces(numberedPoint(num)) + line\n  };\n}\n\nfunction numberedLines (lines, indent) {\n  var transform = numberedLine.bind(null, indent);\n  let num = 0;\n  return lines.split('\\n')\n    .filter(identity)\n    .map((line) => {\n\n      const numbered = transform(line, num);\n      num = numbered.num;\n\n      return numbered.line;\n    })\n    .join('\\n');\n}\n\nfunction list(body, ordered, indent) {\n  body = body.trim();\n  body = ordered ? numberedLines(body, indent) : bulletPointLines(body, indent);\n  return body;\n}\n\nfunction section (text) {\n  return text + '\\n\\n';\n}\n\nfunction highlight(code, lang, opts, hightlightOpts) {\n  if (!chalk.enabled) return code;\n\n  var style = opts.code;\n\n  code = fixHardReturn(code, opts.reflowText);\n  if (lang !== 'javascript' && lang !== 'js') {\n    return style(code);\n  }\n\n  try {\n    return cardinal.highlight(code, hightlightOpts);\n  } catch (e) {\n    return style(code);\n  }\n}\n\nfunction insertEmojis(text) {\n  return text.replace(/:([A-Za-z0-9_\\-\\+]+?):/g, function (emojiString) {\n    var emojiSign = emoji.get(emojiString);\n    if (!emojiSign) return emojiString;\n    return emojiSign + ' ';\n  });\n}\n\nfunction hr(inputHrStr, length) {\n  length = length || process.stdout.columns;\n  return (new Array(length)).join(inputHrStr);\n}\n\nfunction undoColon (str) {\n  return str.replace(COLON_REPLACER_REGEXP, ':');\n}\n\nfunction generateTableRow(text, escape) {\n  if (!text) return [];\n  escape = escape || identity;\n  var lines = escape(text).split('\\n');\n\n  var data = [];\n  lines.forEach(function (line) {\n    if (!line) return;\n    var parsed = line.replace(TABLE_ROW_WRAP_REGEXP, '').split(TABLE_CELL_SPLIT);\n\n    data.push(parsed.splice(0, parsed.length - 1));\n  });\n  return data;\n}\n\nfunction escapeRegExp(str) {\n  return str.replace(/[\\-\\[\\]\\/\\{\\}\\(\\)\\*\\+\\?\\.\\\\\\^\\$\\|]/g, \"\\\\$&\");\n}\n\nfunction unescapeEntities(html) {\n  return html\n      .replace(/&amp;/g, '&')\n      .replace(/&lt;/g, '<')\n      .replace(/&gt;/g, '>')\n      .replace(/&quot;/g, '\"')\n      .replace(/&#39;/g, \"'\");\n}\n\nfunction identity (str) {\n  return str;\n}\n\nfunction compose () {\n  var funcs = arguments;\n  return function() {\n    var args = arguments;\n    for (var i = funcs.length; i-- > 0;) {\n      args = [funcs[i].apply(this, args)];\n    }\n    return args[0];\n  };\n}\n\nfunction isAllowedTabString (string) {\n  return TAB_ALLOWED_CHARACTERS.some(function (char) {\n    return string.match('^('+char+')+$');\n  });\n}\n\nfunction sanitizeTab (tab, fallbackTab) {\n  if (typeof tab === 'number') {\n    return (new Array(tab + 1)).join(' ');\n  } else if (typeof tab === 'string' && isAllowedTabString(tab)) {\n    return tab;\n  } else {\n    return (new Array(fallbackTab + 1)).join(' ');\n  }\n}\n"]},"metadata":{},"sourceType":"script"}