{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.doSetup = void 0;\n\nconst logger_1 = require(\"../../../logger\");\n\nconst apiEnabled = require(\"../../../ensureApiEnabled\");\n\nconst ensureCloudResourceLocation_1 = require(\"../../../ensureCloudResourceLocation\");\n\nconst requirePermissions_1 = require(\"../../../requirePermissions\");\n\nconst checkDatabaseType_1 = require(\"../../../firestore/checkDatabaseType\");\n\nconst rules = require(\"./rules\");\n\nconst indexes = require(\"./indexes\");\n\nconst error_1 = require(\"../../../error\");\n\nconst clc = require(\"cli-color\");\n\nasync function checkProjectSetup(setup, config, options) {\n  const firestoreUnusedError = new error_1.FirebaseError(`It looks like you haven't used Cloud Firestore in this project before. Go to ${clc.bold.underline(`https://console.firebase.google.com/project/${setup.projectId}/firestore`)} to create your Cloud Firestore database.`, {\n    exit: 1\n  });\n  const isFirestoreEnabled = await apiEnabled.check(setup.projectId, \"firestore.googleapis.com\", \"\", true);\n\n  if (!isFirestoreEnabled) {\n    throw firestoreUnusedError;\n  }\n\n  const dbType = await checkDatabaseType_1.checkDatabaseType(setup.projectId);\n  logger_1.logger.debug(`database_type: ${dbType}`);\n\n  if (!dbType) {\n    throw firestoreUnusedError;\n  } else if (dbType !== \"CLOUD_FIRESTORE\") {\n    throw new error_1.FirebaseError(`It looks like this project is using Cloud Datastore or Cloud Firestore in Datastore mode. The Firebase CLI can only manage projects using Cloud Firestore in Native mode. For more information, visit https://cloud.google.com/datastore/docs/firestore-or-datastore`, {\n      exit: 1\n    });\n  }\n\n  ensureCloudResourceLocation_1.ensureLocationSet(setup.projectLocation, \"Cloud Firestore\");\n  await requirePermissions_1.requirePermissions(Object.assign(Object.assign({}, options), {\n    project: setup.projectId\n  }));\n}\n\nasync function doSetup(setup, config, options) {\n  if (setup.projectId) {\n    await checkProjectSetup(setup, config, options);\n  }\n\n  setup.config.firestore = {};\n  await rules.initRules(setup, config);\n  await indexes.initIndexes(setup, config);\n}\n\nexports.doSetup = doSetup;","map":{"version":3,"sources":["/home/dev/Documentos/Projects/github-clone/node_modules/firebase-tools/lib/init/features/firestore/index.js"],"names":["Object","defineProperty","exports","value","doSetup","logger_1","require","apiEnabled","ensureCloudResourceLocation_1","requirePermissions_1","checkDatabaseType_1","rules","indexes","error_1","clc","checkProjectSetup","setup","config","options","firestoreUnusedError","FirebaseError","bold","underline","projectId","exit","isFirestoreEnabled","check","dbType","checkDatabaseType","logger","debug","ensureLocationSet","projectLocation","requirePermissions","assign","project","firestore","initRules","initIndexes"],"mappings":"AAAA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;AACAD,OAAO,CAACE,OAAR,GAAkB,KAAK,CAAvB;;AACA,MAAMC,QAAQ,GAAGC,OAAO,CAAC,iBAAD,CAAxB;;AACA,MAAMC,UAAU,GAAGD,OAAO,CAAC,2BAAD,CAA1B;;AACA,MAAME,6BAA6B,GAAGF,OAAO,CAAC,sCAAD,CAA7C;;AACA,MAAMG,oBAAoB,GAAGH,OAAO,CAAC,6BAAD,CAApC;;AACA,MAAMI,mBAAmB,GAAGJ,OAAO,CAAC,sCAAD,CAAnC;;AACA,MAAMK,KAAK,GAAGL,OAAO,CAAC,SAAD,CAArB;;AACA,MAAMM,OAAO,GAAGN,OAAO,CAAC,WAAD,CAAvB;;AACA,MAAMO,OAAO,GAAGP,OAAO,CAAC,gBAAD,CAAvB;;AACA,MAAMQ,GAAG,GAAGR,OAAO,CAAC,WAAD,CAAnB;;AACA,eAAeS,iBAAf,CAAiCC,KAAjC,EAAwCC,MAAxC,EAAgDC,OAAhD,EAAyD;AACrD,QAAMC,oBAAoB,GAAG,IAAIN,OAAO,CAACO,aAAZ,CAA2B,gFAA+EN,GAAG,CAACO,IAAJ,CAASC,SAAT,CAAoB,+CAA8CN,KAAK,CAACO,SAAU,YAAlF,CAA+F,2CAAzM,EAAqP;AAAEC,IAAAA,IAAI,EAAE;AAAR,GAArP,CAA7B;AACA,QAAMC,kBAAkB,GAAG,MAAMlB,UAAU,CAACmB,KAAX,CAAiBV,KAAK,CAACO,SAAvB,EAAkC,0BAAlC,EAA8D,EAA9D,EAAkE,IAAlE,CAAjC;;AACA,MAAI,CAACE,kBAAL,EAAyB;AACrB,UAAMN,oBAAN;AACH;;AACD,QAAMQ,MAAM,GAAG,MAAMjB,mBAAmB,CAACkB,iBAApB,CAAsCZ,KAAK,CAACO,SAA5C,CAArB;AACAlB,EAAAA,QAAQ,CAACwB,MAAT,CAAgBC,KAAhB,CAAuB,kBAAiBH,MAAO,EAA/C;;AACA,MAAI,CAACA,MAAL,EAAa;AACT,UAAMR,oBAAN;AACH,GAFD,MAGK,IAAIQ,MAAM,KAAK,iBAAf,EAAkC;AACnC,UAAM,IAAId,OAAO,CAACO,aAAZ,CAA2B,sQAA3B,EAAkS;AAAEI,MAAAA,IAAI,EAAE;AAAR,KAAlS,CAAN;AACH;;AACDhB,EAAAA,6BAA6B,CAACuB,iBAA9B,CAAgDf,KAAK,CAACgB,eAAtD,EAAuE,iBAAvE;AACA,QAAMvB,oBAAoB,CAACwB,kBAArB,CAAwCjC,MAAM,CAACkC,MAAP,CAAclC,MAAM,CAACkC,MAAP,CAAc,EAAd,EAAkBhB,OAAlB,CAAd,EAA0C;AAAEiB,IAAAA,OAAO,EAAEnB,KAAK,CAACO;AAAjB,GAA1C,CAAxC,CAAN;AACH;;AACD,eAAenB,OAAf,CAAuBY,KAAvB,EAA8BC,MAA9B,EAAsCC,OAAtC,EAA+C;AAC3C,MAAIF,KAAK,CAACO,SAAV,EAAqB;AACjB,UAAMR,iBAAiB,CAACC,KAAD,EAAQC,MAAR,EAAgBC,OAAhB,CAAvB;AACH;;AACDF,EAAAA,KAAK,CAACC,MAAN,CAAamB,SAAb,GAAyB,EAAzB;AACA,QAAMzB,KAAK,CAAC0B,SAAN,CAAgBrB,KAAhB,EAAuBC,MAAvB,CAAN;AACA,QAAML,OAAO,CAAC0B,WAAR,CAAoBtB,KAApB,EAA2BC,MAA3B,CAAN;AACH;;AACDf,OAAO,CAACE,OAAR,GAAkBA,OAAlB","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.doSetup = void 0;\nconst logger_1 = require(\"../../../logger\");\nconst apiEnabled = require(\"../../../ensureApiEnabled\");\nconst ensureCloudResourceLocation_1 = require(\"../../../ensureCloudResourceLocation\");\nconst requirePermissions_1 = require(\"../../../requirePermissions\");\nconst checkDatabaseType_1 = require(\"../../../firestore/checkDatabaseType\");\nconst rules = require(\"./rules\");\nconst indexes = require(\"./indexes\");\nconst error_1 = require(\"../../../error\");\nconst clc = require(\"cli-color\");\nasync function checkProjectSetup(setup, config, options) {\n    const firestoreUnusedError = new error_1.FirebaseError(`It looks like you haven't used Cloud Firestore in this project before. Go to ${clc.bold.underline(`https://console.firebase.google.com/project/${setup.projectId}/firestore`)} to create your Cloud Firestore database.`, { exit: 1 });\n    const isFirestoreEnabled = await apiEnabled.check(setup.projectId, \"firestore.googleapis.com\", \"\", true);\n    if (!isFirestoreEnabled) {\n        throw firestoreUnusedError;\n    }\n    const dbType = await checkDatabaseType_1.checkDatabaseType(setup.projectId);\n    logger_1.logger.debug(`database_type: ${dbType}`);\n    if (!dbType) {\n        throw firestoreUnusedError;\n    }\n    else if (dbType !== \"CLOUD_FIRESTORE\") {\n        throw new error_1.FirebaseError(`It looks like this project is using Cloud Datastore or Cloud Firestore in Datastore mode. The Firebase CLI can only manage projects using Cloud Firestore in Native mode. For more information, visit https://cloud.google.com/datastore/docs/firestore-or-datastore`, { exit: 1 });\n    }\n    ensureCloudResourceLocation_1.ensureLocationSet(setup.projectLocation, \"Cloud Firestore\");\n    await requirePermissions_1.requirePermissions(Object.assign(Object.assign({}, options), { project: setup.projectId }));\n}\nasync function doSetup(setup, config, options) {\n    if (setup.projectId) {\n        await checkProjectSetup(setup, config, options);\n    }\n    setup.config.firestore = {};\n    await rules.initRules(setup, config);\n    await indexes.initIndexes(setup, config);\n}\nexports.doSetup = doSetup;\n"]},"metadata":{},"sourceType":"script"}