{"ast":null,"code":"'use strict';\n/**\n * `input` type prompt\n */\n\nvar Input = require('./input');\n/**\n * Extention of the Input prompt specifically for use with number inputs.\n */\n\n\nclass NumberPrompt extends Input {\n  filterInput(input) {\n    if (input && typeof input === 'string') {\n      input = input.trim(); // Match a number in the input\n\n      let numberMatch = input.match(/(^-?\\d+|^\\d+\\.\\d*|^\\d*\\.\\d+)(e\\d+)?$/); // If a number is found, return that input.\n\n      if (numberMatch) {\n        return Number(numberMatch[0]);\n      }\n    } // If the input was invalid return the default value.\n\n\n    return this.opt.default == null ? NaN : this.opt.default;\n  }\n\n}\n\nmodule.exports = NumberPrompt;","map":{"version":3,"sources":["/home/dev/Documentos/Projects/github-clone/node_modules/inquirer/lib/prompts/number.js"],"names":["Input","require","NumberPrompt","filterInput","input","trim","numberMatch","match","Number","opt","default","NaN","module","exports"],"mappings":"AAAA;AACA;AACA;AACA;;AAEA,IAAIA,KAAK,GAAGC,OAAO,CAAC,SAAD,CAAnB;AAEA;AACA;AACA;;;AAEA,MAAMC,YAAN,SAA2BF,KAA3B,CAAiC;AAC/BG,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,QAAIA,KAAK,IAAI,OAAOA,KAAP,KAAiB,QAA9B,EAAwC;AACtCA,MAAAA,KAAK,GAAGA,KAAK,CAACC,IAAN,EAAR,CADsC,CAEtC;;AACA,UAAIC,WAAW,GAAGF,KAAK,CAACG,KAAN,CAAY,sCAAZ,CAAlB,CAHsC,CAItC;;AACA,UAAID,WAAJ,EAAiB;AACf,eAAOE,MAAM,CAACF,WAAW,CAAC,CAAD,CAAZ,CAAb;AACD;AACF,KATgB,CAWjB;;;AACA,WAAO,KAAKG,GAAL,CAASC,OAAT,IAAoB,IAApB,GAA2BC,GAA3B,GAAiC,KAAKF,GAAL,CAASC,OAAjD;AACD;;AAd8B;;AAiBjCE,MAAM,CAACC,OAAP,GAAiBX,YAAjB","sourcesContent":["'use strict';\n/**\n * `input` type prompt\n */\n\nvar Input = require('./input');\n\n/**\n * Extention of the Input prompt specifically for use with number inputs.\n */\n\nclass NumberPrompt extends Input {\n  filterInput(input) {\n    if (input && typeof input === 'string') {\n      input = input.trim();\n      // Match a number in the input\n      let numberMatch = input.match(/(^-?\\d+|^\\d+\\.\\d*|^\\d*\\.\\d+)(e\\d+)?$/);\n      // If a number is found, return that input.\n      if (numberMatch) {\n        return Number(numberMatch[0]);\n      }\n    }\n\n    // If the input was invalid return the default value.\n    return this.opt.default == null ? NaN : this.opt.default;\n  }\n}\n\nmodule.exports = NumberPrompt;\n"]},"metadata":{},"sourceType":"script"}