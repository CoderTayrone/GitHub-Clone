{"ast":null,"code":"// Thanks\n// @rauchma http://www.2ality.com/2014/01/efficient-string-repeat.html\n// @mathiasbynens https://github.com/mathiasbynens/String.prototype.repeat/blob/4a4b567def/repeat.js\n\"use strict\";\n\nvar value = require(\"../../../object/valid-value\"),\n    toInteger = require(\"../../../number/to-integer\");\n\nmodule.exports = function (count) {\n  var str = String(value(this)),\n      result;\n  count = toInteger(count);\n  if (count < 0) throw new RangeError(\"Count must be >= 0\");\n  if (!isFinite(count)) throw new RangeError(\"Count must be < ∞\");\n  result = \"\";\n\n  while (count) {\n    if (count % 2) result += str;\n    if (count > 1) str += str; // eslint-disable-next-line no-bitwise\n\n    count >>= 1;\n  }\n\n  return result;\n};","map":{"version":3,"sources":["/home/dev/Documentos/Projects/github-clone/node_modules/es5-ext/string/#/repeat/shim.js"],"names":["value","require","toInteger","module","exports","count","str","String","result","RangeError","isFinite"],"mappings":"AAAA;AACA;AACA;AAEA;;AAEA,IAAIA,KAAK,GAAOC,OAAO,CAAC,6BAAD,CAAvB;AAAA,IACIC,SAAS,GAAGD,OAAO,CAAC,4BAAD,CADvB;;AAGAE,MAAM,CAACC,OAAP,GAAiB,UAAUC,KAAV,EAAiB;AACjC,MAAIC,GAAG,GAAGC,MAAM,CAACP,KAAK,CAAC,IAAD,CAAN,CAAhB;AAAA,MAA+BQ,MAA/B;AACAH,EAAAA,KAAK,GAAGH,SAAS,CAACG,KAAD,CAAjB;AACA,MAAIA,KAAK,GAAG,CAAZ,EAAe,MAAM,IAAII,UAAJ,CAAe,oBAAf,CAAN;AACf,MAAI,CAACC,QAAQ,CAACL,KAAD,CAAb,EAAsB,MAAM,IAAII,UAAJ,CAAe,mBAAf,CAAN;AAEtBD,EAAAA,MAAM,GAAG,EAAT;;AACA,SAAOH,KAAP,EAAc;AACb,QAAIA,KAAK,GAAG,CAAZ,EAAeG,MAAM,IAAIF,GAAV;AACf,QAAID,KAAK,GAAG,CAAZ,EAAeC,GAAG,IAAIA,GAAP,CAFF,CAGb;;AACAD,IAAAA,KAAK,KAAK,CAAV;AACA;;AACD,SAAOG,MAAP;AACA,CAdD","sourcesContent":["// Thanks\n// @rauchma http://www.2ality.com/2014/01/efficient-string-repeat.html\n// @mathiasbynens https://github.com/mathiasbynens/String.prototype.repeat/blob/4a4b567def/repeat.js\n\n\"use strict\";\n\nvar value     = require(\"../../../object/valid-value\")\n  , toInteger = require(\"../../../number/to-integer\");\n\nmodule.exports = function (count) {\n\tvar str = String(value(this)), result;\n\tcount = toInteger(count);\n\tif (count < 0) throw new RangeError(\"Count must be >= 0\");\n\tif (!isFinite(count)) throw new RangeError(\"Count must be < ∞\");\n\n\tresult = \"\";\n\twhile (count) {\n\t\tif (count % 2) result += str;\n\t\tif (count > 1) str += str;\n\t\t// eslint-disable-next-line no-bitwise\n\t\tcount >>= 1;\n\t}\n\treturn result;\n};\n"]},"metadata":{},"sourceType":"script"}