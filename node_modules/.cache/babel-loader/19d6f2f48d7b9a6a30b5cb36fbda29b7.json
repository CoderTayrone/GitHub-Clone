{"ast":null,"code":"\"use strict\";\n/* CSI - control sequence introducer */\n\n/* SGR - set graphic rendition */\n\nvar assign = require(\"es5-ext/object/assign\"),\n    includes = require(\"es5-ext/string/#/contains\"),\n    forOwn = require(\"es5-ext/object/for-each\"),\n    onlyKey = require(\"es5-ext/object/first-key\"),\n    forEachRight = require(\"es5-ext/array/#/for-each-right\"),\n    uniq = require(\"es5-ext/array/#/uniq.js\");\n\nvar CSI = \"\\x1b[\";\n\nvar sgr = function (code) {\n  return CSI + code + \"m\";\n};\n\nsgr.CSI = CSI;\nvar mods = assign({\n  // Style\n  bold: {\n    _bold: [1, 22]\n  },\n  italic: {\n    _italic: [3, 23]\n  },\n  underline: {\n    _underline: [4, 24]\n  },\n  blink: {\n    _blink: [5, 25]\n  },\n  inverse: {\n    _inverse: [7, 27]\n  },\n  strike: {\n    _strike: [9, 29]\n  } // Color\n\n}, [\"black\", \"red\", \"green\", \"yellow\", \"blue\", \"magenta\", \"cyan\", \"white\"].reduce(function (obj, color, index) {\n  // foreground\n  obj[color] = {\n    _fg: [30 + index, 39]\n  };\n  obj[color + \"Bright\"] = {\n    _fg: [90 + index, 39]\n  }; // background\n\n  obj[\"bg\" + color[0].toUpperCase() + color.slice(1)] = {\n    _bg: [40 + index, 49]\n  };\n  obj[\"bg\" + color[0].toUpperCase() + color.slice(1) + \"Bright\"] = {\n    _bg: [100 + index, 49]\n  };\n  return obj;\n}, {}));\nsgr.mods = mods;\nsgr.openers = {};\nsgr.closers = {};\nforOwn(mods, function (mod) {\n  var modPair = mod[onlyKey(mod)];\n  sgr.openers[modPair[0]] = modPair;\n  sgr.closers[modPair[1]] = modPair;\n});\n\nsgr.openStyle = function (openedMods, code) {\n  openedMods.push(sgr.openers[code]);\n};\n\nsgr.closeStyle = function (openedMods, code) {\n  forEachRight.call(openedMods, function (modPair, index) {\n    if (modPair[1] === code) {\n      openedMods.splice(index, 1);\n    }\n  });\n};\n/* prepend openers */\n\n\nsgr.prepend = function (currentMods) {\n  return currentMods.map(function (modPair) {\n    return sgr(modPair[0]);\n  });\n};\n/* complete non-closed openers with corresponding closers */\n\n\nsgr.complete = function (openedMods, closerCodes) {\n  closerCodes.forEach(function (code) {\n    sgr.closeStyle(openedMods, code);\n  }); // mods must be closed from the last opened to first opened\n\n  openedMods = openedMods.reverse();\n  openedMods = openedMods.map(function (modPair) {\n    return modPair[1];\n  }); // one closer can close many openers (31, 32 -> 39)\n\n  openedMods = uniq.call(openedMods);\n  return openedMods.map(sgr);\n};\n\nvar hasCSI = function (str) {\n  return includes.call(str, CSI);\n};\n\nsgr.hasCSI = hasCSI;\n\nvar extractCode = function (csi) {\n  var code = csi.slice(2, -1);\n  code = Number(code);\n  return code;\n};\n\nsgr.extractCode = extractCode;\nmodule.exports = sgr;","map":{"version":3,"sources":["/home/dev/Documentos/Projects/github-clone/node_modules/cli-color/lib/sgr.js"],"names":["assign","require","includes","forOwn","onlyKey","forEachRight","uniq","CSI","sgr","code","mods","bold","_bold","italic","_italic","underline","_underline","blink","_blink","inverse","_inverse","strike","_strike","reduce","obj","color","index","_fg","toUpperCase","slice","_bg","openers","closers","mod","modPair","openStyle","openedMods","push","closeStyle","call","splice","prepend","currentMods","map","complete","closerCodes","forEach","reverse","hasCSI","str","extractCode","csi","Number","module","exports"],"mappings":"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","sourcesContent":["\"use strict\";\n\n/* CSI - control sequence introducer */\n/* SGR - set graphic rendition */\n\nvar assign       = require(\"es5-ext/object/assign\")\n  , includes     = require(\"es5-ext/string/#/contains\")\n  , forOwn       = require(\"es5-ext/object/for-each\")\n  , onlyKey      = require(\"es5-ext/object/first-key\")\n  , forEachRight = require(\"es5-ext/array/#/for-each-right\")\n  , uniq         = require(\"es5-ext/array/#/uniq.js\");\n\nvar CSI = \"\\x1b[\";\n\nvar sgr = function (code) { return CSI + code + \"m\"; };\n\nsgr.CSI = CSI;\n\nvar mods = assign(\n\t{\n\t\t// Style\n\t\tbold: { _bold: [1, 22] },\n\t\titalic: { _italic: [3, 23] },\n\t\tunderline: { _underline: [4, 24] },\n\t\tblink: { _blink: [5, 25] },\n\t\tinverse: { _inverse: [7, 27] },\n\t\tstrike: { _strike: [9, 29] }\n\n\t\t// Color\n\t},\n\t[\"black\", \"red\", \"green\", \"yellow\", \"blue\", \"magenta\", \"cyan\", \"white\"].reduce(function (\n\t\tobj,\n\t\tcolor,\n\t\tindex\n\t) {\n\t\t// foreground\n\t\tobj[color] = { _fg: [30 + index, 39] };\n\t\tobj[color + \"Bright\"] = { _fg: [90 + index, 39] };\n\n\t\t// background\n\t\tobj[\"bg\" + color[0].toUpperCase() + color.slice(1)] = { _bg: [40 + index, 49] };\n\t\tobj[\"bg\" + color[0].toUpperCase() + color.slice(1) + \"Bright\"] = { _bg: [100 + index, 49] };\n\n\t\treturn obj;\n\t}, {})\n);\n\nsgr.mods = mods;\n\nsgr.openers = {};\nsgr.closers = {};\n\nforOwn(mods, function (mod) {\n\tvar modPair = mod[onlyKey(mod)];\n\n\tsgr.openers[modPair[0]] = modPair;\n\tsgr.closers[modPair[1]] = modPair;\n});\n\nsgr.openStyle = function (openedMods, code) { openedMods.push(sgr.openers[code]); };\n\nsgr.closeStyle = function (openedMods, code) {\n\tforEachRight.call(openedMods, function (modPair, index) {\n\t\tif (modPair[1] === code) {\n\t\t\topenedMods.splice(index, 1);\n\t\t}\n\t});\n};\n\n/* prepend openers */\nsgr.prepend = function (currentMods) {\n\treturn currentMods.map(function (modPair) { return sgr(modPair[0]); });\n};\n\n/* complete non-closed openers with corresponding closers */\nsgr.complete = function (openedMods, closerCodes) {\n\tcloserCodes.forEach(function (code) { sgr.closeStyle(openedMods, code); });\n\n\t// mods must be closed from the last opened to first opened\n\topenedMods = openedMods.reverse();\n\n\topenedMods = openedMods.map(function (modPair) { return modPair[1]; });\n\n\t// one closer can close many openers (31, 32 -> 39)\n\topenedMods = uniq.call(openedMods);\n\n\treturn openedMods.map(sgr);\n};\n\nvar hasCSI = function (str) { return includes.call(str, CSI); };\n\nsgr.hasCSI = hasCSI;\n\nvar extractCode = function (csi) {\n\tvar code = csi.slice(2, -1);\n\tcode = Number(code);\n\treturn code;\n};\n\nsgr.extractCode = extractCode;\n\nmodule.exports = sgr;\n"]},"metadata":{},"sourceType":"script"}