{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Delegate = exports.tryCreateDelegate = void 0;\n\nconst util_1 = require(\"util\");\n\nconst fs = require(\"fs\");\n\nconst path = require(\"path\");\n\nconst error_1 = require(\"../../../../error\");\n\nconst parseRuntimeAndValidateSDK_1 = require(\"./parseRuntimeAndValidateSDK\");\n\nconst projectUtils_1 = require(\"../../../../projectUtils\");\n\nconst validate = require(\"./validate\");\n\nconst logger_1 = require(\"../../../../logger\");\n\nconst versioning = require(\"./versioning\");\n\nconst parseTriggers = require(\"./parseTriggers\");\n\nasync function tryCreateDelegate(context, options) {\n  const projectRelativeSourceDir = options.config.get(\"functions.source\");\n  const sourceDir = options.config.path(projectRelativeSourceDir);\n  const packageJsonPath = path.join(sourceDir, \"package.json\");\n\n  if (!(await util_1.promisify(fs.exists)(packageJsonPath))) {\n    logger_1.logger.debug(\"Customer code is not Node\");\n    return undefined;\n  }\n\n  let runtime = options.config.get(\"functions.runtime\") || \"\";\n  runtime = parseRuntimeAndValidateSDK_1.getRuntimeChoice(sourceDir, runtime);\n\n  if (!runtime.startsWith(\"nodejs\")) {\n    logger_1.logger.debug(\"Customer has a package.json but did not get a nodejs runtime. This should not happen\");\n    throw new error_1.FirebaseError(`Unexpected runtime ${runtime}`);\n  }\n\n  return new Delegate(projectUtils_1.needProjectId(options), options.config.projectDir, sourceDir, runtime);\n}\n\nexports.tryCreateDelegate = tryCreateDelegate;\n\nclass Delegate {\n  constructor(projectId, projectDir, sourceDir, runtime) {\n    this.projectId = projectId;\n    this.projectDir = projectDir;\n    this.sourceDir = sourceDir;\n    this.runtime = runtime;\n    this.name = \"nodejs\";\n    this._sdkVersion = \"\";\n  }\n\n  get sdkVersion() {\n    if (!this._sdkVersion) {\n      this._sdkVersion = versioning.getFunctionsSDKVersion(this.sourceDir) || \"\";\n    }\n\n    return this._sdkVersion;\n  }\n\n  validate() {\n    versioning.checkFunctionsSDKVersion(this.sdkVersion);\n    const relativeDir = path.relative(this.projectDir, this.sourceDir);\n    validate.packageJsonIsValid(relativeDir, this.sourceDir, this.projectDir);\n    return Promise.resolve();\n  }\n\n  async build() {}\n\n  watch() {\n    return Promise.resolve(() => Promise.resolve());\n  }\n\n  async discoverSpec(config, env) {\n    return parseTriggers.discoverBackend(this.projectId, this.sourceDir, this.runtime, config, env);\n  }\n\n}\n\nexports.Delegate = Delegate;","map":{"version":3,"sources":["/home/dev/Documentos/Projects/github-clone/node_modules/firebase-tools/lib/deploy/functions/runtimes/node/index.js"],"names":["Object","defineProperty","exports","value","Delegate","tryCreateDelegate","util_1","require","fs","path","error_1","parseRuntimeAndValidateSDK_1","projectUtils_1","validate","logger_1","versioning","parseTriggers","context","options","projectRelativeSourceDir","config","get","sourceDir","packageJsonPath","join","promisify","exists","logger","debug","undefined","runtime","getRuntimeChoice","startsWith","FirebaseError","needProjectId","projectDir","constructor","projectId","name","_sdkVersion","sdkVersion","getFunctionsSDKVersion","checkFunctionsSDKVersion","relativeDir","relative","packageJsonIsValid","Promise","resolve","build","watch","discoverSpec","env","discoverBackend"],"mappings":"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","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Delegate = exports.tryCreateDelegate = void 0;\nconst util_1 = require(\"util\");\nconst fs = require(\"fs\");\nconst path = require(\"path\");\nconst error_1 = require(\"../../../../error\");\nconst parseRuntimeAndValidateSDK_1 = require(\"./parseRuntimeAndValidateSDK\");\nconst projectUtils_1 = require(\"../../../../projectUtils\");\nconst validate = require(\"./validate\");\nconst logger_1 = require(\"../../../../logger\");\nconst versioning = require(\"./versioning\");\nconst parseTriggers = require(\"./parseTriggers\");\nasync function tryCreateDelegate(context, options) {\n    const projectRelativeSourceDir = options.config.get(\"functions.source\");\n    const sourceDir = options.config.path(projectRelativeSourceDir);\n    const packageJsonPath = path.join(sourceDir, \"package.json\");\n    if (!(await util_1.promisify(fs.exists)(packageJsonPath))) {\n        logger_1.logger.debug(\"Customer code is not Node\");\n        return undefined;\n    }\n    let runtime = options.config.get(\"functions.runtime\") || \"\";\n    runtime = parseRuntimeAndValidateSDK_1.getRuntimeChoice(sourceDir, runtime);\n    if (!runtime.startsWith(\"nodejs\")) {\n        logger_1.logger.debug(\"Customer has a package.json but did not get a nodejs runtime. This should not happen\");\n        throw new error_1.FirebaseError(`Unexpected runtime ${runtime}`);\n    }\n    return new Delegate(projectUtils_1.needProjectId(options), options.config.projectDir, sourceDir, runtime);\n}\nexports.tryCreateDelegate = tryCreateDelegate;\nclass Delegate {\n    constructor(projectId, projectDir, sourceDir, runtime) {\n        this.projectId = projectId;\n        this.projectDir = projectDir;\n        this.sourceDir = sourceDir;\n        this.runtime = runtime;\n        this.name = \"nodejs\";\n        this._sdkVersion = \"\";\n    }\n    get sdkVersion() {\n        if (!this._sdkVersion) {\n            this._sdkVersion = versioning.getFunctionsSDKVersion(this.sourceDir) || \"\";\n        }\n        return this._sdkVersion;\n    }\n    validate() {\n        versioning.checkFunctionsSDKVersion(this.sdkVersion);\n        const relativeDir = path.relative(this.projectDir, this.sourceDir);\n        validate.packageJsonIsValid(relativeDir, this.sourceDir, this.projectDir);\n        return Promise.resolve();\n    }\n    async build() {\n    }\n    watch() {\n        return Promise.resolve(() => Promise.resolve());\n    }\n    async discoverSpec(config, env) {\n        return parseTriggers.discoverBackend(this.projectId, this.sourceDir, this.runtime, config, env);\n    }\n}\nexports.Delegate = Delegate;\n"]},"metadata":{},"sourceType":"script"}