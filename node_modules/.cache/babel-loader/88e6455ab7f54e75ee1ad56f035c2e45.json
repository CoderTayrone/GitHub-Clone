{"ast":null,"code":"\"use strict\";\n\n;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar tslib_1 = require(\"tslib\");\n\nvar types_1 = tslib_1.__importDefault(require(\"../lib/types\"));\n\nvar shared_1 = tslib_1.__importDefault(require(\"../lib/shared\"));\n\nvar es7_1 = tslib_1.__importDefault(require(\"./es7\"));\n\nfunction default_1(fork) {\n  fork.use(es7_1.default);\n  var types = fork.use(types_1.default);\n  var defaults = fork.use(shared_1.default).defaults;\n  var def = types.Type.def;\n  var or = types.Type.or;\n  def(\"Noop\").bases(\"Statement\").build();\n  def(\"DoExpression\").bases(\"Expression\").build(\"body\").field(\"body\", [def(\"Statement\")]);\n  def(\"Super\").bases(\"Expression\").build();\n  def(\"BindExpression\").bases(\"Expression\").build(\"object\", \"callee\").field(\"object\", or(def(\"Expression\"), null)).field(\"callee\", def(\"Expression\"));\n  def(\"Decorator\").bases(\"Node\").build(\"expression\").field(\"expression\", def(\"Expression\"));\n  def(\"Property\").field(\"decorators\", or([def(\"Decorator\")], null), defaults[\"null\"]);\n  def(\"MethodDefinition\").field(\"decorators\", or([def(\"Decorator\")], null), defaults[\"null\"]);\n  def(\"MetaProperty\").bases(\"Expression\").build(\"meta\", \"property\").field(\"meta\", def(\"Identifier\")).field(\"property\", def(\"Identifier\"));\n  def(\"ParenthesizedExpression\").bases(\"Expression\").build(\"expression\").field(\"expression\", def(\"Expression\"));\n  def(\"ImportSpecifier\").bases(\"ModuleSpecifier\").build(\"imported\", \"local\").field(\"imported\", def(\"Identifier\"));\n  def(\"ImportDefaultSpecifier\").bases(\"ModuleSpecifier\").build(\"local\");\n  def(\"ImportNamespaceSpecifier\").bases(\"ModuleSpecifier\").build(\"local\");\n  def(\"ExportDefaultDeclaration\").bases(\"Declaration\").build(\"declaration\").field(\"declaration\", or(def(\"Declaration\"), def(\"Expression\")));\n  def(\"ExportNamedDeclaration\").bases(\"Declaration\").build(\"declaration\", \"specifiers\", \"source\").field(\"declaration\", or(def(\"Declaration\"), null)).field(\"specifiers\", [def(\"ExportSpecifier\")], defaults.emptyArray).field(\"source\", or(def(\"Literal\"), null), defaults[\"null\"]);\n  def(\"ExportSpecifier\").bases(\"ModuleSpecifier\").build(\"local\", \"exported\").field(\"exported\", def(\"Identifier\"));\n  def(\"ExportNamespaceSpecifier\").bases(\"Specifier\").build(\"exported\").field(\"exported\", def(\"Identifier\"));\n  def(\"ExportDefaultSpecifier\").bases(\"Specifier\").build(\"exported\").field(\"exported\", def(\"Identifier\"));\n  def(\"ExportAllDeclaration\").bases(\"Declaration\").build(\"exported\", \"source\").field(\"exported\", or(def(\"Identifier\"), null)).field(\"source\", def(\"Literal\"));\n  def(\"CommentBlock\").bases(\"Comment\").build(\"value\",\n  /*optional:*/\n  \"leading\", \"trailing\");\n  def(\"CommentLine\").bases(\"Comment\").build(\"value\",\n  /*optional:*/\n  \"leading\", \"trailing\");\n  def(\"Directive\").bases(\"Node\").build(\"value\").field(\"value\", def(\"DirectiveLiteral\"));\n  def(\"DirectiveLiteral\").bases(\"Node\", \"Expression\").build(\"value\").field(\"value\", String, defaults[\"use strict\"]);\n  def(\"InterpreterDirective\").bases(\"Node\").build(\"value\").field(\"value\", String);\n  def(\"BlockStatement\").bases(\"Statement\").build(\"body\").field(\"body\", [def(\"Statement\")]).field(\"directives\", [def(\"Directive\")], defaults.emptyArray);\n  def(\"Program\").bases(\"Node\").build(\"body\").field(\"body\", [def(\"Statement\")]).field(\"directives\", [def(\"Directive\")], defaults.emptyArray).field(\"interpreter\", or(def(\"InterpreterDirective\"), null), defaults[\"null\"]); // Split Literal\n\n  def(\"StringLiteral\").bases(\"Literal\").build(\"value\").field(\"value\", String);\n  def(\"NumericLiteral\").bases(\"Literal\").build(\"value\").field(\"value\", Number).field(\"raw\", or(String, null), defaults[\"null\"]).field(\"extra\", {\n    rawValue: Number,\n    raw: String\n  }, function getDefault() {\n    return {\n      rawValue: this.value,\n      raw: this.value + \"\"\n    };\n  });\n  def(\"BigIntLiteral\").bases(\"Literal\").build(\"value\") // Only String really seems appropriate here, since BigInt values\n  // often exceed the limits of JS numbers.\n  .field(\"value\", or(String, Number)).field(\"extra\", {\n    rawValue: String,\n    raw: String\n  }, function getDefault() {\n    return {\n      rawValue: String(this.value),\n      raw: this.value + \"n\"\n    };\n  });\n  def(\"NullLiteral\").bases(\"Literal\").build().field(\"value\", null, defaults[\"null\"]);\n  def(\"BooleanLiteral\").bases(\"Literal\").build(\"value\").field(\"value\", Boolean);\n  def(\"RegExpLiteral\").bases(\"Literal\").build(\"pattern\", \"flags\").field(\"pattern\", String).field(\"flags\", String).field(\"value\", RegExp, function () {\n    return new RegExp(this.pattern, this.flags);\n  });\n  var ObjectExpressionProperty = or(def(\"Property\"), def(\"ObjectMethod\"), def(\"ObjectProperty\"), def(\"SpreadProperty\"), def(\"SpreadElement\")); // Split Property -> ObjectProperty and ObjectMethod\n\n  def(\"ObjectExpression\").bases(\"Expression\").build(\"properties\").field(\"properties\", [ObjectExpressionProperty]); // ObjectMethod hoist .value properties to own properties\n\n  def(\"ObjectMethod\").bases(\"Node\", \"Function\").build(\"kind\", \"key\", \"params\", \"body\", \"computed\").field(\"kind\", or(\"method\", \"get\", \"set\")).field(\"key\", or(def(\"Literal\"), def(\"Identifier\"), def(\"Expression\"))).field(\"params\", [def(\"Pattern\")]).field(\"body\", def(\"BlockStatement\")).field(\"computed\", Boolean, defaults[\"false\"]).field(\"generator\", Boolean, defaults[\"false\"]).field(\"async\", Boolean, defaults[\"false\"]).field(\"accessibility\", // TypeScript\n  or(def(\"Literal\"), null), defaults[\"null\"]).field(\"decorators\", or([def(\"Decorator\")], null), defaults[\"null\"]);\n  def(\"ObjectProperty\").bases(\"Node\").build(\"key\", \"value\").field(\"key\", or(def(\"Literal\"), def(\"Identifier\"), def(\"Expression\"))).field(\"value\", or(def(\"Expression\"), def(\"Pattern\"))).field(\"accessibility\", // TypeScript\n  or(def(\"Literal\"), null), defaults[\"null\"]).field(\"computed\", Boolean, defaults[\"false\"]);\n  var ClassBodyElement = or(def(\"MethodDefinition\"), def(\"VariableDeclarator\"), def(\"ClassPropertyDefinition\"), def(\"ClassProperty\"), def(\"ClassPrivateProperty\"), def(\"ClassMethod\"), def(\"ClassPrivateMethod\")); // MethodDefinition -> ClassMethod\n\n  def(\"ClassBody\").bases(\"Declaration\").build(\"body\").field(\"body\", [ClassBodyElement]);\n  def(\"ClassMethod\").bases(\"Declaration\", \"Function\").build(\"kind\", \"key\", \"params\", \"body\", \"computed\", \"static\").field(\"key\", or(def(\"Literal\"), def(\"Identifier\"), def(\"Expression\")));\n  def(\"ClassPrivateMethod\").bases(\"Declaration\", \"Function\").build(\"key\", \"params\", \"body\", \"kind\", \"computed\", \"static\").field(\"key\", def(\"PrivateName\"));\n  [\"ClassMethod\", \"ClassPrivateMethod\"].forEach(function (typeName) {\n    def(typeName).field(\"kind\", or(\"get\", \"set\", \"method\", \"constructor\"), function () {\n      return \"method\";\n    }).field(\"body\", def(\"BlockStatement\")).field(\"computed\", Boolean, defaults[\"false\"]).field(\"static\", or(Boolean, null), defaults[\"null\"]).field(\"abstract\", or(Boolean, null), defaults[\"null\"]).field(\"access\", or(\"public\", \"private\", \"protected\", null), defaults[\"null\"]).field(\"accessibility\", or(\"public\", \"private\", \"protected\", null), defaults[\"null\"]).field(\"decorators\", or([def(\"Decorator\")], null), defaults[\"null\"]).field(\"optional\", or(Boolean, null), defaults[\"null\"]);\n  });\n  def(\"ClassPrivateProperty\").bases(\"ClassProperty\").build(\"key\", \"value\").field(\"key\", def(\"PrivateName\")).field(\"value\", or(def(\"Expression\"), null), defaults[\"null\"]);\n  def(\"PrivateName\").bases(\"Expression\", \"Pattern\").build(\"id\").field(\"id\", def(\"Identifier\"));\n  var ObjectPatternProperty = or(def(\"Property\"), def(\"PropertyPattern\"), def(\"SpreadPropertyPattern\"), def(\"SpreadProperty\"), // Used by Esprima\n  def(\"ObjectProperty\"), // Babel 6\n  def(\"RestProperty\") // Babel 6\n  ); // Split into RestProperty and SpreadProperty\n\n  def(\"ObjectPattern\").bases(\"Pattern\").build(\"properties\").field(\"properties\", [ObjectPatternProperty]).field(\"decorators\", or([def(\"Decorator\")], null), defaults[\"null\"]);\n  def(\"SpreadProperty\").bases(\"Node\").build(\"argument\").field(\"argument\", def(\"Expression\"));\n  def(\"RestProperty\").bases(\"Node\").build(\"argument\").field(\"argument\", def(\"Expression\"));\n  def(\"ForAwaitStatement\").bases(\"Statement\").build(\"left\", \"right\", \"body\").field(\"left\", or(def(\"VariableDeclaration\"), def(\"Expression\"))).field(\"right\", def(\"Expression\")).field(\"body\", def(\"Statement\")); // The callee node of a dynamic import(...) expression.\n\n  def(\"Import\").bases(\"Expression\").build();\n}\n\nexports.default = default_1;\nmodule.exports = exports[\"default\"];","map":{"version":3,"sources":["/home/dev/Documentos/Projects/github-clone/node_modules/ast-types/def/babel-core.js"],"names":["Object","defineProperty","exports","value","tslib_1","require","types_1","__importDefault","shared_1","es7_1","default_1","fork","use","default","types","defaults","def","Type","or","bases","build","field","emptyArray","String","Number","rawValue","raw","getDefault","Boolean","RegExp","pattern","flags","ObjectExpressionProperty","ClassBodyElement","forEach","typeName","ObjectPatternProperty","module"],"mappings":"AAAA;;AAAa;AACbA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;;AACA,IAAIC,OAAO,GAAGC,OAAO,CAAC,OAAD,CAArB;;AACA,IAAIC,OAAO,GAAGF,OAAO,CAACG,eAAR,CAAwBF,OAAO,CAAC,cAAD,CAA/B,CAAd;;AACA,IAAIG,QAAQ,GAAGJ,OAAO,CAACG,eAAR,CAAwBF,OAAO,CAAC,eAAD,CAA/B,CAAf;;AACA,IAAII,KAAK,GAAGL,OAAO,CAACG,eAAR,CAAwBF,OAAO,CAAC,OAAD,CAA/B,CAAZ;;AACA,SAASK,SAAT,CAAmBC,IAAnB,EAAyB;AACrBA,EAAAA,IAAI,CAACC,GAAL,CAASH,KAAK,CAACI,OAAf;AACA,MAAIC,KAAK,GAAGH,IAAI,CAACC,GAAL,CAASN,OAAO,CAACO,OAAjB,CAAZ;AACA,MAAIE,QAAQ,GAAGJ,IAAI,CAACC,GAAL,CAASJ,QAAQ,CAACK,OAAlB,EAA2BE,QAA1C;AACA,MAAIC,GAAG,GAAGF,KAAK,CAACG,IAAN,CAAWD,GAArB;AACA,MAAIE,EAAE,GAAGJ,KAAK,CAACG,IAAN,CAAWC,EAApB;AACAF,EAAAA,GAAG,CAAC,MAAD,CAAH,CACKG,KADL,CACW,WADX,EAEKC,KAFL;AAGAJ,EAAAA,GAAG,CAAC,cAAD,CAAH,CACKG,KADL,CACW,YADX,EAEKC,KAFL,CAEW,MAFX,EAGKC,KAHL,CAGW,MAHX,EAGmB,CAACL,GAAG,CAAC,WAAD,CAAJ,CAHnB;AAIAA,EAAAA,GAAG,CAAC,OAAD,CAAH,CACKG,KADL,CACW,YADX,EAEKC,KAFL;AAGAJ,EAAAA,GAAG,CAAC,gBAAD,CAAH,CACKG,KADL,CACW,YADX,EAEKC,KAFL,CAEW,QAFX,EAEqB,QAFrB,EAGKC,KAHL,CAGW,QAHX,EAGqBH,EAAE,CAACF,GAAG,CAAC,YAAD,CAAJ,EAAoB,IAApB,CAHvB,EAIKK,KAJL,CAIW,QAJX,EAIqBL,GAAG,CAAC,YAAD,CAJxB;AAKAA,EAAAA,GAAG,CAAC,WAAD,CAAH,CACKG,KADL,CACW,MADX,EAEKC,KAFL,CAEW,YAFX,EAGKC,KAHL,CAGW,YAHX,EAGyBL,GAAG,CAAC,YAAD,CAH5B;AAIAA,EAAAA,GAAG,CAAC,UAAD,CAAH,CACKK,KADL,CACW,YADX,EACyBH,EAAE,CAAC,CAACF,GAAG,CAAC,WAAD,CAAJ,CAAD,EAAqB,IAArB,CAD3B,EACuDD,QAAQ,CAAC,MAAD,CAD/D;AAEAC,EAAAA,GAAG,CAAC,kBAAD,CAAH,CACKK,KADL,CACW,YADX,EACyBH,EAAE,CAAC,CAACF,GAAG,CAAC,WAAD,CAAJ,CAAD,EAAqB,IAArB,CAD3B,EACuDD,QAAQ,CAAC,MAAD,CAD/D;AAEAC,EAAAA,GAAG,CAAC,cAAD,CAAH,CACKG,KADL,CACW,YADX,EAEKC,KAFL,CAEW,MAFX,EAEmB,UAFnB,EAGKC,KAHL,CAGW,MAHX,EAGmBL,GAAG,CAAC,YAAD,CAHtB,EAIKK,KAJL,CAIW,UAJX,EAIuBL,GAAG,CAAC,YAAD,CAJ1B;AAKAA,EAAAA,GAAG,CAAC,yBAAD,CAAH,CACKG,KADL,CACW,YADX,EAEKC,KAFL,CAEW,YAFX,EAGKC,KAHL,CAGW,YAHX,EAGyBL,GAAG,CAAC,YAAD,CAH5B;AAIAA,EAAAA,GAAG,CAAC,iBAAD,CAAH,CACKG,KADL,CACW,iBADX,EAEKC,KAFL,CAEW,UAFX,EAEuB,OAFvB,EAGKC,KAHL,CAGW,UAHX,EAGuBL,GAAG,CAAC,YAAD,CAH1B;AAIAA,EAAAA,GAAG,CAAC,wBAAD,CAAH,CACKG,KADL,CACW,iBADX,EAEKC,KAFL,CAEW,OAFX;AAGAJ,EAAAA,GAAG,CAAC,0BAAD,CAAH,CACKG,KADL,CACW,iBADX,EAEKC,KAFL,CAEW,OAFX;AAGAJ,EAAAA,GAAG,CAAC,0BAAD,CAAH,CACKG,KADL,CACW,aADX,EAEKC,KAFL,CAEW,aAFX,EAGKC,KAHL,CAGW,aAHX,EAG0BH,EAAE,CAACF,GAAG,CAAC,aAAD,CAAJ,EAAqBA,GAAG,CAAC,YAAD,CAAxB,CAH5B;AAIAA,EAAAA,GAAG,CAAC,wBAAD,CAAH,CACKG,KADL,CACW,aADX,EAEKC,KAFL,CAEW,aAFX,EAE0B,YAF1B,EAEwC,QAFxC,EAGKC,KAHL,CAGW,aAHX,EAG0BH,EAAE,CAACF,GAAG,CAAC,aAAD,CAAJ,EAAqB,IAArB,CAH5B,EAIKK,KAJL,CAIW,YAJX,EAIyB,CAACL,GAAG,CAAC,iBAAD,CAAJ,CAJzB,EAImDD,QAAQ,CAACO,UAJ5D,EAKKD,KALL,CAKW,QALX,EAKqBH,EAAE,CAACF,GAAG,CAAC,SAAD,CAAJ,EAAiB,IAAjB,CALvB,EAK+CD,QAAQ,CAAC,MAAD,CALvD;AAMAC,EAAAA,GAAG,CAAC,iBAAD,CAAH,CACKG,KADL,CACW,iBADX,EAEKC,KAFL,CAEW,OAFX,EAEoB,UAFpB,EAGKC,KAHL,CAGW,UAHX,EAGuBL,GAAG,CAAC,YAAD,CAH1B;AAIAA,EAAAA,GAAG,CAAC,0BAAD,CAAH,CACKG,KADL,CACW,WADX,EAEKC,KAFL,CAEW,UAFX,EAGKC,KAHL,CAGW,UAHX,EAGuBL,GAAG,CAAC,YAAD,CAH1B;AAIAA,EAAAA,GAAG,CAAC,wBAAD,CAAH,CACKG,KADL,CACW,WADX,EAEKC,KAFL,CAEW,UAFX,EAGKC,KAHL,CAGW,UAHX,EAGuBL,GAAG,CAAC,YAAD,CAH1B;AAIAA,EAAAA,GAAG,CAAC,sBAAD,CAAH,CACKG,KADL,CACW,aADX,EAEKC,KAFL,CAEW,UAFX,EAEuB,QAFvB,EAGKC,KAHL,CAGW,UAHX,EAGuBH,EAAE,CAACF,GAAG,CAAC,YAAD,CAAJ,EAAoB,IAApB,CAHzB,EAIKK,KAJL,CAIW,QAJX,EAIqBL,GAAG,CAAC,SAAD,CAJxB;AAKAA,EAAAA,GAAG,CAAC,cAAD,CAAH,CACKG,KADL,CACW,SADX,EAEKC,KAFL,CAEW,OAFX;AAEoB;AAAc,WAFlC,EAE6C,UAF7C;AAGAJ,EAAAA,GAAG,CAAC,aAAD,CAAH,CACKG,KADL,CACW,SADX,EAEKC,KAFL,CAEW,OAFX;AAEoB;AAAc,WAFlC,EAE6C,UAF7C;AAGAJ,EAAAA,GAAG,CAAC,WAAD,CAAH,CACKG,KADL,CACW,MADX,EAEKC,KAFL,CAEW,OAFX,EAGKC,KAHL,CAGW,OAHX,EAGoBL,GAAG,CAAC,kBAAD,CAHvB;AAIAA,EAAAA,GAAG,CAAC,kBAAD,CAAH,CACKG,KADL,CACW,MADX,EACmB,YADnB,EAEKC,KAFL,CAEW,OAFX,EAGKC,KAHL,CAGW,OAHX,EAGoBE,MAHpB,EAG4BR,QAAQ,CAAC,YAAD,CAHpC;AAIAC,EAAAA,GAAG,CAAC,sBAAD,CAAH,CACKG,KADL,CACW,MADX,EAEKC,KAFL,CAEW,OAFX,EAGKC,KAHL,CAGW,OAHX,EAGoBE,MAHpB;AAIAP,EAAAA,GAAG,CAAC,gBAAD,CAAH,CACKG,KADL,CACW,WADX,EAEKC,KAFL,CAEW,MAFX,EAGKC,KAHL,CAGW,MAHX,EAGmB,CAACL,GAAG,CAAC,WAAD,CAAJ,CAHnB,EAIKK,KAJL,CAIW,YAJX,EAIyB,CAACL,GAAG,CAAC,WAAD,CAAJ,CAJzB,EAI6CD,QAAQ,CAACO,UAJtD;AAKAN,EAAAA,GAAG,CAAC,SAAD,CAAH,CACKG,KADL,CACW,MADX,EAEKC,KAFL,CAEW,MAFX,EAGKC,KAHL,CAGW,MAHX,EAGmB,CAACL,GAAG,CAAC,WAAD,CAAJ,CAHnB,EAIKK,KAJL,CAIW,YAJX,EAIyB,CAACL,GAAG,CAAC,WAAD,CAAJ,CAJzB,EAI6CD,QAAQ,CAACO,UAJtD,EAKKD,KALL,CAKW,aALX,EAK0BH,EAAE,CAACF,GAAG,CAAC,sBAAD,CAAJ,EAA8B,IAA9B,CAL5B,EAKiED,QAAQ,CAAC,MAAD,CALzE,EAlGqB,CAwGrB;;AACAC,EAAAA,GAAG,CAAC,eAAD,CAAH,CACKG,KADL,CACW,SADX,EAEKC,KAFL,CAEW,OAFX,EAGKC,KAHL,CAGW,OAHX,EAGoBE,MAHpB;AAIAP,EAAAA,GAAG,CAAC,gBAAD,CAAH,CACKG,KADL,CACW,SADX,EAEKC,KAFL,CAEW,OAFX,EAGKC,KAHL,CAGW,OAHX,EAGoBG,MAHpB,EAIKH,KAJL,CAIW,KAJX,EAIkBH,EAAE,CAACK,MAAD,EAAS,IAAT,CAJpB,EAIoCR,QAAQ,CAAC,MAAD,CAJ5C,EAKKM,KALL,CAKW,OALX,EAKoB;AAChBI,IAAAA,QAAQ,EAAED,MADM;AAEhBE,IAAAA,GAAG,EAAEH;AAFW,GALpB,EAQG,SAASI,UAAT,GAAsB;AACrB,WAAO;AACHF,MAAAA,QAAQ,EAAE,KAAKtB,KADZ;AAEHuB,MAAAA,GAAG,EAAE,KAAKvB,KAAL,GAAa;AAFf,KAAP;AAIH,GAbD;AAcAa,EAAAA,GAAG,CAAC,eAAD,CAAH,CACKG,KADL,CACW,SADX,EAEKC,KAFL,CAEW,OAFX,EAGI;AACA;AAJJ,GAKKC,KALL,CAKW,OALX,EAKoBH,EAAE,CAACK,MAAD,EAASC,MAAT,CALtB,EAMKH,KANL,CAMW,OANX,EAMoB;AAChBI,IAAAA,QAAQ,EAAEF,MADM;AAEhBG,IAAAA,GAAG,EAAEH;AAFW,GANpB,EASG,SAASI,UAAT,GAAsB;AACrB,WAAO;AACHF,MAAAA,QAAQ,EAAEF,MAAM,CAAC,KAAKpB,KAAN,CADb;AAEHuB,MAAAA,GAAG,EAAE,KAAKvB,KAAL,GAAa;AAFf,KAAP;AAIH,GAdD;AAeAa,EAAAA,GAAG,CAAC,aAAD,CAAH,CACKG,KADL,CACW,SADX,EAEKC,KAFL,GAGKC,KAHL,CAGW,OAHX,EAGoB,IAHpB,EAG0BN,QAAQ,CAAC,MAAD,CAHlC;AAIAC,EAAAA,GAAG,CAAC,gBAAD,CAAH,CACKG,KADL,CACW,SADX,EAEKC,KAFL,CAEW,OAFX,EAGKC,KAHL,CAGW,OAHX,EAGoBO,OAHpB;AAIAZ,EAAAA,GAAG,CAAC,eAAD,CAAH,CACKG,KADL,CACW,SADX,EAEKC,KAFL,CAEW,SAFX,EAEsB,OAFtB,EAGKC,KAHL,CAGW,SAHX,EAGsBE,MAHtB,EAIKF,KAJL,CAIW,OAJX,EAIoBE,MAJpB,EAKKF,KALL,CAKW,OALX,EAKoBQ,MALpB,EAK4B,YAAY;AACpC,WAAO,IAAIA,MAAJ,CAAW,KAAKC,OAAhB,EAAyB,KAAKC,KAA9B,CAAP;AACH,GAPD;AAQA,MAAIC,wBAAwB,GAAGd,EAAE,CAACF,GAAG,CAAC,UAAD,CAAJ,EAAkBA,GAAG,CAAC,cAAD,CAArB,EAAuCA,GAAG,CAAC,gBAAD,CAA1C,EAA8DA,GAAG,CAAC,gBAAD,CAAjE,EAAqFA,GAAG,CAAC,eAAD,CAAxF,CAAjC,CA1JqB,CA2JrB;;AACAA,EAAAA,GAAG,CAAC,kBAAD,CAAH,CACKG,KADL,CACW,YADX,EAEKC,KAFL,CAEW,YAFX,EAGKC,KAHL,CAGW,YAHX,EAGyB,CAACW,wBAAD,CAHzB,EA5JqB,CAgKrB;;AACAhB,EAAAA,GAAG,CAAC,cAAD,CAAH,CACKG,KADL,CACW,MADX,EACmB,UADnB,EAEKC,KAFL,CAEW,MAFX,EAEmB,KAFnB,EAE0B,QAF1B,EAEoC,MAFpC,EAE4C,UAF5C,EAGKC,KAHL,CAGW,MAHX,EAGmBH,EAAE,CAAC,QAAD,EAAW,KAAX,EAAkB,KAAlB,CAHrB,EAIKG,KAJL,CAIW,KAJX,EAIkBH,EAAE,CAACF,GAAG,CAAC,SAAD,CAAJ,EAAiBA,GAAG,CAAC,YAAD,CAApB,EAAoCA,GAAG,CAAC,YAAD,CAAvC,CAJpB,EAKKK,KALL,CAKW,QALX,EAKqB,CAACL,GAAG,CAAC,SAAD,CAAJ,CALrB,EAMKK,KANL,CAMW,MANX,EAMmBL,GAAG,CAAC,gBAAD,CANtB,EAOKK,KAPL,CAOW,UAPX,EAOuBO,OAPvB,EAOgCb,QAAQ,CAAC,OAAD,CAPxC,EAQKM,KARL,CAQW,WARX,EAQwBO,OARxB,EAQiCb,QAAQ,CAAC,OAAD,CARzC,EASKM,KATL,CASW,OATX,EASoBO,OATpB,EAS6Bb,QAAQ,CAAC,OAAD,CATrC,EAUKM,KAVL,CAUW,eAVX,EAU4B;AAC5BH,EAAAA,EAAE,CAACF,GAAG,CAAC,SAAD,CAAJ,EAAiB,IAAjB,CAXF,EAW0BD,QAAQ,CAAC,MAAD,CAXlC,EAYKM,KAZL,CAYW,YAZX,EAYyBH,EAAE,CAAC,CAACF,GAAG,CAAC,WAAD,CAAJ,CAAD,EAAqB,IAArB,CAZ3B,EAYuDD,QAAQ,CAAC,MAAD,CAZ/D;AAaAC,EAAAA,GAAG,CAAC,gBAAD,CAAH,CACKG,KADL,CACW,MADX,EAEKC,KAFL,CAEW,KAFX,EAEkB,OAFlB,EAGKC,KAHL,CAGW,KAHX,EAGkBH,EAAE,CAACF,GAAG,CAAC,SAAD,CAAJ,EAAiBA,GAAG,CAAC,YAAD,CAApB,EAAoCA,GAAG,CAAC,YAAD,CAAvC,CAHpB,EAIKK,KAJL,CAIW,OAJX,EAIoBH,EAAE,CAACF,GAAG,CAAC,YAAD,CAAJ,EAAoBA,GAAG,CAAC,SAAD,CAAvB,CAJtB,EAKKK,KALL,CAKW,eALX,EAK4B;AAC5BH,EAAAA,EAAE,CAACF,GAAG,CAAC,SAAD,CAAJ,EAAiB,IAAjB,CANF,EAM0BD,QAAQ,CAAC,MAAD,CANlC,EAOKM,KAPL,CAOW,UAPX,EAOuBO,OAPvB,EAOgCb,QAAQ,CAAC,OAAD,CAPxC;AAQA,MAAIkB,gBAAgB,GAAGf,EAAE,CAACF,GAAG,CAAC,kBAAD,CAAJ,EAA0BA,GAAG,CAAC,oBAAD,CAA7B,EAAqDA,GAAG,CAAC,yBAAD,CAAxD,EAAqFA,GAAG,CAAC,eAAD,CAAxF,EAA2GA,GAAG,CAAC,sBAAD,CAA9G,EAAwIA,GAAG,CAAC,aAAD,CAA3I,EAA4JA,GAAG,CAAC,oBAAD,CAA/J,CAAzB,CAtLqB,CAuLrB;;AACAA,EAAAA,GAAG,CAAC,WAAD,CAAH,CACKG,KADL,CACW,aADX,EAEKC,KAFL,CAEW,MAFX,EAGKC,KAHL,CAGW,MAHX,EAGmB,CAACY,gBAAD,CAHnB;AAIAjB,EAAAA,GAAG,CAAC,aAAD,CAAH,CACKG,KADL,CACW,aADX,EAC0B,UAD1B,EAEKC,KAFL,CAEW,MAFX,EAEmB,KAFnB,EAE0B,QAF1B,EAEoC,MAFpC,EAE4C,UAF5C,EAEwD,QAFxD,EAGKC,KAHL,CAGW,KAHX,EAGkBH,EAAE,CAACF,GAAG,CAAC,SAAD,CAAJ,EAAiBA,GAAG,CAAC,YAAD,CAApB,EAAoCA,GAAG,CAAC,YAAD,CAAvC,CAHpB;AAIAA,EAAAA,GAAG,CAAC,oBAAD,CAAH,CACKG,KADL,CACW,aADX,EAC0B,UAD1B,EAEKC,KAFL,CAEW,KAFX,EAEkB,QAFlB,EAE4B,MAF5B,EAEoC,MAFpC,EAE4C,UAF5C,EAEwD,QAFxD,EAGKC,KAHL,CAGW,KAHX,EAGkBL,GAAG,CAAC,aAAD,CAHrB;AAIA,GAAC,aAAD,EACI,oBADJ,EAEEkB,OAFF,CAEU,UAAUC,QAAV,EAAoB;AAC1BnB,IAAAA,GAAG,CAACmB,QAAD,CAAH,CACKd,KADL,CACW,MADX,EACmBH,EAAE,CAAC,KAAD,EAAQ,KAAR,EAAe,QAAf,EAAyB,aAAzB,CADrB,EAC8D,YAAY;AAAE,aAAO,QAAP;AAAkB,KAD9F,EAEKG,KAFL,CAEW,MAFX,EAEmBL,GAAG,CAAC,gBAAD,CAFtB,EAGKK,KAHL,CAGW,UAHX,EAGuBO,OAHvB,EAGgCb,QAAQ,CAAC,OAAD,CAHxC,EAIKM,KAJL,CAIW,QAJX,EAIqBH,EAAE,CAACU,OAAD,EAAU,IAAV,CAJvB,EAIwCb,QAAQ,CAAC,MAAD,CAJhD,EAKKM,KALL,CAKW,UALX,EAKuBH,EAAE,CAACU,OAAD,EAAU,IAAV,CALzB,EAK0Cb,QAAQ,CAAC,MAAD,CALlD,EAMKM,KANL,CAMW,QANX,EAMqBH,EAAE,CAAC,QAAD,EAAW,SAAX,EAAsB,WAAtB,EAAmC,IAAnC,CANvB,EAMiEH,QAAQ,CAAC,MAAD,CANzE,EAOKM,KAPL,CAOW,eAPX,EAO4BH,EAAE,CAAC,QAAD,EAAW,SAAX,EAAsB,WAAtB,EAAmC,IAAnC,CAP9B,EAOwEH,QAAQ,CAAC,MAAD,CAPhF,EAQKM,KARL,CAQW,YARX,EAQyBH,EAAE,CAAC,CAACF,GAAG,CAAC,WAAD,CAAJ,CAAD,EAAqB,IAArB,CAR3B,EAQuDD,QAAQ,CAAC,MAAD,CAR/D,EASKM,KATL,CASW,UATX,EASuBH,EAAE,CAACU,OAAD,EAAU,IAAV,CATzB,EAS0Cb,QAAQ,CAAC,MAAD,CATlD;AAUH,GAbD;AAcAC,EAAAA,GAAG,CAAC,sBAAD,CAAH,CACKG,KADL,CACW,eADX,EAEKC,KAFL,CAEW,KAFX,EAEkB,OAFlB,EAGKC,KAHL,CAGW,KAHX,EAGkBL,GAAG,CAAC,aAAD,CAHrB,EAIKK,KAJL,CAIW,OAJX,EAIoBH,EAAE,CAACF,GAAG,CAAC,YAAD,CAAJ,EAAoB,IAApB,CAJtB,EAIiDD,QAAQ,CAAC,MAAD,CAJzD;AAKAC,EAAAA,GAAG,CAAC,aAAD,CAAH,CACKG,KADL,CACW,YADX,EACyB,SADzB,EAEKC,KAFL,CAEW,IAFX,EAGKC,KAHL,CAGW,IAHX,EAGiBL,GAAG,CAAC,YAAD,CAHpB;AAIA,MAAIoB,qBAAqB,GAAGlB,EAAE,CAACF,GAAG,CAAC,UAAD,CAAJ,EAAkBA,GAAG,CAAC,iBAAD,CAArB,EAA0CA,GAAG,CAAC,uBAAD,CAA7C,EAAwEA,GAAG,CAAC,gBAAD,CAA3E,EAA+F;AAC7HA,EAAAA,GAAG,CAAC,gBAAD,CAD2B,EACP;AACvBA,EAAAA,GAAG,CAAC,cAAD,CAF2B,CAEV;AAFU,GAA9B,CA3NqB,CA+NrB;;AACAA,EAAAA,GAAG,CAAC,eAAD,CAAH,CACKG,KADL,CACW,SADX,EAEKC,KAFL,CAEW,YAFX,EAGKC,KAHL,CAGW,YAHX,EAGyB,CAACe,qBAAD,CAHzB,EAIKf,KAJL,CAIW,YAJX,EAIyBH,EAAE,CAAC,CAACF,GAAG,CAAC,WAAD,CAAJ,CAAD,EAAqB,IAArB,CAJ3B,EAIuDD,QAAQ,CAAC,MAAD,CAJ/D;AAKAC,EAAAA,GAAG,CAAC,gBAAD,CAAH,CACKG,KADL,CACW,MADX,EAEKC,KAFL,CAEW,UAFX,EAGKC,KAHL,CAGW,UAHX,EAGuBL,GAAG,CAAC,YAAD,CAH1B;AAIAA,EAAAA,GAAG,CAAC,cAAD,CAAH,CACKG,KADL,CACW,MADX,EAEKC,KAFL,CAEW,UAFX,EAGKC,KAHL,CAGW,UAHX,EAGuBL,GAAG,CAAC,YAAD,CAH1B;AAIAA,EAAAA,GAAG,CAAC,mBAAD,CAAH,CACKG,KADL,CACW,WADX,EAEKC,KAFL,CAEW,MAFX,EAEmB,OAFnB,EAE4B,MAF5B,EAGKC,KAHL,CAGW,MAHX,EAGmBH,EAAE,CAACF,GAAG,CAAC,qBAAD,CAAJ,EAA6BA,GAAG,CAAC,YAAD,CAAhC,CAHrB,EAIKK,KAJL,CAIW,OAJX,EAIoBL,GAAG,CAAC,YAAD,CAJvB,EAKKK,KALL,CAKW,MALX,EAKmBL,GAAG,CAAC,WAAD,CALtB,EA7OqB,CAmPrB;;AACAA,EAAAA,GAAG,CAAC,QAAD,CAAH,CACKG,KADL,CACW,YADX,EAEKC,KAFL;AAGH;;AACDlB,OAAO,CAACW,OAAR,GAAkBH,SAAlB;AACA2B,MAAM,CAACnC,OAAP,GAAiBA,OAAO,CAAC,SAAD,CAAxB","sourcesContent":["\"use strict\";;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar types_1 = tslib_1.__importDefault(require(\"../lib/types\"));\nvar shared_1 = tslib_1.__importDefault(require(\"../lib/shared\"));\nvar es7_1 = tslib_1.__importDefault(require(\"./es7\"));\nfunction default_1(fork) {\n    fork.use(es7_1.default);\n    var types = fork.use(types_1.default);\n    var defaults = fork.use(shared_1.default).defaults;\n    var def = types.Type.def;\n    var or = types.Type.or;\n    def(\"Noop\")\n        .bases(\"Statement\")\n        .build();\n    def(\"DoExpression\")\n        .bases(\"Expression\")\n        .build(\"body\")\n        .field(\"body\", [def(\"Statement\")]);\n    def(\"Super\")\n        .bases(\"Expression\")\n        .build();\n    def(\"BindExpression\")\n        .bases(\"Expression\")\n        .build(\"object\", \"callee\")\n        .field(\"object\", or(def(\"Expression\"), null))\n        .field(\"callee\", def(\"Expression\"));\n    def(\"Decorator\")\n        .bases(\"Node\")\n        .build(\"expression\")\n        .field(\"expression\", def(\"Expression\"));\n    def(\"Property\")\n        .field(\"decorators\", or([def(\"Decorator\")], null), defaults[\"null\"]);\n    def(\"MethodDefinition\")\n        .field(\"decorators\", or([def(\"Decorator\")], null), defaults[\"null\"]);\n    def(\"MetaProperty\")\n        .bases(\"Expression\")\n        .build(\"meta\", \"property\")\n        .field(\"meta\", def(\"Identifier\"))\n        .field(\"property\", def(\"Identifier\"));\n    def(\"ParenthesizedExpression\")\n        .bases(\"Expression\")\n        .build(\"expression\")\n        .field(\"expression\", def(\"Expression\"));\n    def(\"ImportSpecifier\")\n        .bases(\"ModuleSpecifier\")\n        .build(\"imported\", \"local\")\n        .field(\"imported\", def(\"Identifier\"));\n    def(\"ImportDefaultSpecifier\")\n        .bases(\"ModuleSpecifier\")\n        .build(\"local\");\n    def(\"ImportNamespaceSpecifier\")\n        .bases(\"ModuleSpecifier\")\n        .build(\"local\");\n    def(\"ExportDefaultDeclaration\")\n        .bases(\"Declaration\")\n        .build(\"declaration\")\n        .field(\"declaration\", or(def(\"Declaration\"), def(\"Expression\")));\n    def(\"ExportNamedDeclaration\")\n        .bases(\"Declaration\")\n        .build(\"declaration\", \"specifiers\", \"source\")\n        .field(\"declaration\", or(def(\"Declaration\"), null))\n        .field(\"specifiers\", [def(\"ExportSpecifier\")], defaults.emptyArray)\n        .field(\"source\", or(def(\"Literal\"), null), defaults[\"null\"]);\n    def(\"ExportSpecifier\")\n        .bases(\"ModuleSpecifier\")\n        .build(\"local\", \"exported\")\n        .field(\"exported\", def(\"Identifier\"));\n    def(\"ExportNamespaceSpecifier\")\n        .bases(\"Specifier\")\n        .build(\"exported\")\n        .field(\"exported\", def(\"Identifier\"));\n    def(\"ExportDefaultSpecifier\")\n        .bases(\"Specifier\")\n        .build(\"exported\")\n        .field(\"exported\", def(\"Identifier\"));\n    def(\"ExportAllDeclaration\")\n        .bases(\"Declaration\")\n        .build(\"exported\", \"source\")\n        .field(\"exported\", or(def(\"Identifier\"), null))\n        .field(\"source\", def(\"Literal\"));\n    def(\"CommentBlock\")\n        .bases(\"Comment\")\n        .build(\"value\", /*optional:*/ \"leading\", \"trailing\");\n    def(\"CommentLine\")\n        .bases(\"Comment\")\n        .build(\"value\", /*optional:*/ \"leading\", \"trailing\");\n    def(\"Directive\")\n        .bases(\"Node\")\n        .build(\"value\")\n        .field(\"value\", def(\"DirectiveLiteral\"));\n    def(\"DirectiveLiteral\")\n        .bases(\"Node\", \"Expression\")\n        .build(\"value\")\n        .field(\"value\", String, defaults[\"use strict\"]);\n    def(\"InterpreterDirective\")\n        .bases(\"Node\")\n        .build(\"value\")\n        .field(\"value\", String);\n    def(\"BlockStatement\")\n        .bases(\"Statement\")\n        .build(\"body\")\n        .field(\"body\", [def(\"Statement\")])\n        .field(\"directives\", [def(\"Directive\")], defaults.emptyArray);\n    def(\"Program\")\n        .bases(\"Node\")\n        .build(\"body\")\n        .field(\"body\", [def(\"Statement\")])\n        .field(\"directives\", [def(\"Directive\")], defaults.emptyArray)\n        .field(\"interpreter\", or(def(\"InterpreterDirective\"), null), defaults[\"null\"]);\n    // Split Literal\n    def(\"StringLiteral\")\n        .bases(\"Literal\")\n        .build(\"value\")\n        .field(\"value\", String);\n    def(\"NumericLiteral\")\n        .bases(\"Literal\")\n        .build(\"value\")\n        .field(\"value\", Number)\n        .field(\"raw\", or(String, null), defaults[\"null\"])\n        .field(\"extra\", {\n        rawValue: Number,\n        raw: String\n    }, function getDefault() {\n        return {\n            rawValue: this.value,\n            raw: this.value + \"\"\n        };\n    });\n    def(\"BigIntLiteral\")\n        .bases(\"Literal\")\n        .build(\"value\")\n        // Only String really seems appropriate here, since BigInt values\n        // often exceed the limits of JS numbers.\n        .field(\"value\", or(String, Number))\n        .field(\"extra\", {\n        rawValue: String,\n        raw: String\n    }, function getDefault() {\n        return {\n            rawValue: String(this.value),\n            raw: this.value + \"n\"\n        };\n    });\n    def(\"NullLiteral\")\n        .bases(\"Literal\")\n        .build()\n        .field(\"value\", null, defaults[\"null\"]);\n    def(\"BooleanLiteral\")\n        .bases(\"Literal\")\n        .build(\"value\")\n        .field(\"value\", Boolean);\n    def(\"RegExpLiteral\")\n        .bases(\"Literal\")\n        .build(\"pattern\", \"flags\")\n        .field(\"pattern\", String)\n        .field(\"flags\", String)\n        .field(\"value\", RegExp, function () {\n        return new RegExp(this.pattern, this.flags);\n    });\n    var ObjectExpressionProperty = or(def(\"Property\"), def(\"ObjectMethod\"), def(\"ObjectProperty\"), def(\"SpreadProperty\"), def(\"SpreadElement\"));\n    // Split Property -> ObjectProperty and ObjectMethod\n    def(\"ObjectExpression\")\n        .bases(\"Expression\")\n        .build(\"properties\")\n        .field(\"properties\", [ObjectExpressionProperty]);\n    // ObjectMethod hoist .value properties to own properties\n    def(\"ObjectMethod\")\n        .bases(\"Node\", \"Function\")\n        .build(\"kind\", \"key\", \"params\", \"body\", \"computed\")\n        .field(\"kind\", or(\"method\", \"get\", \"set\"))\n        .field(\"key\", or(def(\"Literal\"), def(\"Identifier\"), def(\"Expression\")))\n        .field(\"params\", [def(\"Pattern\")])\n        .field(\"body\", def(\"BlockStatement\"))\n        .field(\"computed\", Boolean, defaults[\"false\"])\n        .field(\"generator\", Boolean, defaults[\"false\"])\n        .field(\"async\", Boolean, defaults[\"false\"])\n        .field(\"accessibility\", // TypeScript\n    or(def(\"Literal\"), null), defaults[\"null\"])\n        .field(\"decorators\", or([def(\"Decorator\")], null), defaults[\"null\"]);\n    def(\"ObjectProperty\")\n        .bases(\"Node\")\n        .build(\"key\", \"value\")\n        .field(\"key\", or(def(\"Literal\"), def(\"Identifier\"), def(\"Expression\")))\n        .field(\"value\", or(def(\"Expression\"), def(\"Pattern\")))\n        .field(\"accessibility\", // TypeScript\n    or(def(\"Literal\"), null), defaults[\"null\"])\n        .field(\"computed\", Boolean, defaults[\"false\"]);\n    var ClassBodyElement = or(def(\"MethodDefinition\"), def(\"VariableDeclarator\"), def(\"ClassPropertyDefinition\"), def(\"ClassProperty\"), def(\"ClassPrivateProperty\"), def(\"ClassMethod\"), def(\"ClassPrivateMethod\"));\n    // MethodDefinition -> ClassMethod\n    def(\"ClassBody\")\n        .bases(\"Declaration\")\n        .build(\"body\")\n        .field(\"body\", [ClassBodyElement]);\n    def(\"ClassMethod\")\n        .bases(\"Declaration\", \"Function\")\n        .build(\"kind\", \"key\", \"params\", \"body\", \"computed\", \"static\")\n        .field(\"key\", or(def(\"Literal\"), def(\"Identifier\"), def(\"Expression\")));\n    def(\"ClassPrivateMethod\")\n        .bases(\"Declaration\", \"Function\")\n        .build(\"key\", \"params\", \"body\", \"kind\", \"computed\", \"static\")\n        .field(\"key\", def(\"PrivateName\"));\n    [\"ClassMethod\",\n        \"ClassPrivateMethod\",\n    ].forEach(function (typeName) {\n        def(typeName)\n            .field(\"kind\", or(\"get\", \"set\", \"method\", \"constructor\"), function () { return \"method\"; })\n            .field(\"body\", def(\"BlockStatement\"))\n            .field(\"computed\", Boolean, defaults[\"false\"])\n            .field(\"static\", or(Boolean, null), defaults[\"null\"])\n            .field(\"abstract\", or(Boolean, null), defaults[\"null\"])\n            .field(\"access\", or(\"public\", \"private\", \"protected\", null), defaults[\"null\"])\n            .field(\"accessibility\", or(\"public\", \"private\", \"protected\", null), defaults[\"null\"])\n            .field(\"decorators\", or([def(\"Decorator\")], null), defaults[\"null\"])\n            .field(\"optional\", or(Boolean, null), defaults[\"null\"]);\n    });\n    def(\"ClassPrivateProperty\")\n        .bases(\"ClassProperty\")\n        .build(\"key\", \"value\")\n        .field(\"key\", def(\"PrivateName\"))\n        .field(\"value\", or(def(\"Expression\"), null), defaults[\"null\"]);\n    def(\"PrivateName\")\n        .bases(\"Expression\", \"Pattern\")\n        .build(\"id\")\n        .field(\"id\", def(\"Identifier\"));\n    var ObjectPatternProperty = or(def(\"Property\"), def(\"PropertyPattern\"), def(\"SpreadPropertyPattern\"), def(\"SpreadProperty\"), // Used by Esprima\n    def(\"ObjectProperty\"), // Babel 6\n    def(\"RestProperty\") // Babel 6\n    );\n    // Split into RestProperty and SpreadProperty\n    def(\"ObjectPattern\")\n        .bases(\"Pattern\")\n        .build(\"properties\")\n        .field(\"properties\", [ObjectPatternProperty])\n        .field(\"decorators\", or([def(\"Decorator\")], null), defaults[\"null\"]);\n    def(\"SpreadProperty\")\n        .bases(\"Node\")\n        .build(\"argument\")\n        .field(\"argument\", def(\"Expression\"));\n    def(\"RestProperty\")\n        .bases(\"Node\")\n        .build(\"argument\")\n        .field(\"argument\", def(\"Expression\"));\n    def(\"ForAwaitStatement\")\n        .bases(\"Statement\")\n        .build(\"left\", \"right\", \"body\")\n        .field(\"left\", or(def(\"VariableDeclaration\"), def(\"Expression\")))\n        .field(\"right\", def(\"Expression\"))\n        .field(\"body\", def(\"Statement\"));\n    // The callee node of a dynamic import(...) expression.\n    def(\"Import\")\n        .bases(\"Expression\")\n        .build();\n}\nexports.default = default_1;\nmodule.exports = exports[\"default\"];\n"]},"metadata":{},"sourceType":"script"}