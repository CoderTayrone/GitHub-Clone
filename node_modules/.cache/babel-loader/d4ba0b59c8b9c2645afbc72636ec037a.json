{"ast":null,"code":"\"use strict\";\n\nvar forEach = require(\"es5-ext/object/for-each\"),\n    normalizeOpts = require(\"es5-ext/object/normalize-options\"),\n    callable = require(\"es5-ext/object/valid-callable\"),\n    lazy = require(\"d/lazy\"),\n    resolveLength = require(\"./resolve-length\"),\n    extensions = require(\"./registered-extensions\");\n\nmodule.exports = function (memoize) {\n  return function (props) {\n    forEach(props, function (desc) {\n      var fn = callable(desc.value),\n          length;\n\n      desc.value = function (options) {\n        if (options.getNormalizer) {\n          options = normalizeOpts(options);\n\n          if (length === undefined) {\n            length = resolveLength(options.length, fn.length, options.async && extensions.async);\n          }\n\n          options.normalizer = options.getNormalizer(length);\n          delete options.getNormalizer;\n        }\n\n        return memoize(fn.bind(this), options);\n      };\n    });\n    return lazy(props);\n  };\n};","map":{"version":3,"sources":["/home/dev/Documentos/Projects/github-clone/node_modules/memoizee/lib/methods.js"],"names":["forEach","require","normalizeOpts","callable","lazy","resolveLength","extensions","module","exports","memoize","props","desc","fn","value","length","options","getNormalizer","undefined","async","normalizer","bind"],"mappings":"AAAA;;AAEA,IAAIA,OAAO,GAASC,OAAO,CAAC,yBAAD,CAA3B;AAAA,IACIC,aAAa,GAAGD,OAAO,CAAC,kCAAD,CAD3B;AAAA,IAEIE,QAAQ,GAAQF,OAAO,CAAC,+BAAD,CAF3B;AAAA,IAGIG,IAAI,GAAYH,OAAO,CAAC,QAAD,CAH3B;AAAA,IAIII,aAAa,GAAGJ,OAAO,CAAC,kBAAD,CAJ3B;AAAA,IAKIK,UAAU,GAAML,OAAO,CAAC,yBAAD,CAL3B;;AAOAM,MAAM,CAACC,OAAP,GAAiB,UAAUC,OAAV,EAAmB;AACnC,SAAO,UAAUC,KAAV,EAAiB;AACvBV,IAAAA,OAAO,CAACU,KAAD,EAAQ,UAAUC,IAAV,EAAgB;AAC9B,UAAIC,EAAE,GAAGT,QAAQ,CAACQ,IAAI,CAACE,KAAN,CAAjB;AAAA,UAA+BC,MAA/B;;AACAH,MAAAA,IAAI,CAACE,KAAL,GAAa,UAAUE,OAAV,EAAmB;AAC/B,YAAIA,OAAO,CAACC,aAAZ,EAA2B;AAC1BD,UAAAA,OAAO,GAAGb,aAAa,CAACa,OAAD,CAAvB;;AACA,cAAID,MAAM,KAAKG,SAAf,EAA0B;AACzBH,YAAAA,MAAM,GAAGT,aAAa,CACrBU,OAAO,CAACD,MADa,EAErBF,EAAE,CAACE,MAFkB,EAGrBC,OAAO,CAACG,KAAR,IAAiBZ,UAAU,CAACY,KAHP,CAAtB;AAKA;;AACDH,UAAAA,OAAO,CAACI,UAAR,GAAqBJ,OAAO,CAACC,aAAR,CAAsBF,MAAtB,CAArB;AACA,iBAAOC,OAAO,CAACC,aAAf;AACA;;AACD,eAAOP,OAAO,CAACG,EAAE,CAACQ,IAAH,CAAQ,IAAR,CAAD,EAAgBL,OAAhB,CAAd;AACA,OAdD;AAeA,KAjBM,CAAP;AAkBA,WAAOX,IAAI,CAACM,KAAD,CAAX;AACA,GApBD;AAqBA,CAtBD","sourcesContent":["\"use strict\";\n\nvar forEach       = require(\"es5-ext/object/for-each\")\n  , normalizeOpts = require(\"es5-ext/object/normalize-options\")\n  , callable      = require(\"es5-ext/object/valid-callable\")\n  , lazy          = require(\"d/lazy\")\n  , resolveLength = require(\"./resolve-length\")\n  , extensions    = require(\"./registered-extensions\");\n\nmodule.exports = function (memoize) {\n\treturn function (props) {\n\t\tforEach(props, function (desc) {\n\t\t\tvar fn = callable(desc.value), length;\n\t\t\tdesc.value = function (options) {\n\t\t\t\tif (options.getNormalizer) {\n\t\t\t\t\toptions = normalizeOpts(options);\n\t\t\t\t\tif (length === undefined) {\n\t\t\t\t\t\tlength = resolveLength(\n\t\t\t\t\t\t\toptions.length,\n\t\t\t\t\t\t\tfn.length,\n\t\t\t\t\t\t\toptions.async && extensions.async\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t\toptions.normalizer = options.getNormalizer(length);\n\t\t\t\t\tdelete options.getNormalizer;\n\t\t\t\t}\n\t\t\t\treturn memoize(fn.bind(this), options);\n\t\t\t};\n\t\t});\n\t\treturn lazy(props);\n\t};\n};\n"]},"metadata":{},"sourceType":"script"}