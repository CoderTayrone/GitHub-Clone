{"ast":null,"code":"\"use strict\";\n\nvar push = Array.prototype.push,\n    reduce = Array.prototype.reduce,\n    abs = Math.abs,\n    colors,\n    match,\n    result,\n    i;\ncolors = require(\"./xterm-colors\").map(function (color) {\n  return {\n    r: parseInt(color.slice(0, 2), 16),\n    g: parseInt(color.slice(2, 4), 16),\n    b: parseInt(color.slice(4), 16)\n  };\n});\nmatch = colors.slice(0, 16);\nmodule.exports = result = [];\ni = 0;\n\nwhile (i < 8) {\n  result.push(30 + i++);\n}\n\ni = 0;\n\nwhile (i < 8) {\n  result.push(90 + i++);\n}\n\npush.apply(result, colors.slice(16).map(function (data) {\n  var index,\n      diff = Infinity;\n  match.every(function (innerMatch, currentIndex) {\n    var ndiff = reduce.call(\"rgb\", function (currentDiff, channel) {\n      currentDiff += abs(innerMatch[channel] - data[channel]);\n      return currentDiff;\n    }, 0);\n\n    if (ndiff < diff) {\n      index = currentIndex;\n      diff = ndiff;\n    }\n\n    return ndiff;\n  });\n  return result[index];\n}));","map":{"version":3,"sources":["/home/dev/Documentos/Projects/github-clone/node_modules/cli-color/lib/xterm-match.js"],"names":["push","Array","prototype","reduce","abs","Math","colors","match","result","i","require","map","color","r","parseInt","slice","g","b","module","exports","apply","data","index","diff","Infinity","every","innerMatch","currentIndex","ndiff","call","currentDiff","channel"],"mappings":"AAAA;;AAEA,IAAIA,IAAI,GAAGC,KAAK,CAACC,SAAN,CAAgBF,IAA3B;AAAA,IACIG,MAAM,GAAGF,KAAK,CAACC,SAAN,CAAgBC,MAD7B;AAAA,IAEIC,GAAG,GAAGC,IAAI,CAACD,GAFf;AAAA,IAGIE,MAHJ;AAAA,IAIIC,KAJJ;AAAA,IAKIC,MALJ;AAAA,IAMIC,CANJ;AAQAH,MAAM,GAAGI,OAAO,CAAC,gBAAD,CAAP,CAA0BC,GAA1B,CAA8B,UAAUC,KAAV,EAAiB;AACvD,SAAO;AACNC,IAAAA,CAAC,EAAEC,QAAQ,CAACF,KAAK,CAACG,KAAN,CAAY,CAAZ,EAAe,CAAf,CAAD,EAAoB,EAApB,CADL;AAENC,IAAAA,CAAC,EAAEF,QAAQ,CAACF,KAAK,CAACG,KAAN,CAAY,CAAZ,EAAe,CAAf,CAAD,EAAoB,EAApB,CAFL;AAGNE,IAAAA,CAAC,EAAEH,QAAQ,CAACF,KAAK,CAACG,KAAN,CAAY,CAAZ,CAAD,EAAiB,EAAjB;AAHL,GAAP;AAKA,CANQ,CAAT;AAQAR,KAAK,GAAGD,MAAM,CAACS,KAAP,CAAa,CAAb,EAAgB,EAAhB,CAAR;AAEAG,MAAM,CAACC,OAAP,GAAiBX,MAAM,GAAG,EAA1B;AAEAC,CAAC,GAAG,CAAJ;;AACA,OAAOA,CAAC,GAAG,CAAX,EAAc;AACbD,EAAAA,MAAM,CAACR,IAAP,CAAY,KAAKS,CAAC,EAAlB;AACA;;AACDA,CAAC,GAAG,CAAJ;;AACA,OAAOA,CAAC,GAAG,CAAX,EAAc;AACbD,EAAAA,MAAM,CAACR,IAAP,CAAY,KAAKS,CAAC,EAAlB;AACA;;AACDT,IAAI,CAACoB,KAAL,CACCZ,MADD,EAECF,MAAM,CAACS,KAAP,CAAa,EAAb,EAAiBJ,GAAjB,CAAqB,UAAUU,IAAV,EAAgB;AACpC,MAAIC,KAAJ;AAAA,MAAWC,IAAI,GAAGC,QAAlB;AACAjB,EAAAA,KAAK,CAACkB,KAAN,CAAY,UAAUC,UAAV,EAAsBC,YAAtB,EAAoC;AAC/C,QAAIC,KAAK,GAAGzB,MAAM,CAAC0B,IAAP,CACX,KADW,EAEX,UAAUC,WAAV,EAAuBC,OAAvB,EAAgC;AAC/BD,MAAAA,WAAW,IAAI1B,GAAG,CAACsB,UAAU,CAACK,OAAD,CAAV,GAAsBV,IAAI,CAACU,OAAD,CAA3B,CAAlB;AACA,aAAOD,WAAP;AACA,KALU,EAMX,CANW,CAAZ;;AAQA,QAAIF,KAAK,GAAGL,IAAZ,EAAkB;AACjBD,MAAAA,KAAK,GAAGK,YAAR;AACAJ,MAAAA,IAAI,GAAGK,KAAP;AACA;;AACD,WAAOA,KAAP;AACA,GAdD;AAeA,SAAOpB,MAAM,CAACc,KAAD,CAAb;AACA,CAlBD,CAFD","sourcesContent":["\"use strict\";\n\nvar push = Array.prototype.push\n  , reduce = Array.prototype.reduce\n  , abs = Math.abs\n  , colors\n  , match\n  , result\n  , i;\n\ncolors = require(\"./xterm-colors\").map(function (color) {\n\treturn {\n\t\tr: parseInt(color.slice(0, 2), 16),\n\t\tg: parseInt(color.slice(2, 4), 16),\n\t\tb: parseInt(color.slice(4), 16)\n\t};\n});\n\nmatch = colors.slice(0, 16);\n\nmodule.exports = result = [];\n\ni = 0;\nwhile (i < 8) {\n\tresult.push(30 + i++);\n}\ni = 0;\nwhile (i < 8) {\n\tresult.push(90 + i++);\n}\npush.apply(\n\tresult,\n\tcolors.slice(16).map(function (data) {\n\t\tvar index, diff = Infinity;\n\t\tmatch.every(function (innerMatch, currentIndex) {\n\t\t\tvar ndiff = reduce.call(\n\t\t\t\t\"rgb\",\n\t\t\t\tfunction (currentDiff, channel) {\n\t\t\t\t\tcurrentDiff += abs(innerMatch[channel] - data[channel]);\n\t\t\t\t\treturn currentDiff;\n\t\t\t\t},\n\t\t\t\t0\n\t\t\t);\n\t\t\tif (ndiff < diff) {\n\t\t\t\tindex = currentIndex;\n\t\t\t\tdiff = ndiff;\n\t\t\t}\n\t\t\treturn ndiff;\n\t\t});\n\t\treturn result[index];\n\t})\n);\n"]},"metadata":{},"sourceType":"script"}