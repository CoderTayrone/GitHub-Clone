{"ast":null,"code":"var path = require('path');\n\nvar urlJoin = require('url-join');\n\nvar asArray = require('as-array');\n\nvar validUrl = require('valid-url');\n\nvar exports = module.exports = function () {\n  var paths = asArray(arguments).map(replaceUndefined);\n  return validUrl.isUri(paths[0]) ? urlJoin.apply(urlJoin, paths) : path.join.apply(path, paths);\n};\n\nvar isUrl = exports.isUrl = function (url) {\n  return validUrl.isUri(url) || url === 'http://' || url === 'https://' || url === 'ftp://';\n};\n\nvar replaceUndefined = exports.replaceUndefined = function (p, idx, paths) {\n  return p === undefined || p === null ? validUrl.isUri(paths[0]) ? '/' : path.sep : p;\n};","map":{"version":3,"sources":["/home/dev/Documentos/Projects/github-clone/node_modules/join-path/index.js"],"names":["path","require","urlJoin","asArray","validUrl","exports","module","paths","arguments","map","replaceUndefined","isUri","apply","join","isUrl","url","p","idx","undefined","sep"],"mappings":"AAAA,IAAIA,IAAI,GAAGC,OAAO,CAAC,MAAD,CAAlB;;AAEA,IAAIC,OAAO,GAAGD,OAAO,CAAC,UAAD,CAArB;;AACA,IAAIE,OAAO,GAAGF,OAAO,CAAC,UAAD,CAArB;;AACA,IAAIG,QAAQ,GAAGH,OAAO,CAAC,WAAD,CAAtB;;AAEA,IAAII,OAAO,GAAGC,MAAM,CAACD,OAAP,GAAiB,YAAY;AAEzC,MAAIE,KAAK,GAAGJ,OAAO,CAACK,SAAD,CAAP,CAAmBC,GAAnB,CAAuBC,gBAAvB,CAAZ;AAEA,SAAON,QAAQ,CAACO,KAAT,CAAeJ,KAAK,CAAC,CAAD,CAApB,IACHL,OAAO,CAACU,KAAR,CAAcV,OAAd,EAAuBK,KAAvB,CADG,GAEHP,IAAI,CAACa,IAAL,CAAUD,KAAV,CAAgBZ,IAAhB,EAAsBO,KAAtB,CAFJ;AAGD,CAPD;;AASA,IAAIO,KAAK,GAAGT,OAAO,CAACS,KAAR,GAAgB,UAAUC,GAAV,EAAe;AAEzC,SAAOX,QAAQ,CAACO,KAAT,CAAeI,GAAf,KACFA,GAAG,KAAK,SADN,IAEFA,GAAG,KAAK,UAFN,IAGFA,GAAG,KAAK,QAHb;AAID,CAND;;AAQA,IAAIL,gBAAgB,GAAGL,OAAO,CAACK,gBAAR,GAA2B,UAAUM,CAAV,EAAaC,GAAb,EAAkBV,KAAlB,EAAyB;AAEzE,SAASS,CAAC,KAAKE,SAAN,IAAmBF,CAAC,KAAK,IAA1B,GACJZ,QAAQ,CAACO,KAAT,CAAeJ,KAAK,CAAC,CAAD,CAApB,IAA2B,GAA3B,GAAiCP,IAAI,CAACmB,GADlC,GAEJH,CAFJ;AAGD,CALD","sourcesContent":["var path = require('path');\n\nvar urlJoin = require('url-join');\nvar asArray = require('as-array');\nvar validUrl = require('valid-url');\n\nvar exports = module.exports = function () {\n\n  var paths = asArray(arguments).map(replaceUndefined);\n\n  return validUrl.isUri(paths[0])\n    ? urlJoin.apply(urlJoin, paths)\n    : path.join.apply(path, paths);\n};\n\nvar isUrl = exports.isUrl = function (url) {\n\n  return validUrl.isUri(url)\n    || url === 'http://'\n    || url === 'https://'\n    || url === 'ftp://';\n};\n\nvar replaceUndefined = exports.replaceUndefined = function (p, idx, paths) {\n\n  return  (p === undefined || p === null)\n    ? validUrl.isUri(paths[0]) ? '/' : path.sep\n    : p;\n}\n"]},"metadata":{},"sourceType":"script"}