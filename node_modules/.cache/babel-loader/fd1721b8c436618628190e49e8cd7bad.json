{"ast":null,"code":"var bigInt = require('big-integer');\n\nvar Stream = require('stream'); // Backwards compatibility for node versions < 8\n\n\nif (!Stream.Writable || !Stream.Writable.prototype.destroy) Stream = require('readable-stream');\nvar table;\n\nfunction generateTable() {\n  var poly = 0xEDB88320,\n      c,\n      n,\n      k;\n  table = [];\n\n  for (n = 0; n < 256; n++) {\n    c = n;\n\n    for (k = 0; k < 8; k++) c = c & 1 ? poly ^ c >>> 1 : c = c >>> 1;\n\n    table[n] = c >>> 0;\n  }\n}\n\nfunction crc(ch, crc) {\n  if (!table) generateTable();\n  if (ch.charCodeAt) ch = ch.charCodeAt(0);\n  return bigInt(crc).shiftRight(8).and(0xffffff).xor(table[bigInt(crc).xor(ch).and(0xff)]).value;\n}\n\nfunction Decrypt() {\n  if (!(this instanceof Decrypt)) return new Decrypt();\n  this.key0 = 305419896;\n  this.key1 = 591751049;\n  this.key2 = 878082192;\n}\n\nDecrypt.prototype.update = function (h) {\n  this.key0 = crc(h, this.key0);\n  this.key1 = bigInt(this.key0).and(255).and(4294967295).add(this.key1);\n  this.key1 = bigInt(this.key1).multiply(134775813).add(1).and(4294967295).value;\n  this.key2 = crc(bigInt(this.key1).shiftRight(24).and(255), this.key2);\n};\n\nDecrypt.prototype.decryptByte = function (c) {\n  var k = bigInt(this.key2).or(2);\n  c = c ^ bigInt(k).multiply(bigInt(k ^ 1)).shiftRight(8).and(255);\n  this.update(c);\n  return c;\n};\n\nDecrypt.prototype.stream = function () {\n  var stream = Stream.Transform(),\n      self = this;\n\n  stream._transform = function (d, e, cb) {\n    for (var i = 0; i < d.length; i++) {\n      d[i] = self.decryptByte(d[i]);\n    }\n\n    this.push(d);\n    cb();\n  };\n\n  return stream;\n};\n\nmodule.exports = Decrypt;","map":{"version":3,"sources":["/home/dev/Documentos/Projects/github-clone/node_modules/unzipper/lib/Decrypt.js"],"names":["bigInt","require","Stream","Writable","prototype","destroy","table","generateTable","poly","c","n","k","crc","ch","charCodeAt","shiftRight","and","xor","value","Decrypt","key0","key1","key2","update","h","add","multiply","decryptByte","or","stream","Transform","self","_transform","d","e","cb","i","length","push","module","exports"],"mappings":"AAAA,IAAIA,MAAM,GAAGC,OAAO,CAAC,aAAD,CAApB;;AACA,IAAIC,MAAM,GAAGD,OAAO,CAAC,QAAD,CAApB,C,CAEA;;;AACA,IAAI,CAACC,MAAM,CAACC,QAAR,IAAoB,CAACD,MAAM,CAACC,QAAP,CAAgBC,SAAhB,CAA0BC,OAAnD,EACEH,MAAM,GAAGD,OAAO,CAAC,iBAAD,CAAhB;AAEF,IAAIK,KAAJ;;AAEA,SAASC,aAAT,GAAyB;AACvB,MAAIC,IAAI,GAAG,UAAX;AAAA,MAAsBC,CAAtB;AAAA,MAAwBC,CAAxB;AAAA,MAA0BC,CAA1B;AACAL,EAAAA,KAAK,GAAG,EAAR;;AACA,OAAKI,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAG,GAAhB,EAAqBA,CAAC,EAAtB,EAA0B;AACxBD,IAAAA,CAAC,GAAGC,CAAJ;;AACA,SAAKC,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAG,CAAhB,EAAmBA,CAAC,EAApB,EACEF,CAAC,GAAIA,CAAC,GAAG,CAAL,GAAUD,IAAI,GAAIC,CAAC,KAAK,CAAxB,GAA8BA,CAAC,GAAGA,CAAC,KAAK,CAA5C;;AACFH,IAAAA,KAAK,CAACI,CAAD,CAAL,GAAWD,CAAC,KAAK,CAAjB;AACD;AACF;;AAED,SAASG,GAAT,CAAaC,EAAb,EAAgBD,GAAhB,EAAqB;AACnB,MAAI,CAACN,KAAL,EACEC,aAAa;AAEf,MAAIM,EAAE,CAACC,UAAP,EACED,EAAE,GAAGA,EAAE,CAACC,UAAH,CAAc,CAAd,CAAL;AAEF,SAAQd,MAAM,CAACY,GAAD,CAAN,CAAYG,UAAZ,CAAuB,CAAvB,EAA0BC,GAA1B,CAA8B,QAA9B,CAAD,CAA0CC,GAA1C,CAA8CX,KAAK,CAACN,MAAM,CAACY,GAAD,CAAN,CAAYK,GAAZ,CAAgBJ,EAAhB,EAAoBG,GAApB,CAAwB,IAAxB,CAAD,CAAnD,EAAoFE,KAA3F;AACD;;AAED,SAASC,OAAT,GAAmB;AACjB,MAAI,EAAE,gBAAgBA,OAAlB,CAAJ,EACE,OAAO,IAAIA,OAAJ,EAAP;AAEF,OAAKC,IAAL,GAAY,SAAZ;AACA,OAAKC,IAAL,GAAY,SAAZ;AACA,OAAKC,IAAL,GAAY,SAAZ;AACD;;AAEDH,OAAO,CAACf,SAAR,CAAkBmB,MAAlB,GAA2B,UAASC,CAAT,EAAY;AACrC,OAAKJ,IAAL,GAAYR,GAAG,CAACY,CAAD,EAAG,KAAKJ,IAAR,CAAf;AACA,OAAKC,IAAL,GAAYrB,MAAM,CAAC,KAAKoB,IAAN,CAAN,CAAkBJ,GAAlB,CAAsB,GAAtB,EAA2BA,GAA3B,CAA+B,UAA/B,EAA2CS,GAA3C,CAA+C,KAAKJ,IAApD,CAAZ;AACA,OAAKA,IAAL,GAAYrB,MAAM,CAAC,KAAKqB,IAAN,CAAN,CAAkBK,QAAlB,CAA2B,SAA3B,EAAsCD,GAAtC,CAA0C,CAA1C,EAA6CT,GAA7C,CAAiD,UAAjD,EAA6DE,KAAzE;AACA,OAAKI,IAAL,GAAYV,GAAG,CAACZ,MAAM,CAAC,KAAKqB,IAAN,CAAN,CAAkBN,UAAlB,CAA6B,EAA7B,EAAiCC,GAAjC,CAAqC,GAArC,CAAD,EAA4C,KAAKM,IAAjD,CAAf;AACD,CALD;;AAQAH,OAAO,CAACf,SAAR,CAAkBuB,WAAlB,GAAgC,UAASlB,CAAT,EAAY;AAC1C,MAAIE,CAAC,GAAGX,MAAM,CAAC,KAAKsB,IAAN,CAAN,CAAkBM,EAAlB,CAAqB,CAArB,CAAR;AACAnB,EAAAA,CAAC,GAAGA,CAAC,GAAGT,MAAM,CAACW,CAAD,CAAN,CAAUe,QAAV,CAAmB1B,MAAM,CAACW,CAAC,GAAC,CAAH,CAAzB,EAAgCI,UAAhC,CAA2C,CAA3C,EAA8CC,GAA9C,CAAkD,GAAlD,CAAR;AACA,OAAKO,MAAL,CAAYd,CAAZ;AACA,SAAOA,CAAP;AACD,CALD;;AAOCU,OAAO,CAACf,SAAR,CAAkByB,MAAlB,GAA2B,YAAW;AACrC,MAAIA,MAAM,GAAG3B,MAAM,CAAC4B,SAAP,EAAb;AAAA,MACIC,IAAI,GAAG,IADX;;AAGAF,EAAAA,MAAM,CAACG,UAAP,GAAoB,UAASC,CAAT,EAAWC,CAAX,EAAaC,EAAb,EAAiB;AACnC,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAACH,CAAC,CAACI,MAApB,EAA2BD,CAAC,EAA5B,EAAgC;AAC9BH,MAAAA,CAAC,CAACG,CAAD,CAAD,GAAOL,IAAI,CAACJ,WAAL,CAAiBM,CAAC,CAACG,CAAD,CAAlB,CAAP;AACD;;AACD,SAAKE,IAAL,CAAUL,CAAV;AACAE,IAAAA,EAAE;AACH,GAND;;AAOA,SAAON,MAAP;AACD,CAZA;;AAiBDU,MAAM,CAACC,OAAP,GAAiBrB,OAAjB","sourcesContent":["var bigInt = require('big-integer');\nvar Stream = require('stream');\n\n// Backwards compatibility for node versions < 8\nif (!Stream.Writable || !Stream.Writable.prototype.destroy)\n  Stream = require('readable-stream');\n\nvar table;\n\nfunction generateTable() {\n  var poly = 0xEDB88320,c,n,k;\n  table = [];\n  for (n = 0; n < 256; n++) {\n    c = n;\n    for (k = 0; k < 8; k++)\n      c = (c & 1) ? poly ^ (c >>> 1) :  c = c >>> 1;\n    table[n] = c >>> 0;\n  }\n}\n\nfunction crc(ch,crc) {\n  if (!table)\n    generateTable();\n\n  if (ch.charCodeAt)\n    ch = ch.charCodeAt(0);        \n\n  return (bigInt(crc).shiftRight(8).and(0xffffff)).xor(table[bigInt(crc).xor(ch).and(0xff)]).value;\n}\n\nfunction Decrypt() {\n  if (!(this instanceof Decrypt))\n    return new Decrypt();\n\n  this.key0 = 305419896;\n  this.key1 = 591751049;\n  this.key2 = 878082192;\n}\n\nDecrypt.prototype.update = function(h) {            \n  this.key0 = crc(h,this.key0);\n  this.key1 = bigInt(this.key0).and(255).and(4294967295).add(this.key1)\n  this.key1 = bigInt(this.key1).multiply(134775813).add(1).and(4294967295).value;\n  this.key2 = crc(bigInt(this.key1).shiftRight(24).and(255), this.key2);\n}\n\n\nDecrypt.prototype.decryptByte = function(c) {\n  var k = bigInt(this.key2).or(2);\n  c = c ^ bigInt(k).multiply(bigInt(k^1)).shiftRight(8).and(255);\n  this.update(c);\n  return c;\n};\n\n Decrypt.prototype.stream = function() {\n  var stream = Stream.Transform(),\n      self = this;\n\n  stream._transform = function(d,e,cb) {\n    for (var i = 0; i<d.length;i++) {\n      d[i] = self.decryptByte(d[i]);\n    }\n    this.push(d);\n    cb();\n  };\n  return stream;\n};\n\n\n\n\nmodule.exports = Decrypt;"]},"metadata":{},"sourceType":"script"}