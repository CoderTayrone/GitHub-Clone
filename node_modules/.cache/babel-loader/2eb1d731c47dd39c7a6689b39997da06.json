{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Severity = exports.EmulatorLog = exports.FunctionsExecutionMode = exports.isEmulator = exports.isDownloadableEmulator = exports.ALL_EMULATORS = exports.EMULATORS_SUPPORTED_BY_USE_EMULATOR = exports.EMULATORS_SUPPORTED_BY_UI = exports.EMULATORS_SUPPORTED_BY_FUNCTIONS = exports.ALL_SERVICE_EMULATORS = exports.IMPORT_EXPORT_EMULATORS = exports.DOWNLOADABLE_EMULATORS = exports.Emulators = void 0;\nvar Emulators;\n\n(function (Emulators) {\n  Emulators[\"AUTH\"] = \"auth\";\n  Emulators[\"HUB\"] = \"hub\";\n  Emulators[\"FUNCTIONS\"] = \"functions\";\n  Emulators[\"FIRESTORE\"] = \"firestore\";\n  Emulators[\"DATABASE\"] = \"database\";\n  Emulators[\"HOSTING\"] = \"hosting\";\n  Emulators[\"PUBSUB\"] = \"pubsub\";\n  Emulators[\"UI\"] = \"ui\";\n  Emulators[\"LOGGING\"] = \"logging\";\n  Emulators[\"STORAGE\"] = \"storage\";\n})(Emulators = exports.Emulators || (exports.Emulators = {}));\n\nexports.DOWNLOADABLE_EMULATORS = [Emulators.FIRESTORE, Emulators.DATABASE, Emulators.PUBSUB, Emulators.UI, Emulators.STORAGE];\nexports.IMPORT_EXPORT_EMULATORS = [Emulators.FIRESTORE, Emulators.DATABASE, Emulators.AUTH, Emulators.STORAGE];\nexports.ALL_SERVICE_EMULATORS = [Emulators.AUTH, Emulators.FUNCTIONS, Emulators.FIRESTORE, Emulators.DATABASE, Emulators.HOSTING, Emulators.PUBSUB, Emulators.STORAGE].filter(v => v);\nexports.EMULATORS_SUPPORTED_BY_FUNCTIONS = [Emulators.FIRESTORE, Emulators.DATABASE, Emulators.PUBSUB, Emulators.STORAGE];\nexports.EMULATORS_SUPPORTED_BY_UI = [Emulators.AUTH, Emulators.DATABASE, Emulators.FIRESTORE, Emulators.FUNCTIONS, Emulators.STORAGE];\nexports.EMULATORS_SUPPORTED_BY_USE_EMULATOR = [Emulators.AUTH, Emulators.DATABASE, Emulators.FIRESTORE, Emulators.FUNCTIONS];\nexports.ALL_EMULATORS = [Emulators.HUB, Emulators.UI, Emulators.LOGGING, ...exports.ALL_SERVICE_EMULATORS];\n\nfunction isDownloadableEmulator(value) {\n  return isEmulator(value) && exports.DOWNLOADABLE_EMULATORS.includes(value);\n}\n\nexports.isDownloadableEmulator = isDownloadableEmulator;\n\nfunction isEmulator(value) {\n  return Object.values(Emulators).includes(value);\n}\n\nexports.isEmulator = isEmulator;\nvar FunctionsExecutionMode;\n\n(function (FunctionsExecutionMode) {\n  FunctionsExecutionMode[\"AUTO\"] = \"auto\";\n  FunctionsExecutionMode[\"SEQUENTIAL\"] = \"sequential\";\n})(FunctionsExecutionMode = exports.FunctionsExecutionMode || (exports.FunctionsExecutionMode = {}));\n\nclass EmulatorLog {\n  constructor(level, type, text, data, timestamp) {\n    this.level = level;\n    this.type = type;\n    this.text = text;\n    this.data = data;\n    this.timestamp = timestamp;\n    this.timestamp = this.timestamp || new Date().toISOString();\n    this.data = this.data || {};\n  }\n\n  get date() {\n    if (!this.timestamp) {\n      return new Date(0);\n    }\n\n    return new Date(this.timestamp);\n  }\n\n  static waitForFlush() {\n    return new Promise(resolve => {\n      const interval = setInterval(() => {\n        if (!EmulatorLog.WAITING_FOR_FLUSH) {\n          resolve();\n          clearInterval(interval);\n        }\n      }, 10);\n    });\n  }\n\n  static waitForLog(emitter, level, type, filter) {\n    return new Promise((resolve, reject) => {\n      const listener = el => {\n        const levelTypeMatch = el.level === level && el.type === type;\n        let filterMatch = true;\n\n        if (filter) {\n          filterMatch = filter(el);\n        }\n\n        if (levelTypeMatch && filterMatch) {\n          emitter.removeListener(\"log\", listener);\n          resolve(el);\n        }\n      };\n\n      emitter.on(\"log\", listener);\n    });\n  }\n\n  static fromJSON(json) {\n    let parsedLog;\n    let isNotJSON = false;\n\n    try {\n      parsedLog = JSON.parse(json);\n    } catch (err) {\n      isNotJSON = true;\n    }\n\n    parsedLog = parsedLog || {};\n\n    if (isNotJSON || parsedLog.level === undefined || parsedLog.type === undefined || parsedLog.text === undefined) {\n      parsedLog = {\n        level: \"USER\",\n        type: \"function-log\",\n        text: json\n      };\n    }\n\n    return new EmulatorLog(parsedLog.level, parsedLog.type, parsedLog.text, parsedLog.data, parsedLog.timestamp);\n  }\n\n  toString() {\n    return this.toStringCore(false);\n  }\n\n  toPrettyString() {\n    return this.toStringCore(true);\n  }\n\n  log() {\n    const msg = `${this.toString()}\\n`;\n    this.bufferMessage(msg);\n    this.flush();\n  }\n\n  bufferMessage(msg) {\n    EmulatorLog.LOG_BUFFER.push(msg);\n  }\n\n  flush() {\n    const nextMsg = EmulatorLog.LOG_BUFFER.shift();\n\n    if (!nextMsg) {\n      return;\n    }\n\n    EmulatorLog.WAITING_FOR_FLUSH = true;\n\n    if (process.send) {\n      process.send(nextMsg, undefined, {}, err => {\n        if (err) {\n          process.stderr.write(err);\n        }\n\n        EmulatorLog.WAITING_FOR_FLUSH = EmulatorLog.LOG_BUFFER.length > 0;\n        this.flush();\n      });\n    } else {\n      process.stderr.write(\"subprocess.send() is undefined, cannot communicate with Functions Runtime.\");\n    }\n  }\n\n  toStringCore(pretty = false) {\n    return JSON.stringify({\n      timestamp: this.timestamp,\n      level: this.level,\n      text: this.text,\n      data: this.data,\n      type: this.type\n    }, undefined, pretty ? 2 : 0);\n  }\n\n}\n\nexports.EmulatorLog = EmulatorLog;\nEmulatorLog.WAITING_FOR_FLUSH = false;\nEmulatorLog.LOG_BUFFER = [];\nvar Severity;\n\n(function (Severity) {\n  Severity[Severity[\"SEVERITY_UNSPECIFIED\"] = 0] = \"SEVERITY_UNSPECIFIED\";\n  Severity[Severity[\"DEPRECATION\"] = 1] = \"DEPRECATION\";\n  Severity[Severity[\"WARNING\"] = 2] = \"WARNING\";\n  Severity[Severity[\"ERROR\"] = 3] = \"ERROR\";\n})(Severity = exports.Severity || (exports.Severity = {}));","map":{"version":3,"sources":["/home/dev/Documentos/Projects/github-clone/node_modules/firebase-tools/lib/emulator/types.js"],"names":["Object","defineProperty","exports","value","Severity","EmulatorLog","FunctionsExecutionMode","isEmulator","isDownloadableEmulator","ALL_EMULATORS","EMULATORS_SUPPORTED_BY_USE_EMULATOR","EMULATORS_SUPPORTED_BY_UI","EMULATORS_SUPPORTED_BY_FUNCTIONS","ALL_SERVICE_EMULATORS","IMPORT_EXPORT_EMULATORS","DOWNLOADABLE_EMULATORS","Emulators","FIRESTORE","DATABASE","PUBSUB","UI","STORAGE","AUTH","FUNCTIONS","HOSTING","filter","v","HUB","LOGGING","includes","values","constructor","level","type","text","data","timestamp","Date","toISOString","date","waitForFlush","Promise","resolve","interval","setInterval","WAITING_FOR_FLUSH","clearInterval","waitForLog","emitter","reject","listener","el","levelTypeMatch","filterMatch","removeListener","on","fromJSON","json","parsedLog","isNotJSON","JSON","parse","err","undefined","toString","toStringCore","toPrettyString","log","msg","bufferMessage","flush","LOG_BUFFER","push","nextMsg","shift","process","send","stderr","write","length","pretty","stringify"],"mappings":"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","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Severity = exports.EmulatorLog = exports.FunctionsExecutionMode = exports.isEmulator = exports.isDownloadableEmulator = exports.ALL_EMULATORS = exports.EMULATORS_SUPPORTED_BY_USE_EMULATOR = exports.EMULATORS_SUPPORTED_BY_UI = exports.EMULATORS_SUPPORTED_BY_FUNCTIONS = exports.ALL_SERVICE_EMULATORS = exports.IMPORT_EXPORT_EMULATORS = exports.DOWNLOADABLE_EMULATORS = exports.Emulators = void 0;\nvar Emulators;\n(function (Emulators) {\n    Emulators[\"AUTH\"] = \"auth\";\n    Emulators[\"HUB\"] = \"hub\";\n    Emulators[\"FUNCTIONS\"] = \"functions\";\n    Emulators[\"FIRESTORE\"] = \"firestore\";\n    Emulators[\"DATABASE\"] = \"database\";\n    Emulators[\"HOSTING\"] = \"hosting\";\n    Emulators[\"PUBSUB\"] = \"pubsub\";\n    Emulators[\"UI\"] = \"ui\";\n    Emulators[\"LOGGING\"] = \"logging\";\n    Emulators[\"STORAGE\"] = \"storage\";\n})(Emulators = exports.Emulators || (exports.Emulators = {}));\nexports.DOWNLOADABLE_EMULATORS = [\n    Emulators.FIRESTORE,\n    Emulators.DATABASE,\n    Emulators.PUBSUB,\n    Emulators.UI,\n    Emulators.STORAGE,\n];\nexports.IMPORT_EXPORT_EMULATORS = [\n    Emulators.FIRESTORE,\n    Emulators.DATABASE,\n    Emulators.AUTH,\n    Emulators.STORAGE,\n];\nexports.ALL_SERVICE_EMULATORS = [\n    Emulators.AUTH,\n    Emulators.FUNCTIONS,\n    Emulators.FIRESTORE,\n    Emulators.DATABASE,\n    Emulators.HOSTING,\n    Emulators.PUBSUB,\n    Emulators.STORAGE,\n].filter((v) => v);\nexports.EMULATORS_SUPPORTED_BY_FUNCTIONS = [\n    Emulators.FIRESTORE,\n    Emulators.DATABASE,\n    Emulators.PUBSUB,\n    Emulators.STORAGE,\n];\nexports.EMULATORS_SUPPORTED_BY_UI = [\n    Emulators.AUTH,\n    Emulators.DATABASE,\n    Emulators.FIRESTORE,\n    Emulators.FUNCTIONS,\n    Emulators.STORAGE,\n];\nexports.EMULATORS_SUPPORTED_BY_USE_EMULATOR = [\n    Emulators.AUTH,\n    Emulators.DATABASE,\n    Emulators.FIRESTORE,\n    Emulators.FUNCTIONS,\n];\nexports.ALL_EMULATORS = [\n    Emulators.HUB,\n    Emulators.UI,\n    Emulators.LOGGING,\n    ...exports.ALL_SERVICE_EMULATORS,\n];\nfunction isDownloadableEmulator(value) {\n    return isEmulator(value) && exports.DOWNLOADABLE_EMULATORS.includes(value);\n}\nexports.isDownloadableEmulator = isDownloadableEmulator;\nfunction isEmulator(value) {\n    return Object.values(Emulators).includes(value);\n}\nexports.isEmulator = isEmulator;\nvar FunctionsExecutionMode;\n(function (FunctionsExecutionMode) {\n    FunctionsExecutionMode[\"AUTO\"] = \"auto\";\n    FunctionsExecutionMode[\"SEQUENTIAL\"] = \"sequential\";\n})(FunctionsExecutionMode = exports.FunctionsExecutionMode || (exports.FunctionsExecutionMode = {}));\nclass EmulatorLog {\n    constructor(level, type, text, data, timestamp) {\n        this.level = level;\n        this.type = type;\n        this.text = text;\n        this.data = data;\n        this.timestamp = timestamp;\n        this.timestamp = this.timestamp || new Date().toISOString();\n        this.data = this.data || {};\n    }\n    get date() {\n        if (!this.timestamp) {\n            return new Date(0);\n        }\n        return new Date(this.timestamp);\n    }\n    static waitForFlush() {\n        return new Promise((resolve) => {\n            const interval = setInterval(() => {\n                if (!EmulatorLog.WAITING_FOR_FLUSH) {\n                    resolve();\n                    clearInterval(interval);\n                }\n            }, 10);\n        });\n    }\n    static waitForLog(emitter, level, type, filter) {\n        return new Promise((resolve, reject) => {\n            const listener = (el) => {\n                const levelTypeMatch = el.level === level && el.type === type;\n                let filterMatch = true;\n                if (filter) {\n                    filterMatch = filter(el);\n                }\n                if (levelTypeMatch && filterMatch) {\n                    emitter.removeListener(\"log\", listener);\n                    resolve(el);\n                }\n            };\n            emitter.on(\"log\", listener);\n        });\n    }\n    static fromJSON(json) {\n        let parsedLog;\n        let isNotJSON = false;\n        try {\n            parsedLog = JSON.parse(json);\n        }\n        catch (err) {\n            isNotJSON = true;\n        }\n        parsedLog = parsedLog || {};\n        if (isNotJSON ||\n            parsedLog.level === undefined ||\n            parsedLog.type === undefined ||\n            parsedLog.text === undefined) {\n            parsedLog = {\n                level: \"USER\",\n                type: \"function-log\",\n                text: json,\n            };\n        }\n        return new EmulatorLog(parsedLog.level, parsedLog.type, parsedLog.text, parsedLog.data, parsedLog.timestamp);\n    }\n    toString() {\n        return this.toStringCore(false);\n    }\n    toPrettyString() {\n        return this.toStringCore(true);\n    }\n    log() {\n        const msg = `${this.toString()}\\n`;\n        this.bufferMessage(msg);\n        this.flush();\n    }\n    bufferMessage(msg) {\n        EmulatorLog.LOG_BUFFER.push(msg);\n    }\n    flush() {\n        const nextMsg = EmulatorLog.LOG_BUFFER.shift();\n        if (!nextMsg) {\n            return;\n        }\n        EmulatorLog.WAITING_FOR_FLUSH = true;\n        if (process.send) {\n            process.send(nextMsg, undefined, {}, (err) => {\n                if (err) {\n                    process.stderr.write(err);\n                }\n                EmulatorLog.WAITING_FOR_FLUSH = EmulatorLog.LOG_BUFFER.length > 0;\n                this.flush();\n            });\n        }\n        else {\n            process.stderr.write(\"subprocess.send() is undefined, cannot communicate with Functions Runtime.\");\n        }\n    }\n    toStringCore(pretty = false) {\n        return JSON.stringify({\n            timestamp: this.timestamp,\n            level: this.level,\n            text: this.text,\n            data: this.data,\n            type: this.type,\n        }, undefined, pretty ? 2 : 0);\n    }\n}\nexports.EmulatorLog = EmulatorLog;\nEmulatorLog.WAITING_FOR_FLUSH = false;\nEmulatorLog.LOG_BUFFER = [];\nvar Severity;\n(function (Severity) {\n    Severity[Severity[\"SEVERITY_UNSPECIFIED\"] = 0] = \"SEVERITY_UNSPECIFIED\";\n    Severity[Severity[\"DEPRECATION\"] = 1] = \"DEPRECATION\";\n    Severity[Severity[\"WARNING\"] = 2] = \"WARNING\";\n    Severity[Severity[\"ERROR\"] = 3] = \"ERROR\";\n})(Severity = exports.Severity || (exports.Severity = {}));\n"]},"metadata":{},"sourceType":"script"}