{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.HttpPayloadTooLargeError = exports.HttpNotFoundError = exports.ValidationError = exports.HttpBadRequestError = exports.HttpError = exports.ExtendableError = void 0;\n\nclass ExtendableError extends Error {\n  constructor(message) {\n    super(message);\n    this.name = this.constructor.name;\n\n    if (typeof Error.captureStackTrace === 'function') {\n      Error.captureStackTrace(this, this.constructor);\n    } else {\n      this.stack = new Error(message).stack;\n    }\n  }\n\n}\n\nexports.ExtendableError = ExtendableError;\n\nclass HttpError extends ExtendableError {\n  constructor(status, message) {\n    super(message);\n    this.status = status;\n  }\n\n}\n\nexports.HttpError = HttpError;\n\nclass HttpBadRequestError extends HttpError {\n  constructor(message) {\n    super(400, message);\n  }\n\n}\n\nexports.HttpBadRequestError = HttpBadRequestError;\n\nclass ValidationError extends HttpBadRequestError {\n  constructor(errors) {\n    if (!Array.isArray(errors)) {\n      errors = [errors];\n    }\n\n    super(errors.length === 1 ? errors[0].message : 'Multiple validation errors');\n    this.errors = errors;\n  }\n\n}\n\nexports.ValidationError = ValidationError;\n\nclass HttpNotFoundError extends HttpError {\n  constructor(message) {\n    super(404, message);\n  }\n\n}\n\nexports.HttpNotFoundError = HttpNotFoundError;\n\nclass HttpPayloadTooLargeError extends HttpError {\n  constructor(message) {\n    super(413, message);\n  }\n\n}\n\nexports.HttpPayloadTooLargeError = HttpPayloadTooLargeError;","map":{"version":3,"sources":["../src/errors.ts"],"names":[],"mappings":";;;;;;;AAEA,MAAa,eAAb,SAAqC,KAArC,CAA0C;AACtC,EAAA,WAAA,CAAY,OAAZ,EAA2B;AACvB,UAAM,OAAN;AACA,SAAK,IAAL,GAAY,KAAK,WAAL,CAAiB,IAA7B;;AACA,QAAI,OAAO,KAAK,CAAC,iBAAb,KAAmC,UAAvC,EAAmD;AAC/C,MAAA,KAAK,CAAC,iBAAN,CAAwB,IAAxB,EAA8B,KAAK,WAAnC;AACH,KAFD,MAEO;AACH,WAAK,KAAL,GAAa,IAAI,KAAJ,CAAU,OAAV,EAAmB,KAAhC;AACH;AACJ;;AATqC;;AAA1C,OAAA,CAAA,eAAA,GAAA,eAAA;;AAYA,MAAa,SAAb,SAA+B,eAA/B,CAA8C;AAG1C,EAAA,WAAA,CAAY,MAAZ,EAA4B,OAA5B,EAA2C;AACvC,UAAM,OAAN;AACA,SAAK,MAAL,GAAc,MAAd;AACH;;AANyC;;AAA9C,OAAA,CAAA,SAAA,GAAA,SAAA;;AASA,MAAa,mBAAb,SAAyC,SAAzC,CAAkD;AAC9C,EAAA,WAAA,CAAY,OAAZ,EAA2B;AACvB,UAAM,GAAN,EAAW,OAAX;AACH;;AAH6C;;AAAlD,OAAA,CAAA,mBAAA,GAAA,mBAAA;;AAMA,MAAa,eAAb,SAAqC,mBAArC,CAAwD;AAGpD,EAAA,WAAA,CAAY,MAAZ,EAAyD;AACrD,QAAI,CAAC,KAAK,CAAC,OAAN,CAAc,MAAd,CAAL,EAA4B;AACxB,MAAA,MAAM,GAAG,CAAC,MAAD,CAAT;AACH;;AACD,UAAM,MAAM,CAAC,MAAP,KAAkB,CAAlB,GAAsB,MAAM,CAAC,CAAD,CAAN,CAAU,OAAhC,GAA0C,4BAAhD;AACA,SAAK,MAAL,GAAc,MAAd;AACH;;AATmD;;AAAxD,OAAA,CAAA,eAAA,GAAA,eAAA;;AAYA,MAAa,iBAAb,SAAuC,SAAvC,CAAgD;AAC5C,EAAA,WAAA,CAAY,OAAZ,EAA2B;AACvB,UAAM,GAAN,EAAW,OAAX;AACH;;AAH2C;;AAAhD,OAAA,CAAA,iBAAA,GAAA,iBAAA;;AAMA,MAAa,wBAAb,SAA8C,SAA9C,CAAuD;AACnD,EAAA,WAAA,CAAY,OAAZ,EAA2B;AACvB,UAAM,GAAN,EAAW,OAAX;AACH;;AAHkD;;AAAvD,OAAA,CAAA,wBAAA,GAAA,wBAAA","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.HttpPayloadTooLargeError = exports.HttpNotFoundError = exports.ValidationError = exports.HttpBadRequestError = exports.HttpError = exports.ExtendableError = void 0;\nclass ExtendableError extends Error {\n    constructor(message) {\n        super(message);\n        this.name = this.constructor.name;\n        if (typeof Error.captureStackTrace === 'function') {\n            Error.captureStackTrace(this, this.constructor);\n        }\n        else {\n            this.stack = new Error(message).stack;\n        }\n    }\n}\nexports.ExtendableError = ExtendableError;\nclass HttpError extends ExtendableError {\n    constructor(status, message) {\n        super(message);\n        this.status = status;\n    }\n}\nexports.HttpError = HttpError;\nclass HttpBadRequestError extends HttpError {\n    constructor(message) {\n        super(400, message);\n    }\n}\nexports.HttpBadRequestError = HttpBadRequestError;\nclass ValidationError extends HttpBadRequestError {\n    constructor(errors) {\n        if (!Array.isArray(errors)) {\n            errors = [errors];\n        }\n        super(errors.length === 1 ? errors[0].message : 'Multiple validation errors');\n        this.errors = errors;\n    }\n}\nexports.ValidationError = ValidationError;\nclass HttpNotFoundError extends HttpError {\n    constructor(message) {\n        super(404, message);\n    }\n}\nexports.HttpNotFoundError = HttpNotFoundError;\nclass HttpPayloadTooLargeError extends HttpError {\n    constructor(message) {\n        super(413, message);\n    }\n}\nexports.HttpPayloadTooLargeError = HttpPayloadTooLargeError;\n//# sourceMappingURL=errors.js.map"]},"metadata":{},"sourceType":"script"}