{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.checkFunctionsSDKVersion = exports.getLatestSDKVersion = exports.getFunctionsSDKVersion = exports.FUNCTIONS_SDK_VERSION_TOO_OLD_WARNING = void 0;\n\nconst _ = require(\"lodash\");\n\nconst clc = require(\"cli-color\");\n\nconst semver = require(\"semver\");\n\nconst spawn = require(\"cross-spawn\");\n\nconst utils = require(\"../../../../utils\");\n\nconst logger_1 = require(\"../../../../logger\");\n\nconst track = require(\"../../../../track\");\n\nconst MIN_SDK_VERSION = \"2.0.0\";\nexports.FUNCTIONS_SDK_VERSION_TOO_OLD_WARNING = clc.bold.yellow(\"functions: \") + \"You must have a \" + clc.bold(\"firebase-functions\") + \" version that is at least 2.0.0. Please run \" + clc.bold(\"npm i --save firebase-functions@latest\") + \" in the functions folder.\";\n\nfunction getFunctionsSDKVersion(sourceDir) {\n  try {\n    const child = spawn.sync(\"npm\", [\"list\", \"firebase-functions\", \"--json=true\"], {\n      cwd: sourceDir,\n      encoding: \"utf8\"\n    });\n\n    if (child.error) {\n      logger_1.logger.debug(\"getFunctionsSDKVersion encountered error:\", child.error.stack);\n      return;\n    }\n\n    const output = JSON.parse(child.stdout);\n    return _.get(output, [\"dependencies\", \"firebase-functions\", \"version\"]);\n  } catch (e) {\n    logger_1.logger.debug(\"getFunctionsSDKVersion encountered error:\", e);\n    return;\n  }\n}\n\nexports.getFunctionsSDKVersion = getFunctionsSDKVersion;\n\nfunction getLatestSDKVersion() {\n  const child = spawn.sync(\"npm\", [\"show\", \"firebase-functions\", \"--json=true\"], {\n    encoding: \"utf8\"\n  });\n\n  if (child.error) {\n    logger_1.logger.debug(\"checkFunctionsSDKVersion was unable to fetch information from NPM\", child.error.stack);\n    return;\n  }\n\n  const output = JSON.parse(child.stdout);\n\n  if (_.isEmpty(output)) {\n    return;\n  }\n\n  return _.get(output, [\"dist-tags\", \"latest\"]);\n}\n\nexports.getLatestSDKVersion = getLatestSDKVersion;\n\nfunction checkFunctionsSDKVersion(currentVersion) {\n  try {\n    if (semver.lt(currentVersion, MIN_SDK_VERSION)) {\n      track(\"functions_runtime_notices\", \"functions_sdk_too_old\");\n      utils.logWarning(exports.FUNCTIONS_SDK_VERSION_TOO_OLD_WARNING);\n    }\n\n    const latest = exports.getLatestSDKVersion();\n\n    if (!latest) {\n      return;\n    }\n\n    if (semver.eq(currentVersion, latest)) {\n      return;\n    }\n\n    utils.logWarning(clc.bold.yellow(\"functions: \") + \"package.json indicates an outdated version of firebase-functions.\\nPlease upgrade using \" + clc.bold(\"npm install --save firebase-functions@latest\") + \" in your functions directory.\");\n\n    if (semver.major(currentVersion) < semver.major(latest)) {\n      utils.logWarning(clc.bold.yellow(\"functions: \") + \"Please note that there will be breaking changes when you upgrade.\");\n    }\n  } catch (e) {\n    logger_1.logger.debug(\"checkFunctionsSDKVersion encountered error:\", e);\n    return;\n  }\n}\n\nexports.checkFunctionsSDKVersion = checkFunctionsSDKVersion;","map":{"version":3,"sources":["/home/dev/Documentos/Projects/github-clone/node_modules/firebase-tools/lib/deploy/functions/runtimes/node/versioning.js"],"names":["Object","defineProperty","exports","value","checkFunctionsSDKVersion","getLatestSDKVersion","getFunctionsSDKVersion","FUNCTIONS_SDK_VERSION_TOO_OLD_WARNING","_","require","clc","semver","spawn","utils","logger_1","track","MIN_SDK_VERSION","bold","yellow","sourceDir","child","sync","cwd","encoding","error","logger","debug","stack","output","JSON","parse","stdout","get","e","isEmpty","currentVersion","lt","logWarning","latest","eq","major"],"mappings":"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","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.checkFunctionsSDKVersion = exports.getLatestSDKVersion = exports.getFunctionsSDKVersion = exports.FUNCTIONS_SDK_VERSION_TOO_OLD_WARNING = void 0;\nconst _ = require(\"lodash\");\nconst clc = require(\"cli-color\");\nconst semver = require(\"semver\");\nconst spawn = require(\"cross-spawn\");\nconst utils = require(\"../../../../utils\");\nconst logger_1 = require(\"../../../../logger\");\nconst track = require(\"../../../../track\");\nconst MIN_SDK_VERSION = \"2.0.0\";\nexports.FUNCTIONS_SDK_VERSION_TOO_OLD_WARNING = clc.bold.yellow(\"functions: \") +\n    \"You must have a \" +\n    clc.bold(\"firebase-functions\") +\n    \" version that is at least 2.0.0. Please run \" +\n    clc.bold(\"npm i --save firebase-functions@latest\") +\n    \" in the functions folder.\";\nfunction getFunctionsSDKVersion(sourceDir) {\n    try {\n        const child = spawn.sync(\"npm\", [\"list\", \"firebase-functions\", \"--json=true\"], {\n            cwd: sourceDir,\n            encoding: \"utf8\",\n        });\n        if (child.error) {\n            logger_1.logger.debug(\"getFunctionsSDKVersion encountered error:\", child.error.stack);\n            return;\n        }\n        const output = JSON.parse(child.stdout);\n        return _.get(output, [\"dependencies\", \"firebase-functions\", \"version\"]);\n    }\n    catch (e) {\n        logger_1.logger.debug(\"getFunctionsSDKVersion encountered error:\", e);\n        return;\n    }\n}\nexports.getFunctionsSDKVersion = getFunctionsSDKVersion;\nfunction getLatestSDKVersion() {\n    const child = spawn.sync(\"npm\", [\"show\", \"firebase-functions\", \"--json=true\"], {\n        encoding: \"utf8\",\n    });\n    if (child.error) {\n        logger_1.logger.debug(\"checkFunctionsSDKVersion was unable to fetch information from NPM\", child.error.stack);\n        return;\n    }\n    const output = JSON.parse(child.stdout);\n    if (_.isEmpty(output)) {\n        return;\n    }\n    return _.get(output, [\"dist-tags\", \"latest\"]);\n}\nexports.getLatestSDKVersion = getLatestSDKVersion;\nfunction checkFunctionsSDKVersion(currentVersion) {\n    try {\n        if (semver.lt(currentVersion, MIN_SDK_VERSION)) {\n            track(\"functions_runtime_notices\", \"functions_sdk_too_old\");\n            utils.logWarning(exports.FUNCTIONS_SDK_VERSION_TOO_OLD_WARNING);\n        }\n        const latest = exports.getLatestSDKVersion();\n        if (!latest) {\n            return;\n        }\n        if (semver.eq(currentVersion, latest)) {\n            return;\n        }\n        utils.logWarning(clc.bold.yellow(\"functions: \") +\n            \"package.json indicates an outdated version of firebase-functions.\\nPlease upgrade using \" +\n            clc.bold(\"npm install --save firebase-functions@latest\") +\n            \" in your functions directory.\");\n        if (semver.major(currentVersion) < semver.major(latest)) {\n            utils.logWarning(clc.bold.yellow(\"functions: \") +\n                \"Please note that there will be breaking changes when you upgrade.\");\n        }\n    }\n    catch (e) {\n        logger_1.logger.debug(\"checkFunctionsSDKVersion encountered error:\", e);\n        return;\n    }\n}\nexports.checkFunctionsSDKVersion = checkFunctionsSDKVersion;\n"]},"metadata":{},"sourceType":"script"}