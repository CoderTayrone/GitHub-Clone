{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.testRuleset = exports.updateOrCreateRelease = exports.updateRelease = exports.createRelease = exports.createRuleset = exports.deleteRuleset = exports.getRulesetId = exports.listAllRulesets = exports.listRulesets = exports.getRulesetContent = exports.listAllReleases = exports.listReleases = exports.getLatestRulesetName = void 0;\n\nconst _ = require(\"lodash\");\n\nconst api = require(\"../api\");\n\nconst logger_1 = require(\"../logger\");\n\nconst utils = require(\"../utils\");\n\nconst API_VERSION = \"v1\";\n\nfunction _handleErrorResponse(response) {\n  if (response.body && response.body.error) {\n    return utils.reject(response.body.error, {\n      code: 2\n    });\n  }\n\n  logger_1.logger.debug(\"[rules] error:\", response.status, response.body);\n  return utils.reject(\"Unexpected error encountered with rules.\", {\n    code: 2\n  });\n}\n\nasync function getLatestRulesetName(projectId, service) {\n  const releases = await listAllReleases(projectId);\n  const prefix = `projects/${projectId}/releases/${service}`;\n\n  const release = _.find(releases, r => r.name.indexOf(prefix) === 0);\n\n  if (!release) {\n    return null;\n  }\n\n  return release.rulesetName;\n}\n\nexports.getLatestRulesetName = getLatestRulesetName;\nconst MAX_RELEASES_PAGE_SIZE = 10;\n\nasync function listReleases(projectId, pageToken) {\n  const response = await api.request(\"GET\", `/${API_VERSION}/projects/${projectId}/releases`, {\n    auth: true,\n    origin: api.rulesOrigin,\n    query: {\n      pageSize: MAX_RELEASES_PAGE_SIZE,\n      pageToken\n    }\n  });\n\n  if (response.status === 200) {\n    return response.body;\n  }\n\n  return _handleErrorResponse(response);\n}\n\nexports.listReleases = listReleases;\n\nasync function listAllReleases(projectId) {\n  let pageToken;\n  let releases = [];\n\n  do {\n    const response = await listReleases(projectId, pageToken);\n\n    if (response.releases && response.releases.length > 0) {\n      releases = releases.concat(response.releases);\n    }\n\n    pageToken = response.nextPageToken;\n  } while (pageToken);\n\n  return _.orderBy(releases, [\"createTime\"], [\"desc\"]);\n}\n\nexports.listAllReleases = listAllReleases;\n\nasync function getRulesetContent(name) {\n  const response = await api.request(\"GET\", `/${API_VERSION}/${name}`, {\n    auth: true,\n    origin: api.rulesOrigin\n  });\n\n  if (response.status === 200) {\n    const source = response.body.source;\n    return source.files;\n  }\n\n  return _handleErrorResponse(response);\n}\n\nexports.getRulesetContent = getRulesetContent;\nconst MAX_RULESET_PAGE_SIZE = 100;\n\nasync function listRulesets(projectId, pageToken) {\n  const response = await api.request(\"GET\", `/${API_VERSION}/projects/${projectId}/rulesets`, {\n    auth: true,\n    origin: api.rulesOrigin,\n    query: {\n      pageSize: MAX_RULESET_PAGE_SIZE,\n      pageToken\n    }\n  });\n\n  if (response.status === 200) {\n    return response.body;\n  }\n\n  return _handleErrorResponse(response);\n}\n\nexports.listRulesets = listRulesets;\n\nasync function listAllRulesets(projectId) {\n  let pageToken;\n  let rulesets = [];\n\n  do {\n    const response = await listRulesets(projectId, pageToken);\n\n    if (response.rulesets) {\n      rulesets = rulesets.concat(response.rulesets);\n    }\n\n    pageToken = response.nextPageToken;\n  } while (pageToken);\n\n  return _.orderBy(rulesets, [\"createTime\"], [\"desc\"]);\n}\n\nexports.listAllRulesets = listAllRulesets;\n\nfunction getRulesetId(ruleset) {\n  return ruleset.name.split(\"/\").pop();\n}\n\nexports.getRulesetId = getRulesetId;\n\nasync function deleteRuleset(projectId, id) {\n  const response = await api.request(\"DELETE\", `/${API_VERSION}/projects/${projectId}/rulesets/${id}`, {\n    auth: true,\n    origin: api.rulesOrigin\n  });\n\n  if (response.status === 200) {\n    return;\n  }\n\n  return _handleErrorResponse(response);\n}\n\nexports.deleteRuleset = deleteRuleset;\n\nasync function createRuleset(projectId, files) {\n  const payload = {\n    source: {\n      files\n    }\n  };\n  const response = await api.request(\"POST\", `/${API_VERSION}/projects/${projectId}/rulesets`, {\n    auth: true,\n    data: payload,\n    origin: api.rulesOrigin\n  });\n\n  if (response.status === 200) {\n    logger_1.logger.debug(\"[rules] created ruleset\", response.body.name);\n    return response.body.name;\n  }\n\n  return _handleErrorResponse(response);\n}\n\nexports.createRuleset = createRuleset;\n\nasync function createRelease(projectId, rulesetName, releaseName) {\n  const payload = {\n    name: `projects/${projectId}/releases/${releaseName}`,\n    rulesetName\n  };\n  const response = await api.request(\"POST\", `/${API_VERSION}/projects/${projectId}/releases`, {\n    auth: true,\n    data: payload,\n    origin: api.rulesOrigin\n  });\n\n  if (response.status === 200) {\n    logger_1.logger.debug(\"[rules] created release\", response.body.name);\n    return response.body.name;\n  }\n\n  return _handleErrorResponse(response);\n}\n\nexports.createRelease = createRelease;\n\nasync function updateRelease(projectId, rulesetName, releaseName) {\n  const payload = {\n    release: {\n      name: `projects/${projectId}/releases/${releaseName}`,\n      rulesetName\n    }\n  };\n  const response = await api.request(\"PATCH\", `/${API_VERSION}/projects/${projectId}/releases/${releaseName}`, {\n    auth: true,\n    data: payload,\n    origin: api.rulesOrigin\n  });\n\n  if (response.status === 200) {\n    logger_1.logger.debug(\"[rules] updated release\", response.body.name);\n    return response.body.name;\n  }\n\n  return _handleErrorResponse(response);\n}\n\nexports.updateRelease = updateRelease;\n\nasync function updateOrCreateRelease(projectId, rulesetName, releaseName) {\n  logger_1.logger.debug(\"[rules] releasing\", releaseName, \"with ruleset\", rulesetName);\n  return updateRelease(projectId, rulesetName, releaseName).catch(() => {\n    logger_1.logger.debug(\"[rules] ruleset update failed, attempting to create instead\");\n    return createRelease(projectId, rulesetName, releaseName);\n  });\n}\n\nexports.updateOrCreateRelease = updateOrCreateRelease;\n\nfunction testRuleset(projectId, files) {\n  return api.request(\"POST\", `/${API_VERSION}/projects/${encodeURIComponent(projectId)}:test`, {\n    origin: api.rulesOrigin,\n    data: {\n      source: {\n        files\n      }\n    },\n    auth: true\n  });\n}\n\nexports.testRuleset = testRuleset;","map":{"version":3,"sources":["/home/dev/Documentos/Projects/github-clone/node_modules/firebase-tools/lib/gcp/rules.js"],"names":["Object","defineProperty","exports","value","testRuleset","updateOrCreateRelease","updateRelease","createRelease","createRuleset","deleteRuleset","getRulesetId","listAllRulesets","listRulesets","getRulesetContent","listAllReleases","listReleases","getLatestRulesetName","_","require","api","logger_1","utils","API_VERSION","_handleErrorResponse","response","body","error","reject","code","logger","debug","status","projectId","service","releases","prefix","release","find","r","name","indexOf","rulesetName","MAX_RELEASES_PAGE_SIZE","pageToken","request","auth","origin","rulesOrigin","query","pageSize","length","concat","nextPageToken","orderBy","source","files","MAX_RULESET_PAGE_SIZE","rulesets","ruleset","split","pop","id","payload","data","releaseName","catch","encodeURIComponent"],"mappings":"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","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.testRuleset = exports.updateOrCreateRelease = exports.updateRelease = exports.createRelease = exports.createRuleset = exports.deleteRuleset = exports.getRulesetId = exports.listAllRulesets = exports.listRulesets = exports.getRulesetContent = exports.listAllReleases = exports.listReleases = exports.getLatestRulesetName = void 0;\nconst _ = require(\"lodash\");\nconst api = require(\"../api\");\nconst logger_1 = require(\"../logger\");\nconst utils = require(\"../utils\");\nconst API_VERSION = \"v1\";\nfunction _handleErrorResponse(response) {\n    if (response.body && response.body.error) {\n        return utils.reject(response.body.error, { code: 2 });\n    }\n    logger_1.logger.debug(\"[rules] error:\", response.status, response.body);\n    return utils.reject(\"Unexpected error encountered with rules.\", {\n        code: 2,\n    });\n}\nasync function getLatestRulesetName(projectId, service) {\n    const releases = await listAllReleases(projectId);\n    const prefix = `projects/${projectId}/releases/${service}`;\n    const release = _.find(releases, (r) => r.name.indexOf(prefix) === 0);\n    if (!release) {\n        return null;\n    }\n    return release.rulesetName;\n}\nexports.getLatestRulesetName = getLatestRulesetName;\nconst MAX_RELEASES_PAGE_SIZE = 10;\nasync function listReleases(projectId, pageToken) {\n    const response = await api.request(\"GET\", `/${API_VERSION}/projects/${projectId}/releases`, {\n        auth: true,\n        origin: api.rulesOrigin,\n        query: {\n            pageSize: MAX_RELEASES_PAGE_SIZE,\n            pageToken,\n        },\n    });\n    if (response.status === 200) {\n        return response.body;\n    }\n    return _handleErrorResponse(response);\n}\nexports.listReleases = listReleases;\nasync function listAllReleases(projectId) {\n    let pageToken;\n    let releases = [];\n    do {\n        const response = await listReleases(projectId, pageToken);\n        if (response.releases && response.releases.length > 0) {\n            releases = releases.concat(response.releases);\n        }\n        pageToken = response.nextPageToken;\n    } while (pageToken);\n    return _.orderBy(releases, [\"createTime\"], [\"desc\"]);\n}\nexports.listAllReleases = listAllReleases;\nasync function getRulesetContent(name) {\n    const response = await api.request(\"GET\", `/${API_VERSION}/${name}`, {\n        auth: true,\n        origin: api.rulesOrigin,\n    });\n    if (response.status === 200) {\n        const source = response.body.source;\n        return source.files;\n    }\n    return _handleErrorResponse(response);\n}\nexports.getRulesetContent = getRulesetContent;\nconst MAX_RULESET_PAGE_SIZE = 100;\nasync function listRulesets(projectId, pageToken) {\n    const response = await api.request(\"GET\", `/${API_VERSION}/projects/${projectId}/rulesets`, {\n        auth: true,\n        origin: api.rulesOrigin,\n        query: {\n            pageSize: MAX_RULESET_PAGE_SIZE,\n            pageToken,\n        },\n    });\n    if (response.status === 200) {\n        return response.body;\n    }\n    return _handleErrorResponse(response);\n}\nexports.listRulesets = listRulesets;\nasync function listAllRulesets(projectId) {\n    let pageToken;\n    let rulesets = [];\n    do {\n        const response = await listRulesets(projectId, pageToken);\n        if (response.rulesets) {\n            rulesets = rulesets.concat(response.rulesets);\n        }\n        pageToken = response.nextPageToken;\n    } while (pageToken);\n    return _.orderBy(rulesets, [\"createTime\"], [\"desc\"]);\n}\nexports.listAllRulesets = listAllRulesets;\nfunction getRulesetId(ruleset) {\n    return ruleset.name.split(\"/\").pop();\n}\nexports.getRulesetId = getRulesetId;\nasync function deleteRuleset(projectId, id) {\n    const response = await api.request(\"DELETE\", `/${API_VERSION}/projects/${projectId}/rulesets/${id}`, {\n        auth: true,\n        origin: api.rulesOrigin,\n    });\n    if (response.status === 200) {\n        return;\n    }\n    return _handleErrorResponse(response);\n}\nexports.deleteRuleset = deleteRuleset;\nasync function createRuleset(projectId, files) {\n    const payload = { source: { files } };\n    const response = await api.request(\"POST\", `/${API_VERSION}/projects/${projectId}/rulesets`, {\n        auth: true,\n        data: payload,\n        origin: api.rulesOrigin,\n    });\n    if (response.status === 200) {\n        logger_1.logger.debug(\"[rules] created ruleset\", response.body.name);\n        return response.body.name;\n    }\n    return _handleErrorResponse(response);\n}\nexports.createRuleset = createRuleset;\nasync function createRelease(projectId, rulesetName, releaseName) {\n    const payload = {\n        name: `projects/${projectId}/releases/${releaseName}`,\n        rulesetName,\n    };\n    const response = await api.request(\"POST\", `/${API_VERSION}/projects/${projectId}/releases`, {\n        auth: true,\n        data: payload,\n        origin: api.rulesOrigin,\n    });\n    if (response.status === 200) {\n        logger_1.logger.debug(\"[rules] created release\", response.body.name);\n        return response.body.name;\n    }\n    return _handleErrorResponse(response);\n}\nexports.createRelease = createRelease;\nasync function updateRelease(projectId, rulesetName, releaseName) {\n    const payload = {\n        release: {\n            name: `projects/${projectId}/releases/${releaseName}`,\n            rulesetName,\n        },\n    };\n    const response = await api.request(\"PATCH\", `/${API_VERSION}/projects/${projectId}/releases/${releaseName}`, {\n        auth: true,\n        data: payload,\n        origin: api.rulesOrigin,\n    });\n    if (response.status === 200) {\n        logger_1.logger.debug(\"[rules] updated release\", response.body.name);\n        return response.body.name;\n    }\n    return _handleErrorResponse(response);\n}\nexports.updateRelease = updateRelease;\nasync function updateOrCreateRelease(projectId, rulesetName, releaseName) {\n    logger_1.logger.debug(\"[rules] releasing\", releaseName, \"with ruleset\", rulesetName);\n    return updateRelease(projectId, rulesetName, releaseName).catch(() => {\n        logger_1.logger.debug(\"[rules] ruleset update failed, attempting to create instead\");\n        return createRelease(projectId, rulesetName, releaseName);\n    });\n}\nexports.updateOrCreateRelease = updateOrCreateRelease;\nfunction testRuleset(projectId, files) {\n    return api.request(\"POST\", `/${API_VERSION}/projects/${encodeURIComponent(projectId)}:test`, {\n        origin: api.rulesOrigin,\n        data: {\n            source: { files },\n        },\n        auth: true,\n    });\n}\nexports.testRuleset = testRuleset;\n"]},"metadata":{},"sourceType":"script"}