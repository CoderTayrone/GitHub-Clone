{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nconst cli_color_1 = require(\"cli-color\");\n\nconst marked_1 = require(\"marked\");\n\nconst command_1 = require(\"../command\");\n\nconst utils_1 = require(\"../utils\");\n\nconst api_1 = require(\"../hosting/api\");\n\nconst prompt_1 = require(\"../prompt\");\n\nconst requireHostingSite_1 = require(\"../requireHostingSite\");\n\nconst requirePermissions_1 = require(\"../requirePermissions\");\n\nconst projectUtils_1 = require(\"../projectUtils\");\n\nconst requireConfig = require(\"../requireConfig\");\n\nconst logger_1 = require(\"../logger\");\n\nexports.default = new command_1.Command(\"hosting:channel:delete <channelId>\").description(\"delete a Firebase Hosting channel\").withForce().option(\"--site <siteId>\", \"site in which the channel exists\").before(requireConfig).before(requirePermissions_1.requirePermissions, [\"firebasehosting.sites.update\"]).before(requireHostingSite_1.requireHostingSite).action(async (channelId, options) => {\n  const projectId = projectUtils_1.needProjectId(options);\n  const siteId = options.site;\n  channelId = api_1.normalizeName(channelId);\n  const channel = await api_1.getChannel(projectId, siteId, channelId);\n  const confirmed = await prompt_1.promptOnce({\n    name: \"force\",\n    type: \"confirm\",\n    message: `Are you sure you want to delete the Hosting Channel ${cli_color_1.underline(channelId)} for site ${cli_color_1.underline(siteId)}?`,\n    default: false\n  }, options);\n\n  if (!confirmed) {\n    return;\n  }\n\n  await api_1.deleteChannel(projectId, siteId, channelId);\n\n  if (channel) {\n    try {\n      await api_1.removeAuthDomain(projectId, channel.url);\n    } catch (e) {\n      utils_1.logLabeledWarning(\"hosting:channel\", marked_1.default(`Unable to remove channel domain from Firebase Auth. Visit the Firebase Console at ${utils_1.consoleUrl(projectId, \"/authentication/providers\")}`));\n      logger_1.logger.debug(\"[hosting] unable to remove auth domain\", e);\n    }\n  }\n\n  utils_1.logLabeledSuccess(\"hosting:channels\", `Successfully deleted channel ${cli_color_1.bold(channelId)} for site ${cli_color_1.bold(siteId)}.`);\n});","map":{"version":3,"sources":["/home/dev/Documentos/Projects/github-clone/node_modules/firebase-tools/lib/commands/hosting-channel-delete.js"],"names":["Object","defineProperty","exports","value","cli_color_1","require","marked_1","command_1","utils_1","api_1","prompt_1","requireHostingSite_1","requirePermissions_1","projectUtils_1","requireConfig","logger_1","default","Command","description","withForce","option","before","requirePermissions","requireHostingSite","action","channelId","options","projectId","needProjectId","siteId","site","normalizeName","channel","getChannel","confirmed","promptOnce","name","type","message","underline","deleteChannel","removeAuthDomain","url","e","logLabeledWarning","consoleUrl","logger","debug","logLabeledSuccess","bold"],"mappings":"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","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst cli_color_1 = require(\"cli-color\");\nconst marked_1 = require(\"marked\");\nconst command_1 = require(\"../command\");\nconst utils_1 = require(\"../utils\");\nconst api_1 = require(\"../hosting/api\");\nconst prompt_1 = require(\"../prompt\");\nconst requireHostingSite_1 = require(\"../requireHostingSite\");\nconst requirePermissions_1 = require(\"../requirePermissions\");\nconst projectUtils_1 = require(\"../projectUtils\");\nconst requireConfig = require(\"../requireConfig\");\nconst logger_1 = require(\"../logger\");\nexports.default = new command_1.Command(\"hosting:channel:delete <channelId>\")\n    .description(\"delete a Firebase Hosting channel\")\n    .withForce()\n    .option(\"--site <siteId>\", \"site in which the channel exists\")\n    .before(requireConfig)\n    .before(requirePermissions_1.requirePermissions, [\"firebasehosting.sites.update\"])\n    .before(requireHostingSite_1.requireHostingSite)\n    .action(async (channelId, options) => {\n    const projectId = projectUtils_1.needProjectId(options);\n    const siteId = options.site;\n    channelId = api_1.normalizeName(channelId);\n    const channel = await api_1.getChannel(projectId, siteId, channelId);\n    const confirmed = await prompt_1.promptOnce({\n        name: \"force\",\n        type: \"confirm\",\n        message: `Are you sure you want to delete the Hosting Channel ${cli_color_1.underline(channelId)} for site ${cli_color_1.underline(siteId)}?`,\n        default: false,\n    }, options);\n    if (!confirmed) {\n        return;\n    }\n    await api_1.deleteChannel(projectId, siteId, channelId);\n    if (channel) {\n        try {\n            await api_1.removeAuthDomain(projectId, channel.url);\n        }\n        catch (e) {\n            utils_1.logLabeledWarning(\"hosting:channel\", marked_1.default(`Unable to remove channel domain from Firebase Auth. Visit the Firebase Console at ${utils_1.consoleUrl(projectId, \"/authentication/providers\")}`));\n            logger_1.logger.debug(\"[hosting] unable to remove auth domain\", e);\n        }\n    }\n    utils_1.logLabeledSuccess(\"hosting:channels\", `Successfully deleted channel ${cli_color_1.bold(channelId)} for site ${cli_color_1.bold(siteId)}.`);\n});\n"]},"metadata":{},"sourceType":"script"}