{"ast":null,"code":"/**\n * Copyright 2015 Google Inc. All Rights Reserved.\n * Use of this source code is governed by a BSD-style\n * license that can be found in the LICENSE file or at\n * https://github.com/firebase/superstatic/blob/master/LICENSE\n */\nconst middleware = require(\"./middleware\");\n\nconst _ = require(\"lodash\");\n\nconst promiseback = require(\"./utils/promiseback\");\n\nconst RSVP = require(\"rsvp\");\n\nconst Activator = function (spec, provider) {\n  this.spec = spec;\n  this.provider = provider;\n  this.stack = this.buildStack();\n\n  if (_.isFunction(spec.config)) {\n    this.awaitConfig = spec.config;\n  } else {\n    this.awaitConfig = function () {\n      return RSVP.resolve(spec.config);\n    };\n  }\n};\n\nActivator.prototype.buildStack = function () {\n  const self = this;\n  const stack = this.spec.stack.slice(0);\n\n  _.forEach(this.spec.before, (wares, name) => {\n    stack.splice(...[stack.indexOf(name), 0].concat(wares));\n  });\n\n  _.forEach(this.spec.after, (wares, name) => {\n    stack.splice(...[stack.indexOf(name) + 1, 0].concat(wares));\n  });\n\n  return stack.map(ware => {\n    return _.isFunction(ware) ? ware : middleware[ware](self.spec);\n  });\n};\n\nActivator.prototype.build = function () {\n  const self = this;\n  return function (req, res, next) {\n    promiseback(self.awaitConfig, 2)(req, res).then(config => {\n      req.superstatic = config || {};\n      const stack = self.stack.slice(0).reverse();\n\n      const _run = function () {\n        if (!stack.length) {\n          return next();\n        }\n\n        const fn = stack.pop();\n        return fn(req, res, _run);\n      };\n\n      _run();\n    }, next);\n  };\n};\n\nmodule.exports = function (spec, provider) {\n  return new Activator(spec, provider).build();\n};","map":{"version":3,"sources":["/home/dev/Documentos/Projects/github-clone/node_modules/superstatic/lib/activator.js"],"names":["middleware","require","_","promiseback","RSVP","Activator","spec","provider","stack","buildStack","isFunction","config","awaitConfig","resolve","prototype","self","slice","forEach","before","wares","name","splice","indexOf","concat","after","map","ware","build","req","res","next","then","superstatic","reverse","_run","length","fn","pop","module","exports"],"mappings":"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","sourcesContent":["/**\n * Copyright 2015 Google Inc. All Rights Reserved.\n * Use of this source code is governed by a BSD-style\n * license that can be found in the LICENSE file or at\n * https://github.com/firebase/superstatic/blob/master/LICENSE\n */\n\nconst middleware = require(\"./middleware\");\nconst _ = require(\"lodash\");\nconst promiseback = require(\"./utils/promiseback\");\nconst RSVP = require(\"rsvp\");\n\nconst Activator = function(spec, provider) {\n  this.spec = spec;\n  this.provider = provider;\n  this.stack = this.buildStack();\n\n  if (_.isFunction(spec.config)) {\n    this.awaitConfig = spec.config;\n  } else {\n    this.awaitConfig = function() {\n      return RSVP.resolve(spec.config);\n    };\n  }\n};\n\nActivator.prototype.buildStack = function() {\n  const self = this;\n\n  const stack = this.spec.stack.slice(0);\n  _.forEach(this.spec.before, (wares, name) => {\n    stack.splice(...[stack.indexOf(name), 0].concat(wares));\n  });\n\n  _.forEach(this.spec.after, (wares, name) => {\n    stack.splice(...[stack.indexOf(name) + 1, 0].concat(wares));\n  });\n\n  return stack.map((ware) => {\n    return _.isFunction(ware) ? ware : middleware[ware](self.spec);\n  });\n};\n\nActivator.prototype.build = function() {\n  const self = this;\n\n  return function(req, res, next) {\n    promiseback(self.awaitConfig, 2)(req, res).then((config) => {\n      req.superstatic = config || {};\n\n      const stack = self.stack.slice(0).reverse();\n      const _run = function() {\n        if (!stack.length) {\n          return next();\n        }\n        const fn = stack.pop();\n        return fn(req, res, _run);\n      };\n\n      _run();\n    }, next);\n  };\n};\n\nmodule.exports = function(spec, provider) {\n  return new Activator(spec, provider).build();\n};\n"]},"metadata":{},"sourceType":"script"}