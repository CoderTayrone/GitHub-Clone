{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.filterTargets = void 0;\n\nconst lodash_1 = require(\"lodash\");\n\nconst error_1 = require(\"./error\");\n\nfunction filterTargets(options, validTargets) {\n  let targets = validTargets.filter(t => {\n    return options.config.has(t);\n  });\n\n  if (options.only) {\n    targets = lodash_1.intersection(targets, options.only.split(\",\").map(opt => {\n      return opt.split(\":\")[0];\n    }));\n  } else if (options.except) {\n    targets = lodash_1.difference(targets, options.except.split(\",\"));\n  }\n\n  if (targets.length === 0) {\n    let msg = \"Cannot understand what targets to deploy/serve.\";\n\n    if (options.only) {\n      msg += ` No targets in firebase.json match '--only ${options.only}'.`;\n    } else if (options.except) {\n      msg += ` No targets in firebase.json match '--except ${options.except}'.`;\n    }\n\n    if (process.platform === \"win32\") {\n      msg += ' If you are using PowerShell make sure you place quotes around any comma-separated lists (ex: --only \"functions,firestore\").';\n    }\n\n    throw new error_1.FirebaseError(msg);\n  }\n\n  return targets;\n}\n\nexports.filterTargets = filterTargets;","map":{"version":3,"sources":["/home/dev/Documentos/Projects/github-clone/node_modules/firebase-tools/lib/filterTargets.js"],"names":["Object","defineProperty","exports","value","filterTargets","lodash_1","require","error_1","options","validTargets","targets","filter","t","config","has","only","intersection","split","map","opt","except","difference","length","msg","process","platform","FirebaseError"],"mappings":"AAAA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;AACAD,OAAO,CAACE,aAAR,GAAwB,KAAK,CAA7B;;AACA,MAAMC,QAAQ,GAAGC,OAAO,CAAC,QAAD,CAAxB;;AACA,MAAMC,OAAO,GAAGD,OAAO,CAAC,SAAD,CAAvB;;AACA,SAASF,aAAT,CAAuBI,OAAvB,EAAgCC,YAAhC,EAA8C;AAC1C,MAAIC,OAAO,GAAGD,YAAY,CAACE,MAAb,CAAqBC,CAAD,IAAO;AACrC,WAAOJ,OAAO,CAACK,MAAR,CAAeC,GAAf,CAAmBF,CAAnB,CAAP;AACH,GAFa,CAAd;;AAGA,MAAIJ,OAAO,CAACO,IAAZ,EAAkB;AACdL,IAAAA,OAAO,GAAGL,QAAQ,CAACW,YAAT,CAAsBN,OAAtB,EAA+BF,OAAO,CAACO,IAAR,CAAaE,KAAb,CAAmB,GAAnB,EAAwBC,GAAxB,CAA6BC,GAAD,IAAS;AAC1E,aAAOA,GAAG,CAACF,KAAJ,CAAU,GAAV,EAAe,CAAf,CAAP;AACH,KAFwC,CAA/B,CAAV;AAGH,GAJD,MAKK,IAAIT,OAAO,CAACY,MAAZ,EAAoB;AACrBV,IAAAA,OAAO,GAAGL,QAAQ,CAACgB,UAAT,CAAoBX,OAApB,EAA6BF,OAAO,CAACY,MAAR,CAAeH,KAAf,CAAqB,GAArB,CAA7B,CAAV;AACH;;AACD,MAAIP,OAAO,CAACY,MAAR,KAAmB,CAAvB,EAA0B;AACtB,QAAIC,GAAG,GAAG,iDAAV;;AACA,QAAIf,OAAO,CAACO,IAAZ,EAAkB;AACdQ,MAAAA,GAAG,IAAK,8CAA6Cf,OAAO,CAACO,IAAK,IAAlE;AACH,KAFD,MAGK,IAAIP,OAAO,CAACY,MAAZ,EAAoB;AACrBG,MAAAA,GAAG,IAAK,gDAA+Cf,OAAO,CAACY,MAAO,IAAtE;AACH;;AACD,QAAII,OAAO,CAACC,QAAR,KAAqB,OAAzB,EAAkC;AAC9BF,MAAAA,GAAG,IACC,8HADJ;AAEH;;AACD,UAAM,IAAIhB,OAAO,CAACmB,aAAZ,CAA0BH,GAA1B,CAAN;AACH;;AACD,SAAOb,OAAP;AACH;;AACDR,OAAO,CAACE,aAAR,GAAwBA,aAAxB","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.filterTargets = void 0;\nconst lodash_1 = require(\"lodash\");\nconst error_1 = require(\"./error\");\nfunction filterTargets(options, validTargets) {\n    let targets = validTargets.filter((t) => {\n        return options.config.has(t);\n    });\n    if (options.only) {\n        targets = lodash_1.intersection(targets, options.only.split(\",\").map((opt) => {\n            return opt.split(\":\")[0];\n        }));\n    }\n    else if (options.except) {\n        targets = lodash_1.difference(targets, options.except.split(\",\"));\n    }\n    if (targets.length === 0) {\n        let msg = \"Cannot understand what targets to deploy/serve.\";\n        if (options.only) {\n            msg += ` No targets in firebase.json match '--only ${options.only}'.`;\n        }\n        else if (options.except) {\n            msg += ` No targets in firebase.json match '--except ${options.except}'.`;\n        }\n        if (process.platform === \"win32\") {\n            msg +=\n                ' If you are using PowerShell make sure you place quotes around any comma-separated lists (ex: --only \"functions,firestore\").';\n        }\n        throw new error_1.FirebaseError(msg);\n    }\n    return targets;\n}\nexports.filterTargets = filterTargets;\n"]},"metadata":{},"sourceType":"script"}