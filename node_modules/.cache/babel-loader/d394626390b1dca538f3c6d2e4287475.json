{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nconst body_parser_1 = __importDefault(require(\"body-parser\"));\n\nclass JsonBodyParser {\n  constructor(maxBodySize) {\n    // FIXME: https://github.com/expressjs/body-parser/issues/304\n    this._bodyParserMiddlware = body_parser_1.default.json({\n      inflate: true,\n      limit: maxBodySize,\n      type: '*/*'\n    });\n  }\n\n  parseString(value) {\n    return JSON.parse(value);\n  }\n\n  parseReq(req, res, done) {\n    this._bodyParserMiddlware(req, res, done);\n  }\n\n}\n\nexports.default = JsonBodyParser;","map":{"version":3,"sources":["../../src/bodyParsers/JsonBodyParser.ts"],"names":[],"mappings":";;;;;;;;;;;;AACA,MAAA,aAAA,GAAA,eAAA,CAAA,OAAA,CAAA,aAAA,CAAA,CAAA;;AAIA,MAAqB,cAArB,CAAmC;AAG/B,EAAA,WAAA,CAAY,WAAZ,EAA+B;AAC3B;AACA,SAAK,oBAAL,GAA4B,aAAA,CAAA,OAAA,CAAkB,IAAlB,CAAuB;AAC/C,MAAA,OAAO,EAAE,IADsC;AAE/C,MAAA,KAAK,EAAE,WAFwC;AAG/C,MAAA,IAAI,EAAE;AAHyC,KAAvB,CAA5B;AAKH;;AAED,EAAA,WAAW,CAAC,KAAD,EAAc;AACrB,WAAO,IAAI,CAAC,KAAL,CAAW,KAAX,CAAP;AACH;;AAED,EAAA,QAAQ,CAAC,GAAD,EAA4B,GAA5B,EAAsD,IAAtD,EAA0E;AAC9E,SAAK,oBAAL,CAA0B,GAA1B,EAA+B,GAA/B,EAAoC,IAApC;AACH;;AAlB8B;;AAAnC,OAAA,CAAA,OAAA,GAAA,cAAA","sourceRoot":"","sourcesContent":["\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst body_parser_1 = __importDefault(require(\"body-parser\"));\nclass JsonBodyParser {\n    constructor(maxBodySize) {\n        // FIXME: https://github.com/expressjs/body-parser/issues/304\n        this._bodyParserMiddlware = body_parser_1.default.json({\n            inflate: true,\n            limit: maxBodySize,\n            type: '*/*',\n        });\n    }\n    parseString(value) {\n        return JSON.parse(value);\n    }\n    parseReq(req, res, done) {\n        this._bodyParserMiddlware(req, res, done);\n    }\n}\nexports.default = JsonBodyParser;\n//# sourceMappingURL=JsonBodyParser.js.map"]},"metadata":{},"sourceType":"script"}