{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.requirePermissions = void 0;\n\nconst cli_color_1 = require(\"cli-color\");\n\nconst projectUtils_1 = require(\"./projectUtils\");\n\nconst requireAuth_1 = require(\"./requireAuth\");\n\nconst logger_1 = require(\"./logger\");\n\nconst error_1 = require(\"./error\");\n\nconst iam_1 = require(\"./gcp/iam\");\n\nconst BASE_PERMISSIONS = [\"firebase.projects.get\"];\n\nasync function requirePermissions(options, permissions = []) {\n  const projectId = projectUtils_1.needProjectId(options);\n  const requiredPermissions = BASE_PERMISSIONS.concat(permissions).sort();\n  await requireAuth_1.requireAuth(options);\n  logger_1.logger.debug(`[iam] checking project ${projectId} for permissions ${JSON.stringify(requiredPermissions)}`);\n\n  try {\n    const iamResult = await iam_1.testIamPermissions(projectId, requiredPermissions);\n\n    if (!iamResult.passed) {\n      throw new error_1.FirebaseError(`Authorization failed. This account is missing the following required permissions on project ${cli_color_1.bold(projectId)}:\\n\\n  ${iamResult.missing.join(\"\\n  \")}`);\n    }\n  } catch (err) {\n    logger_1.logger.debug(`[iam] error while checking permissions, command may fail: ${err}`);\n    return;\n  }\n}\n\nexports.requirePermissions = requirePermissions;","map":{"version":3,"sources":["/home/dev/Documentos/Projects/github-clone/node_modules/firebase-tools/lib/requirePermissions.js"],"names":["Object","defineProperty","exports","value","requirePermissions","cli_color_1","require","projectUtils_1","requireAuth_1","logger_1","error_1","iam_1","BASE_PERMISSIONS","options","permissions","projectId","needProjectId","requiredPermissions","concat","sort","requireAuth","logger","debug","JSON","stringify","iamResult","testIamPermissions","passed","FirebaseError","bold","missing","join","err"],"mappings":"AAAA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;AACAD,OAAO,CAACE,kBAAR,GAA6B,KAAK,CAAlC;;AACA,MAAMC,WAAW,GAAGC,OAAO,CAAC,WAAD,CAA3B;;AACA,MAAMC,cAAc,GAAGD,OAAO,CAAC,gBAAD,CAA9B;;AACA,MAAME,aAAa,GAAGF,OAAO,CAAC,eAAD,CAA7B;;AACA,MAAMG,QAAQ,GAAGH,OAAO,CAAC,UAAD,CAAxB;;AACA,MAAMI,OAAO,GAAGJ,OAAO,CAAC,SAAD,CAAvB;;AACA,MAAMK,KAAK,GAAGL,OAAO,CAAC,WAAD,CAArB;;AACA,MAAMM,gBAAgB,GAAG,CAAC,uBAAD,CAAzB;;AACA,eAAeR,kBAAf,CAAkCS,OAAlC,EAA2CC,WAAW,GAAG,EAAzD,EAA6D;AACzD,QAAMC,SAAS,GAAGR,cAAc,CAACS,aAAf,CAA6BH,OAA7B,CAAlB;AACA,QAAMI,mBAAmB,GAAGL,gBAAgB,CAACM,MAAjB,CAAwBJ,WAAxB,EAAqCK,IAArC,EAA5B;AACA,QAAMX,aAAa,CAACY,WAAd,CAA0BP,OAA1B,CAAN;AACAJ,EAAAA,QAAQ,CAACY,MAAT,CAAgBC,KAAhB,CAAuB,0BAAyBP,SAAU,oBAAmBQ,IAAI,CAACC,SAAL,CAAeP,mBAAf,CAAoC,EAAjH;;AACA,MAAI;AACA,UAAMQ,SAAS,GAAG,MAAMd,KAAK,CAACe,kBAAN,CAAyBX,SAAzB,EAAoCE,mBAApC,CAAxB;;AACA,QAAI,CAACQ,SAAS,CAACE,MAAf,EAAuB;AACnB,YAAM,IAAIjB,OAAO,CAACkB,aAAZ,CAA2B,+FAA8FvB,WAAW,CAACwB,IAAZ,CAAiBd,SAAjB,CAA4B,UAASU,SAAS,CAACK,OAAV,CAAkBC,IAAlB,CAAuB,MAAvB,CAA+B,EAA7L,CAAN;AACH;AACJ,GALD,CAMA,OAAOC,GAAP,EAAY;AACRvB,IAAAA,QAAQ,CAACY,MAAT,CAAgBC,KAAhB,CAAuB,6DAA4DU,GAAI,EAAvF;AACA;AACH;AACJ;;AACD9B,OAAO,CAACE,kBAAR,GAA6BA,kBAA7B","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.requirePermissions = void 0;\nconst cli_color_1 = require(\"cli-color\");\nconst projectUtils_1 = require(\"./projectUtils\");\nconst requireAuth_1 = require(\"./requireAuth\");\nconst logger_1 = require(\"./logger\");\nconst error_1 = require(\"./error\");\nconst iam_1 = require(\"./gcp/iam\");\nconst BASE_PERMISSIONS = [\"firebase.projects.get\"];\nasync function requirePermissions(options, permissions = []) {\n    const projectId = projectUtils_1.needProjectId(options);\n    const requiredPermissions = BASE_PERMISSIONS.concat(permissions).sort();\n    await requireAuth_1.requireAuth(options);\n    logger_1.logger.debug(`[iam] checking project ${projectId} for permissions ${JSON.stringify(requiredPermissions)}`);\n    try {\n        const iamResult = await iam_1.testIamPermissions(projectId, requiredPermissions);\n        if (!iamResult.passed) {\n            throw new error_1.FirebaseError(`Authorization failed. This account is missing the following required permissions on project ${cli_color_1.bold(projectId)}:\\n\\n  ${iamResult.missing.join(\"\\n  \")}`);\n        }\n    }\n    catch (err) {\n        logger_1.logger.debug(`[iam] error while checking permissions, command may fail: ${err}`);\n        return;\n    }\n}\nexports.requirePermissions = requirePermissions;\n"]},"metadata":{},"sourceType":"script"}