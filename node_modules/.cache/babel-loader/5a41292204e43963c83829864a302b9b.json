{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.printSourceDownloadLink = exports.getConsent = exports.displayUpdateChangesRequiringConfirmation = exports.displayUpdateChangesNoInput = exports.displayExtInfo = void 0;\n\nconst _ = require(\"lodash\");\n\nconst clc = require(\"cli-color\");\n\nconst marked = require(\"marked\");\n\nconst TerminalRenderer = require(\"marked-terminal\");\n\nconst utils = require(\"../utils\");\n\nconst extensionsHelper_1 = require(\"./extensionsHelper\");\n\nconst logger_1 = require(\"../logger\");\n\nconst error_1 = require(\"../error\");\n\nconst prompt_1 = require(\"../prompt\");\n\nmarked.setOptions({\n  renderer: new TerminalRenderer()\n});\nconst additionColor = clc.green;\nconst deletionColor = clc.red;\n\nfunction displayExtInfo(extensionName, publisher, spec, published = false) {\n  const lines = [];\n  lines.push(`**Name**: ${spec.displayName}`);\n\n  if (publisher) {\n    lines.push(`**Publisher**: ${publisher}`);\n  }\n\n  if (spec.description) {\n    lines.push(`**Description**: ${spec.description}`);\n  }\n\n  if (published) {\n    if (spec.license) {\n      lines.push(`**License**: ${spec.license}`);\n    }\n\n    lines.push(`**Source code**: ${spec.sourceUrl}`);\n  }\n\n  if (lines.length > 0) {\n    utils.logLabeledBullet(extensionsHelper_1.logPrefix, `information about '${clc.bold(extensionName)}':`);\n    const infoStr = lines.join(\"\\n\");\n    const formatted = marked(infoStr).replace(/\\n+$/, \"\\n\");\n    logger_1.logger.info(formatted);\n    return lines;\n  } else {\n    throw new error_1.FirebaseError(\"Error occurred during installation: cannot parse info from source spec\", {\n      context: {\n        spec: spec,\n        extensionName: extensionName\n      }\n    });\n  }\n}\n\nexports.displayExtInfo = displayExtInfo;\n\nfunction displayUpdateChangesNoInput(spec, newSpec) {\n  var _a, _b, _c, _d;\n\n  const lines = [];\n\n  if (spec.displayName !== newSpec.displayName) {\n    lines.push(\"\", \"**Name:**\", deletionColor(`- ${spec.displayName}`), additionColor(`+ ${newSpec.displayName}`));\n  }\n\n  if (((_a = spec.author) === null || _a === void 0 ? void 0 : _a.authorName) !== ((_b = newSpec.author) === null || _b === void 0 ? void 0 : _b.authorName)) {\n    lines.push(\"\", \"**Author:**\", deletionColor(`- ${(_c = spec.author) === null || _c === void 0 ? void 0 : _c.authorName}`), additionColor(`+ ${(_d = spec.author) === null || _d === void 0 ? void 0 : _d.authorName}`));\n  }\n\n  if (spec.description !== newSpec.description) {\n    lines.push(\"\", \"**Description:**\", deletionColor(`- ${spec.description}`), additionColor(`+ ${newSpec.description}`));\n  }\n\n  if (spec.sourceUrl !== newSpec.sourceUrl) {\n    lines.push(\"\", \"**Source code:**\", deletionColor(`- ${spec.sourceUrl}`), additionColor(`+ ${newSpec.sourceUrl}`));\n  }\n\n  if (spec.billingRequired && !newSpec.billingRequired) {\n    lines.push(\"\", \"**Billing is no longer required for this extension.**\");\n  }\n\n  logger_1.logger.info(marked(lines.join(\"\\n\")));\n  return lines;\n}\n\nexports.displayUpdateChangesNoInput = displayUpdateChangesNoInput;\n\nasync function displayUpdateChangesRequiringConfirmation(spec, newSpec) {\n  if (spec.license !== newSpec.license) {\n    const message = \"\\n\" + \"**License**\\n\" + deletionColor(spec.license ? `- ${spec.license}\\n` : \"- None\\n\") + additionColor(newSpec.license ? `+ ${newSpec.license}\\n` : \"+ None\\n\") + \"Do you wish to continue?\";\n    await getConsent(\"license\", marked(message));\n  }\n\n  const apisDiffDeletions = _.differenceWith(spec.apis, _.get(newSpec, \"apis\", []), _.isEqual);\n\n  const apisDiffAdditions = _.differenceWith(newSpec.apis, _.get(spec, \"apis\", []), _.isEqual);\n\n  if (apisDiffDeletions.length || apisDiffAdditions.length) {\n    let message = \"\\n**APIs:**\\n\";\n    apisDiffDeletions.forEach(api => {\n      message += deletionColor(`- ${api.apiName} (${api.reason})\\n`);\n    });\n    apisDiffAdditions.forEach(api => {\n      message += additionColor(`+ ${api.apiName} (${api.reason})\\n`);\n    });\n    message += \"Do you wish to continue?\";\n    await getConsent(\"apis\", marked(message));\n  }\n\n  const resourcesDiffDeletions = _.differenceWith(spec.resources, _.get(newSpec, \"resources\", []), compareResources);\n\n  const resourcesDiffAdditions = _.differenceWith(newSpec.resources, _.get(spec, \"resources\", []), compareResources);\n\n  if (resourcesDiffDeletions.length || resourcesDiffAdditions.length) {\n    let message = \"\\n**Resources:**\\n\";\n    resourcesDiffDeletions.forEach(resource => {\n      message += deletionColor(` - ${getResourceReadableName(resource)}`);\n    });\n    resourcesDiffAdditions.forEach(resource => {\n      message += additionColor(`+ ${getResourceReadableName(resource)}`);\n    });\n    message += \"Do you wish to continue?\";\n    await getConsent(\"resources\", marked(message));\n  }\n\n  const rolesDiffDeletions = _.differenceWith(spec.roles, _.get(newSpec, \"roles\", []), _.isEqual);\n\n  const rolesDiffAdditions = _.differenceWith(newSpec.roles, _.get(spec, \"roles\", []), _.isEqual);\n\n  if (rolesDiffDeletions.length || rolesDiffAdditions.length) {\n    let message = \"\\n**Permissions:**\\n\";\n    rolesDiffDeletions.forEach(role => {\n      message += deletionColor(`- ${role.role} (${role.reason})\\n`);\n    });\n    rolesDiffAdditions.forEach(role => {\n      message += additionColor(`+ ${role.role} (${role.reason})\\n`);\n    });\n    message += \"Do you wish to continue?\";\n    await getConsent(\"apis\", marked(message));\n  }\n\n  if (!spec.billingRequired && newSpec.billingRequired) {\n    await getConsent(\"billingRequired\", \"Billing is now required for the new version of this extension. Would you like to continue?\");\n  }\n}\n\nexports.displayUpdateChangesRequiringConfirmation = displayUpdateChangesRequiringConfirmation;\n\nfunction compareResources(resource1, resource2) {\n  return resource1.name == resource2.name && resource1.type == resource2.type;\n}\n\nfunction getResourceReadableName(resource) {\n  return resource.type === \"firebaseextensions.v1beta.function\" ? `${resource.name} (Cloud Function): ${resource.description}\\n` : `${resource.name} (${resource.type})\\n`;\n}\n\nasync function getConsent(field, message) {\n  const consent = await prompt_1.promptOnce({\n    type: \"confirm\",\n    message,\n    default: true\n  });\n\n  if (!consent) {\n    throw new error_1.FirebaseError(`Without explicit consent for the change to ${field}, we cannot update this extension instance.`, {\n      exit: 2\n    });\n  }\n}\n\nexports.getConsent = getConsent;\n\nfunction printSourceDownloadLink(sourceDownloadUri) {\n  const sourceDownloadMsg = `Want to review the source code that will be installed? Download it here: ${sourceDownloadUri}`;\n  utils.logBullet(marked(sourceDownloadMsg));\n}\n\nexports.printSourceDownloadLink = printSourceDownloadLink;","map":{"version":3,"sources":["/home/dev/Documentos/Projects/github-clone/node_modules/firebase-tools/lib/extensions/displayExtensionInfo.js"],"names":["Object","defineProperty","exports","value","printSourceDownloadLink","getConsent","displayUpdateChangesRequiringConfirmation","displayUpdateChangesNoInput","displayExtInfo","_","require","clc","marked","TerminalRenderer","utils","extensionsHelper_1","logger_1","error_1","prompt_1","setOptions","renderer","additionColor","green","deletionColor","red","extensionName","publisher","spec","published","lines","push","displayName","description","license","sourceUrl","length","logLabeledBullet","logPrefix","bold","infoStr","join","formatted","replace","logger","info","FirebaseError","context","newSpec","_a","_b","_c","_d","author","authorName","billingRequired","message","apisDiffDeletions","differenceWith","apis","get","isEqual","apisDiffAdditions","forEach","api","apiName","reason","resourcesDiffDeletions","resources","compareResources","resourcesDiffAdditions","resource","getResourceReadableName","rolesDiffDeletions","roles","rolesDiffAdditions","role","resource1","resource2","name","type","field","consent","promptOnce","default","exit","sourceDownloadUri","sourceDownloadMsg","logBullet"],"mappings":"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","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.printSourceDownloadLink = exports.getConsent = exports.displayUpdateChangesRequiringConfirmation = exports.displayUpdateChangesNoInput = exports.displayExtInfo = void 0;\nconst _ = require(\"lodash\");\nconst clc = require(\"cli-color\");\nconst marked = require(\"marked\");\nconst TerminalRenderer = require(\"marked-terminal\");\nconst utils = require(\"../utils\");\nconst extensionsHelper_1 = require(\"./extensionsHelper\");\nconst logger_1 = require(\"../logger\");\nconst error_1 = require(\"../error\");\nconst prompt_1 = require(\"../prompt\");\nmarked.setOptions({\n    renderer: new TerminalRenderer(),\n});\nconst additionColor = clc.green;\nconst deletionColor = clc.red;\nfunction displayExtInfo(extensionName, publisher, spec, published = false) {\n    const lines = [];\n    lines.push(`**Name**: ${spec.displayName}`);\n    if (publisher) {\n        lines.push(`**Publisher**: ${publisher}`);\n    }\n    if (spec.description) {\n        lines.push(`**Description**: ${spec.description}`);\n    }\n    if (published) {\n        if (spec.license) {\n            lines.push(`**License**: ${spec.license}`);\n        }\n        lines.push(`**Source code**: ${spec.sourceUrl}`);\n    }\n    if (lines.length > 0) {\n        utils.logLabeledBullet(extensionsHelper_1.logPrefix, `information about '${clc.bold(extensionName)}':`);\n        const infoStr = lines.join(\"\\n\");\n        const formatted = marked(infoStr).replace(/\\n+$/, \"\\n\");\n        logger_1.logger.info(formatted);\n        return lines;\n    }\n    else {\n        throw new error_1.FirebaseError(\"Error occurred during installation: cannot parse info from source spec\", {\n            context: {\n                spec: spec,\n                extensionName: extensionName,\n            },\n        });\n    }\n}\nexports.displayExtInfo = displayExtInfo;\nfunction displayUpdateChangesNoInput(spec, newSpec) {\n    var _a, _b, _c, _d;\n    const lines = [];\n    if (spec.displayName !== newSpec.displayName) {\n        lines.push(\"\", \"**Name:**\", deletionColor(`- ${spec.displayName}`), additionColor(`+ ${newSpec.displayName}`));\n    }\n    if (((_a = spec.author) === null || _a === void 0 ? void 0 : _a.authorName) !== ((_b = newSpec.author) === null || _b === void 0 ? void 0 : _b.authorName)) {\n        lines.push(\"\", \"**Author:**\", deletionColor(`- ${(_c = spec.author) === null || _c === void 0 ? void 0 : _c.authorName}`), additionColor(`+ ${(_d = spec.author) === null || _d === void 0 ? void 0 : _d.authorName}`));\n    }\n    if (spec.description !== newSpec.description) {\n        lines.push(\"\", \"**Description:**\", deletionColor(`- ${spec.description}`), additionColor(`+ ${newSpec.description}`));\n    }\n    if (spec.sourceUrl !== newSpec.sourceUrl) {\n        lines.push(\"\", \"**Source code:**\", deletionColor(`- ${spec.sourceUrl}`), additionColor(`+ ${newSpec.sourceUrl}`));\n    }\n    if (spec.billingRequired && !newSpec.billingRequired) {\n        lines.push(\"\", \"**Billing is no longer required for this extension.**\");\n    }\n    logger_1.logger.info(marked(lines.join(\"\\n\")));\n    return lines;\n}\nexports.displayUpdateChangesNoInput = displayUpdateChangesNoInput;\nasync function displayUpdateChangesRequiringConfirmation(spec, newSpec) {\n    if (spec.license !== newSpec.license) {\n        const message = \"\\n\" +\n            \"**License**\\n\" +\n            deletionColor(spec.license ? `- ${spec.license}\\n` : \"- None\\n\") +\n            additionColor(newSpec.license ? `+ ${newSpec.license}\\n` : \"+ None\\n\") +\n            \"Do you wish to continue?\";\n        await getConsent(\"license\", marked(message));\n    }\n    const apisDiffDeletions = _.differenceWith(spec.apis, _.get(newSpec, \"apis\", []), _.isEqual);\n    const apisDiffAdditions = _.differenceWith(newSpec.apis, _.get(spec, \"apis\", []), _.isEqual);\n    if (apisDiffDeletions.length || apisDiffAdditions.length) {\n        let message = \"\\n**APIs:**\\n\";\n        apisDiffDeletions.forEach((api) => {\n            message += deletionColor(`- ${api.apiName} (${api.reason})\\n`);\n        });\n        apisDiffAdditions.forEach((api) => {\n            message += additionColor(`+ ${api.apiName} (${api.reason})\\n`);\n        });\n        message += \"Do you wish to continue?\";\n        await getConsent(\"apis\", marked(message));\n    }\n    const resourcesDiffDeletions = _.differenceWith(spec.resources, _.get(newSpec, \"resources\", []), compareResources);\n    const resourcesDiffAdditions = _.differenceWith(newSpec.resources, _.get(spec, \"resources\", []), compareResources);\n    if (resourcesDiffDeletions.length || resourcesDiffAdditions.length) {\n        let message = \"\\n**Resources:**\\n\";\n        resourcesDiffDeletions.forEach((resource) => {\n            message += deletionColor(` - ${getResourceReadableName(resource)}`);\n        });\n        resourcesDiffAdditions.forEach((resource) => {\n            message += additionColor(`+ ${getResourceReadableName(resource)}`);\n        });\n        message += \"Do you wish to continue?\";\n        await getConsent(\"resources\", marked(message));\n    }\n    const rolesDiffDeletions = _.differenceWith(spec.roles, _.get(newSpec, \"roles\", []), _.isEqual);\n    const rolesDiffAdditions = _.differenceWith(newSpec.roles, _.get(spec, \"roles\", []), _.isEqual);\n    if (rolesDiffDeletions.length || rolesDiffAdditions.length) {\n        let message = \"\\n**Permissions:**\\n\";\n        rolesDiffDeletions.forEach((role) => {\n            message += deletionColor(`- ${role.role} (${role.reason})\\n`);\n        });\n        rolesDiffAdditions.forEach((role) => {\n            message += additionColor(`+ ${role.role} (${role.reason})\\n`);\n        });\n        message += \"Do you wish to continue?\";\n        await getConsent(\"apis\", marked(message));\n    }\n    if (!spec.billingRequired && newSpec.billingRequired) {\n        await getConsent(\"billingRequired\", \"Billing is now required for the new version of this extension. Would you like to continue?\");\n    }\n}\nexports.displayUpdateChangesRequiringConfirmation = displayUpdateChangesRequiringConfirmation;\nfunction compareResources(resource1, resource2) {\n    return resource1.name == resource2.name && resource1.type == resource2.type;\n}\nfunction getResourceReadableName(resource) {\n    return resource.type === \"firebaseextensions.v1beta.function\"\n        ? `${resource.name} (Cloud Function): ${resource.description}\\n`\n        : `${resource.name} (${resource.type})\\n`;\n}\nasync function getConsent(field, message) {\n    const consent = await prompt_1.promptOnce({\n        type: \"confirm\",\n        message,\n        default: true,\n    });\n    if (!consent) {\n        throw new error_1.FirebaseError(`Without explicit consent for the change to ${field}, we cannot update this extension instance.`, { exit: 2 });\n    }\n}\nexports.getConsent = getConsent;\nfunction printSourceDownloadLink(sourceDownloadUri) {\n    const sourceDownloadMsg = `Want to review the source code that will be installed? Download it here: ${sourceDownloadUri}`;\n    utils.logBullet(marked(sourceDownloadMsg));\n}\nexports.printSourceDownloadLink = printSourceDownloadLink;\n"]},"metadata":{},"sourceType":"script"}