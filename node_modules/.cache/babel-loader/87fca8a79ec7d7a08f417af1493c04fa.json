{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nconst clc = require(\"cli-color\");\n\nconst command_1 = require(\"../command\");\n\nconst types_1 = require(\"../emulator/types\");\n\nconst commandUtils_1 = require(\"../emulator/commandUtils\");\n\nconst delete_1 = require(\"../firestore/delete\");\n\nconst prompt_1 = require(\"../prompt\");\n\nconst requirePermissions_1 = require(\"../requirePermissions\");\n\nconst utils = require(\"../utils\");\n\nfunction getConfirmationMessage(deleteOp, options) {\n  if (options.allCollections) {\n    return \"You are about to delete \" + clc.bold.yellow.underline(\"THE ENTIRE DATABASE\") + \" for \" + clc.cyan(options.project) + \". Are you sure?\";\n  }\n\n  if (deleteOp.isDocumentPath) {\n    if (options.recursive) {\n      return \"You are about to delete the document at \" + clc.cyan(deleteOp.path) + \" and all of its subcollections \" + \" for \" + clc.cyan(options.project) + \". Are you sure?\";\n    }\n\n    return \"You are about to delete the document at \" + clc.cyan(deleteOp.path) + \" for \" + clc.cyan(options.project) + \". Are you sure?\";\n  }\n\n  if (options.recursive) {\n    return \"You are about to delete all documents in the collection at \" + clc.cyan(deleteOp.path) + \" and all of their subcollections \" + \" for \" + clc.cyan(options.project) + \". Are you sure?\";\n  }\n\n  return \"You are about to delete all documents in the collection at \" + clc.cyan(deleteOp.path) + \" for \" + clc.cyan(options.project) + \". Are you sure?\";\n}\n\nmodule.exports = new command_1.Command(\"firestore:delete [path]\").description(\"Delete data from Cloud Firestore.\").option(\"-r, --recursive\", \"Recursive. Delete all documents and subcollections at and under the \" + \"specified level. May not be passed along with --shallow.\").option(\"--shallow\", \"Shallow. Delete only documents at the specified level and ignore documents in \" + \"subcollections. This action can potentially orphan documents nested in \" + \"subcollections. May not be passed along with -r.\").option(\"--all-collections\", \"Delete all. Deletes the entire Firestore database, \" + \"including all collections and documents. Any other flags or arguments will be ignored.\").option(\"-y, --yes\", \"No confirmation. Otherwise, a confirmation prompt will appear.\").before(commandUtils_1.printNoticeIfEmulated, types_1.Emulators.FIRESTORE).before(requirePermissions_1.requirePermissions, [\"datastore.entities.list\", \"datastore.entities.delete\"]).action(async (path, options) => {\n  if (!path && !options.allCollections) {\n    return utils.reject(\"Must specify a path.\", {\n      exit: 1\n    });\n  }\n\n  const deleteOp = new delete_1.FirestoreDelete(options.project, path, {\n    recursive: options.recursive,\n    shallow: options.shallow,\n    allCollections: options.allCollections\n  });\n  const confirm = await prompt_1.promptOnce({\n    type: \"confirm\",\n    name: \"yes\",\n    default: false,\n    message: getConfirmationMessage(deleteOp, options)\n  }, options);\n\n  if (!confirm) {\n    return utils.reject(\"Command aborted.\", {\n      exit: 1\n    });\n  }\n\n  if (options.allCollections) {\n    return deleteOp.deleteDatabase();\n  }\n\n  return deleteOp.execute();\n});","map":{"version":3,"sources":["/home/dev/Documentos/Projects/github-clone/node_modules/firebase-tools/lib/commands/firestore-delete.js"],"names":["Object","defineProperty","exports","value","clc","require","command_1","types_1","commandUtils_1","delete_1","prompt_1","requirePermissions_1","utils","getConfirmationMessage","deleteOp","options","allCollections","bold","yellow","underline","cyan","project","isDocumentPath","recursive","path","module","Command","description","option","before","printNoticeIfEmulated","Emulators","FIRESTORE","requirePermissions","action","reject","exit","FirestoreDelete","shallow","confirm","promptOnce","type","name","default","message","deleteDatabase","execute"],"mappings":"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","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst clc = require(\"cli-color\");\nconst command_1 = require(\"../command\");\nconst types_1 = require(\"../emulator/types\");\nconst commandUtils_1 = require(\"../emulator/commandUtils\");\nconst delete_1 = require(\"../firestore/delete\");\nconst prompt_1 = require(\"../prompt\");\nconst requirePermissions_1 = require(\"../requirePermissions\");\nconst utils = require(\"../utils\");\nfunction getConfirmationMessage(deleteOp, options) {\n    if (options.allCollections) {\n        return (\"You are about to delete \" +\n            clc.bold.yellow.underline(\"THE ENTIRE DATABASE\") +\n            \" for \" +\n            clc.cyan(options.project) +\n            \". Are you sure?\");\n    }\n    if (deleteOp.isDocumentPath) {\n        if (options.recursive) {\n            return (\"You are about to delete the document at \" +\n                clc.cyan(deleteOp.path) +\n                \" and all of its subcollections \" +\n                \" for \" +\n                clc.cyan(options.project) +\n                \". Are you sure?\");\n        }\n        return (\"You are about to delete the document at \" +\n            clc.cyan(deleteOp.path) +\n            \" for \" +\n            clc.cyan(options.project) +\n            \". Are you sure?\");\n    }\n    if (options.recursive) {\n        return (\"You are about to delete all documents in the collection at \" +\n            clc.cyan(deleteOp.path) +\n            \" and all of their subcollections \" +\n            \" for \" +\n            clc.cyan(options.project) +\n            \". Are you sure?\");\n    }\n    return (\"You are about to delete all documents in the collection at \" +\n        clc.cyan(deleteOp.path) +\n        \" for \" +\n        clc.cyan(options.project) +\n        \". Are you sure?\");\n}\nmodule.exports = new command_1.Command(\"firestore:delete [path]\")\n    .description(\"Delete data from Cloud Firestore.\")\n    .option(\"-r, --recursive\", \"Recursive. Delete all documents and subcollections at and under the \" +\n    \"specified level. May not be passed along with --shallow.\")\n    .option(\"--shallow\", \"Shallow. Delete only documents at the specified level and ignore documents in \" +\n    \"subcollections. This action can potentially orphan documents nested in \" +\n    \"subcollections. May not be passed along with -r.\")\n    .option(\"--all-collections\", \"Delete all. Deletes the entire Firestore database, \" +\n    \"including all collections and documents. Any other flags or arguments will be ignored.\")\n    .option(\"-y, --yes\", \"No confirmation. Otherwise, a confirmation prompt will appear.\")\n    .before(commandUtils_1.printNoticeIfEmulated, types_1.Emulators.FIRESTORE)\n    .before(requirePermissions_1.requirePermissions, [\"datastore.entities.list\", \"datastore.entities.delete\"])\n    .action(async (path, options) => {\n    if (!path && !options.allCollections) {\n        return utils.reject(\"Must specify a path.\", { exit: 1 });\n    }\n    const deleteOp = new delete_1.FirestoreDelete(options.project, path, {\n        recursive: options.recursive,\n        shallow: options.shallow,\n        allCollections: options.allCollections,\n    });\n    const confirm = await prompt_1.promptOnce({\n        type: \"confirm\",\n        name: \"yes\",\n        default: false,\n        message: getConfirmationMessage(deleteOp, options),\n    }, options);\n    if (!confirm) {\n        return utils.reject(\"Command aborted.\", { exit: 1 });\n    }\n    if (options.allCollections) {\n        return deleteOp.deleteDatabase();\n    }\n    return deleteOp.execute();\n});\n"]},"metadata":{},"sourceType":"script"}