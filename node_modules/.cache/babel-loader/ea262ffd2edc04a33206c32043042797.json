{"ast":null,"code":"module.exports = function (data, convertObject) {\n  if (!data) {\n    data = [];\n  }\n\n  if (isArgs(data)) {\n    data = [].splice.call(data, 0);\n  }\n\n  if (isObject(data) && convertObject) {\n    data = values(data);\n  }\n\n  return Array.isArray(data) ? data : [data];\n};\n\nfunction isObject(obj) {\n  return Object.prototype.toString.call(obj) === \"[object Object]\";\n}\n\nfunction isArgs(item) {\n  return Object.prototype.toString.call(item) === '[object Arguments]';\n}\n\nfunction values(obj) {\n  return Object.keys(obj).map(function (key) {\n    return obj[key];\n  });\n}","map":{"version":3,"sources":["/home/dev/Documentos/Projects/github-clone/node_modules/as-array/index.js"],"names":["module","exports","data","convertObject","isArgs","splice","call","isObject","values","Array","isArray","obj","Object","prototype","toString","item","keys","map","key"],"mappings":"AAAAA,MAAM,CAACC,OAAP,GAAiB,UAAUC,IAAV,EAAgBC,aAAhB,EAA+B;AAE9C,MAAI,CAACD,IAAL,EAAW;AACTA,IAAAA,IAAI,GAAG,EAAP;AACD;;AAED,MAAIE,MAAM,CAACF,IAAD,CAAV,EAAkB;AAChBA,IAAAA,IAAI,GAAG,GAAGG,MAAH,CAAUC,IAAV,CAAeJ,IAAf,EAAqB,CAArB,CAAP;AACD;;AAED,MAAIK,QAAQ,CAACL,IAAD,CAAR,IAAkBC,aAAtB,EAAqC;AACnCD,IAAAA,IAAI,GAAGM,MAAM,CAACN,IAAD,CAAb;AACD;;AAED,SAAOO,KAAK,CAACC,OAAN,CAAcR,IAAd,IACHA,IADG,GAEH,CAACA,IAAD,CAFJ;AAGD,CAjBD;;AAmBA,SAASK,QAAT,CAAmBI,GAAnB,EAAwB;AAEtB,SAAOC,MAAM,CAACC,SAAP,CAAiBC,QAAjB,CAA0BR,IAA1B,CAA+BK,GAA/B,MAAwC,iBAA/C;AACD;;AAED,SAASP,MAAT,CAAiBW,IAAjB,EAAwB;AAEpB,SAAOH,MAAM,CAACC,SAAP,CAAiBC,QAAjB,CAA0BR,IAA1B,CAAgCS,IAAhC,MAA2C,oBAAlD;AACH;;AAED,SAASP,MAAT,CAAiBG,GAAjB,EAAsB;AAEpB,SAAOC,MAAM,CAACI,IAAP,CAAYL,GAAZ,EAAiBM,GAAjB,CAAqB,UAAUC,GAAV,EAAe;AAEzC,WAAOP,GAAG,CAACO,GAAD,CAAV;AACD,GAHM,CAAP;AAID","sourcesContent":["module.exports = function (data, convertObject) {\n\n  if (!data) {\n    data = [];\n  }\n\n  if (isArgs(data)) {\n    data = [].splice.call(data, 0);\n  }\n\n  if (isObject(data) && convertObject) {\n    data = values(data);\n  }\n\n  return Array.isArray(data)\n    ? data\n    : [data];\n};\n\nfunction isObject (obj) {\n\n  return Object.prototype.toString.call(obj) === \"[object Object]\"\n}\n\nfunction isArgs( item ) {\n\n    return Object.prototype.toString.call( item ) === '[object Arguments]';\n}\n\nfunction values (obj) {\n\n  return Object.keys(obj).map(function (key) {\n\n    return obj[key];\n  });\n}\n"]},"metadata":{},"sourceType":"script"}