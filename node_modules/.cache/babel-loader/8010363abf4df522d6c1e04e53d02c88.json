{"ast":null,"code":"var fs = require('fs');\n\nvar utf8 = require('./encoding/utf8'),\n    unicode = require('./encoding/unicode'),\n    mbcs = require('./encoding/mbcs'),\n    sbcs = require('./encoding/sbcs'),\n    iso2022 = require('./encoding/iso2022');\n\nvar self = this;\nvar recognisers = [new utf8(), new unicode.UTF_16BE(), new unicode.UTF_16LE(), new unicode.UTF_32BE(), new unicode.UTF_32LE(), new mbcs.sjis(), new mbcs.big5(), new mbcs.euc_jp(), new mbcs.euc_kr(), new mbcs.gb_18030(), new iso2022.ISO_2022_JP(), new iso2022.ISO_2022_KR(), new iso2022.ISO_2022_CN(), new sbcs.ISO_8859_1(), new sbcs.ISO_8859_2(), new sbcs.ISO_8859_5(), new sbcs.ISO_8859_6(), new sbcs.ISO_8859_7(), new sbcs.ISO_8859_8(), new sbcs.ISO_8859_9(), new sbcs.windows_1251(), new sbcs.windows_1256(), new sbcs.KOI8_R()];\n\nmodule.exports.detect = function (buffer, opts) {\n  // Tally up the byte occurence statistics.\n  var fByteStats = [];\n\n  for (var i = 0; i < 256; i++) fByteStats[i] = 0;\n\n  for (var i = buffer.length - 1; i >= 0; i--) fByteStats[buffer[i] & 0x00ff]++;\n\n  var fC1Bytes = false;\n\n  for (var i = 0x80; i <= 0x9F; i += 1) {\n    if (fByteStats[i] != 0) {\n      fC1Bytes = true;\n      break;\n    }\n  }\n\n  var context = {\n    fByteStats: fByteStats,\n    fC1Bytes: fC1Bytes,\n    fRawInput: buffer,\n    fRawLength: buffer.length,\n    fInputBytes: buffer,\n    fInputLen: buffer.length\n  };\n  var matches = recognisers.map(function (rec) {\n    return rec.match(context);\n  }).filter(function (match) {\n    return !!match;\n  }).sort(function (a, b) {\n    return b.confidence - a.confidence;\n  });\n\n  if (opts && opts.returnAllMatches === true) {\n    return matches;\n  } else {\n    return matches.length > 0 ? matches[0].name : null;\n  }\n};\n\nmodule.exports.detectFile = function (filepath, opts, cb) {\n  if (typeof opts === 'function') {\n    cb = opts;\n    opts = undefined;\n  }\n\n  var fd;\n\n  var handler = function (err, buffer) {\n    if (fd) {\n      fs.closeSync(fd);\n    }\n\n    if (err) return cb(err, null);\n    cb(null, self.detect(buffer, opts));\n  };\n\n  if (opts && opts.sampleSize) {\n    fd = fs.openSync(filepath, 'r'), sample = Buffer.allocUnsafe(opts.sampleSize);\n    fs.read(fd, sample, 0, opts.sampleSize, null, function (err) {\n      handler(err, sample);\n    });\n    return;\n  }\n\n  fs.readFile(filepath, handler);\n};\n\nmodule.exports.detectFileSync = function (filepath, opts) {\n  if (opts && opts.sampleSize) {\n    var fd = fs.openSync(filepath, 'r'),\n        sample = Buffer.allocUnsafe(opts.sampleSize);\n    fs.readSync(fd, sample, 0, opts.sampleSize);\n    fs.closeSync(fd);\n    return self.detect(sample, opts);\n  }\n\n  return self.detect(fs.readFileSync(filepath), opts);\n}; // Wrappers for the previous functions to return all encodings\n\n\nmodule.exports.detectAll = function (buffer, opts) {\n  if (typeof opts !== 'object') {\n    opts = {};\n  }\n\n  opts.returnAllMatches = true;\n  return self.detect(buffer, opts);\n};\n\nmodule.exports.detectFileAll = function (filepath, opts, cb) {\n  if (typeof opts === 'function') {\n    cb = opts;\n    opts = undefined;\n  }\n\n  if (typeof opts !== 'object') {\n    opts = {};\n  }\n\n  opts.returnAllMatches = true;\n  self.detectFile(filepath, opts, cb);\n};\n\nmodule.exports.detectFileAllSync = function (filepath, opts) {\n  if (typeof opts !== 'object') {\n    opts = {};\n  }\n\n  opts.returnAllMatches = true;\n  return self.detectFileSync(filepath, opts);\n};","map":{"version":3,"sources":["/home/dev/Documentos/Projects/github-clone/node_modules/chardet/index.js"],"names":["fs","require","utf8","unicode","mbcs","sbcs","iso2022","self","recognisers","UTF_16BE","UTF_16LE","UTF_32BE","UTF_32LE","sjis","big5","euc_jp","euc_kr","gb_18030","ISO_2022_JP","ISO_2022_KR","ISO_2022_CN","ISO_8859_1","ISO_8859_2","ISO_8859_5","ISO_8859_6","ISO_8859_7","ISO_8859_8","ISO_8859_9","windows_1251","windows_1256","KOI8_R","module","exports","detect","buffer","opts","fByteStats","i","length","fC1Bytes","context","fRawInput","fRawLength","fInputBytes","fInputLen","matches","map","rec","match","filter","sort","a","b","confidence","returnAllMatches","name","detectFile","filepath","cb","undefined","fd","handler","err","closeSync","sampleSize","openSync","sample","Buffer","allocUnsafe","read","readFile","detectFileSync","readSync","readFileSync","detectAll","detectFileAll","detectFileAllSync"],"mappings":"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","sourcesContent":["\nvar fs = require('fs');\n\nvar utf8  = require('./encoding/utf8'),\n  unicode = require('./encoding/unicode'),\n  mbcs    = require('./encoding/mbcs'),\n  sbcs    = require('./encoding/sbcs'),\n  iso2022 = require('./encoding/iso2022');\n\nvar self = this;\n\nvar recognisers = [\n  new utf8,\n  new unicode.UTF_16BE,\n  new unicode.UTF_16LE,\n  new unicode.UTF_32BE,\n  new unicode.UTF_32LE,\n  new mbcs.sjis,\n  new mbcs.big5,\n  new mbcs.euc_jp,\n  new mbcs.euc_kr,\n  new mbcs.gb_18030,\n  new iso2022.ISO_2022_JP,\n  new iso2022.ISO_2022_KR,\n  new iso2022.ISO_2022_CN,\n  new sbcs.ISO_8859_1,\n  new sbcs.ISO_8859_2,\n  new sbcs.ISO_8859_5,\n  new sbcs.ISO_8859_6,\n  new sbcs.ISO_8859_7,\n  new sbcs.ISO_8859_8,\n  new sbcs.ISO_8859_9,\n  new sbcs.windows_1251,\n  new sbcs.windows_1256,\n  new sbcs.KOI8_R\n];\n\nmodule.exports.detect = function(buffer, opts) {\n\n  // Tally up the byte occurence statistics.\n  var fByteStats = [];\n  for (var i = 0; i < 256; i++)\n    fByteStats[i] = 0;\n\n  for (var i = buffer.length - 1; i >= 0; i--)\n    fByteStats[buffer[i] & 0x00ff]++;\n\n  var fC1Bytes = false;\n  for (var i = 0x80; i <= 0x9F; i += 1) {\n    if (fByteStats[i] != 0) {\n      fC1Bytes = true;\n      break;\n    }\n  }\n\n  var context = {\n    fByteStats:  fByteStats,\n    fC1Bytes:    fC1Bytes,\n    fRawInput:   buffer,\n    fRawLength:  buffer.length,\n    fInputBytes: buffer,\n    fInputLen:   buffer.length\n  };\n\n  var matches = recognisers.map(function(rec) {\n    return rec.match(context);\n  }).filter(function(match) {\n    return !!match;\n  }).sort(function(a, b) {\n    return b.confidence - a.confidence;\n  });\n\n  if (opts && opts.returnAllMatches === true) {\n    return matches;\n  }\n  else {\n    return matches.length > 0 ? matches[0].name : null;\n  }\n};\n\nmodule.exports.detectFile = function(filepath, opts, cb) {\n  if (typeof opts === 'function') {\n    cb = opts;\n    opts = undefined;\n  }\n\n  var fd;\n\n  var handler = function(err, buffer) {\n    if (fd) {\n      fs.closeSync(fd);\n    }\n\n    if (err) return cb(err, null);\n    cb(null, self.detect(buffer, opts));\n  };\n\n  if (opts && opts.sampleSize) {\n    fd = fs.openSync(filepath, 'r'),\n      sample = Buffer.allocUnsafe(opts.sampleSize);\n\n    fs.read(fd, sample, 0, opts.sampleSize, null, function(err) {\n      handler(err, sample);\n    });\n    return;\n  }\n\n  fs.readFile(filepath, handler);\n};\n\nmodule.exports.detectFileSync = function(filepath, opts) {\n  if (opts && opts.sampleSize) {\n    var fd = fs.openSync(filepath, 'r'),\n      sample = Buffer.allocUnsafe(opts.sampleSize);\n\n    fs.readSync(fd, sample, 0, opts.sampleSize);\n    fs.closeSync(fd);\n    return self.detect(sample, opts);\n  }\n\n  return self.detect(fs.readFileSync(filepath), opts);\n};\n\n// Wrappers for the previous functions to return all encodings\nmodule.exports.detectAll = function(buffer, opts) {\n  if (typeof opts !== 'object') {\n    opts = {};\n  }\n  opts.returnAllMatches = true;\n  return self.detect(buffer, opts);\n}\n\nmodule.exports.detectFileAll = function(filepath, opts, cb) {\n  if (typeof opts === 'function') {\n    cb = opts;\n    opts = undefined;\n  }\n  if (typeof opts !== 'object') {\n    opts = {};\n  }\n  opts.returnAllMatches = true;\n  self.detectFile(filepath, opts, cb);\n}\n\nmodule.exports.detectFileAllSync = function(filepath, opts) {\n  if (typeof opts !== 'object') {\n    opts = {};\n  }\n  opts.returnAllMatches = true;\n  return self.detectFileSync(filepath, opts);\n}\n"]},"metadata":{},"sourceType":"script"}