{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nconst clc = require(\"cli-color\");\n\nconst command_1 = require(\"../command\");\n\nconst utils = require(\"../utils\");\n\nconst auth = require(\"../auth\");\n\nconst error_1 = require(\"../error\");\n\nmodule.exports = new command_1.Command(\"login:use <email>\").description(\"set the default account to use for this project directory\").action((email, options) => {\n  const allAccounts = auth.getAllAccounts();\n  const accountExists = allAccounts.some(a => a.user.email === email);\n\n  if (!accountExists) {\n    throw new error_1.FirebaseError(`Account ${email} does not exist, run \"${clc.bold(\"firebase login:list\")}\" to see valid accounts`);\n  }\n\n  const projectDir = options.projectRoot;\n\n  if (!projectDir) {\n    throw new error_1.FirebaseError(\"Could not determine active Firebase project directory\");\n  }\n\n  auth.setProjectAccount(projectDir, email);\n  utils.logSuccess(`Set default account ${email} for current project directory.`);\n  return email;\n});","map":{"version":3,"sources":["/home/dev/Documentos/Projects/github-clone/node_modules/firebase-tools/lib/commands/login-use.js"],"names":["Object","defineProperty","exports","value","clc","require","command_1","utils","auth","error_1","module","Command","description","action","email","options","allAccounts","getAllAccounts","accountExists","some","a","user","FirebaseError","bold","projectDir","projectRoot","setProjectAccount","logSuccess"],"mappings":"AAAA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;;AACA,MAAMC,GAAG,GAAGC,OAAO,CAAC,WAAD,CAAnB;;AACA,MAAMC,SAAS,GAAGD,OAAO,CAAC,YAAD,CAAzB;;AACA,MAAME,KAAK,GAAGF,OAAO,CAAC,UAAD,CAArB;;AACA,MAAMG,IAAI,GAAGH,OAAO,CAAC,SAAD,CAApB;;AACA,MAAMI,OAAO,GAAGJ,OAAO,CAAC,UAAD,CAAvB;;AACAK,MAAM,CAACR,OAAP,GAAiB,IAAII,SAAS,CAACK,OAAd,CAAsB,mBAAtB,EACZC,WADY,CACA,2DADA,EAEZC,MAFY,CAEL,CAACC,KAAD,EAAQC,OAAR,KAAoB;AAC5B,QAAMC,WAAW,GAAGR,IAAI,CAACS,cAAL,EAApB;AACA,QAAMC,aAAa,GAAGF,WAAW,CAACG,IAAZ,CAAkBC,CAAD,IAAOA,CAAC,CAACC,IAAF,CAAOP,KAAP,KAAiBA,KAAzC,CAAtB;;AACA,MAAI,CAACI,aAAL,EAAoB;AAChB,UAAM,IAAIT,OAAO,CAACa,aAAZ,CAA2B,WAAUR,KAAM,yBAAwBV,GAAG,CAACmB,IAAJ,CAAS,qBAAT,CAAgC,yBAAnG,CAAN;AACH;;AACD,QAAMC,UAAU,GAAGT,OAAO,CAACU,WAA3B;;AACA,MAAI,CAACD,UAAL,EAAiB;AACb,UAAM,IAAIf,OAAO,CAACa,aAAZ,CAA0B,uDAA1B,CAAN;AACH;;AACDd,EAAAA,IAAI,CAACkB,iBAAL,CAAuBF,UAAvB,EAAmCV,KAAnC;AACAP,EAAAA,KAAK,CAACoB,UAAN,CAAkB,uBAAsBb,KAAM,iCAA9C;AACA,SAAOA,KAAP;AACH,CAfgB,CAAjB","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst clc = require(\"cli-color\");\nconst command_1 = require(\"../command\");\nconst utils = require(\"../utils\");\nconst auth = require(\"../auth\");\nconst error_1 = require(\"../error\");\nmodule.exports = new command_1.Command(\"login:use <email>\")\n    .description(\"set the default account to use for this project directory\")\n    .action((email, options) => {\n    const allAccounts = auth.getAllAccounts();\n    const accountExists = allAccounts.some((a) => a.user.email === email);\n    if (!accountExists) {\n        throw new error_1.FirebaseError(`Account ${email} does not exist, run \"${clc.bold(\"firebase login:list\")}\" to see valid accounts`);\n    }\n    const projectDir = options.projectRoot;\n    if (!projectDir) {\n        throw new error_1.FirebaseError(\"Could not determine active Firebase project directory\");\n    }\n    auth.setProjectAccount(projectDir, email);\n    utils.logSuccess(`Set default account ${email} for current project directory.`);\n    return email;\n});\n"]},"metadata":{},"sourceType":"script"}