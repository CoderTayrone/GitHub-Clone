{"ast":null,"code":"'use strict';\n\nvar _ = require('lodash');\n/**\n * Choice object\n * Normalize input as choice object\n * @constructor\n * @param {Number|String|Object} val  Choice value. If an object is passed, it should contains\n *                                    at least one of `value` or `name` property\n */\n\n\nmodule.exports = class Choice {\n  constructor(val, answers) {\n    // Don't process Choice and Separator object\n    if (val instanceof Choice || val.type === 'separator') {\n      return val;\n    }\n\n    if (_.isString(val) || _.isNumber(val)) {\n      this.name = String(val);\n      this.value = val;\n      this.short = String(val);\n    } else {\n      _.extend(this, val, {\n        name: val.name || val.value,\n        value: 'value' in val ? val.value : val.name,\n        short: val.short || val.name || val.value\n      });\n    }\n\n    if (_.isFunction(val.disabled)) {\n      this.disabled = val.disabled(answers);\n    } else {\n      this.disabled = val.disabled;\n    }\n  }\n\n};","map":{"version":3,"sources":["/home/dev/Documentos/Projects/github-clone/node_modules/inquirer/lib/objects/choice.js"],"names":["_","require","module","exports","Choice","constructor","val","answers","type","isString","isNumber","name","String","value","short","extend","isFunction","disabled"],"mappings":"AAAA;;AACA,IAAIA,CAAC,GAAGC,OAAO,CAAC,QAAD,CAAf;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEAC,MAAM,CAACC,OAAP,GAAiB,MAAMC,MAAN,CAAa;AAC5BC,EAAAA,WAAW,CAACC,GAAD,EAAMC,OAAN,EAAe;AACxB;AACA,QAAID,GAAG,YAAYF,MAAf,IAAyBE,GAAG,CAACE,IAAJ,KAAa,WAA1C,EAAuD;AACrD,aAAOF,GAAP;AACD;;AAED,QAAIN,CAAC,CAACS,QAAF,CAAWH,GAAX,KAAmBN,CAAC,CAACU,QAAF,CAAWJ,GAAX,CAAvB,EAAwC;AACtC,WAAKK,IAAL,GAAYC,MAAM,CAACN,GAAD,CAAlB;AACA,WAAKO,KAAL,GAAaP,GAAb;AACA,WAAKQ,KAAL,GAAaF,MAAM,CAACN,GAAD,CAAnB;AACD,KAJD,MAIO;AACLN,MAAAA,CAAC,CAACe,MAAF,CAAS,IAAT,EAAeT,GAAf,EAAoB;AAClBK,QAAAA,IAAI,EAAEL,GAAG,CAACK,IAAJ,IAAYL,GAAG,CAACO,KADJ;AAElBA,QAAAA,KAAK,EAAE,WAAWP,GAAX,GAAiBA,GAAG,CAACO,KAArB,GAA6BP,GAAG,CAACK,IAFtB;AAGlBG,QAAAA,KAAK,EAAER,GAAG,CAACQ,KAAJ,IAAaR,GAAG,CAACK,IAAjB,IAAyBL,GAAG,CAACO;AAHlB,OAApB;AAKD;;AAED,QAAIb,CAAC,CAACgB,UAAF,CAAaV,GAAG,CAACW,QAAjB,CAAJ,EAAgC;AAC9B,WAAKA,QAAL,GAAgBX,GAAG,CAACW,QAAJ,CAAaV,OAAb,CAAhB;AACD,KAFD,MAEO;AACL,WAAKU,QAAL,GAAgBX,GAAG,CAACW,QAApB;AACD;AACF;;AAxB2B,CAA9B","sourcesContent":["'use strict';\nvar _ = require('lodash');\n\n/**\n * Choice object\n * Normalize input as choice object\n * @constructor\n * @param {Number|String|Object} val  Choice value. If an object is passed, it should contains\n *                                    at least one of `value` or `name` property\n */\n\nmodule.exports = class Choice {\n  constructor(val, answers) {\n    // Don't process Choice and Separator object\n    if (val instanceof Choice || val.type === 'separator') {\n      return val;\n    }\n\n    if (_.isString(val) || _.isNumber(val)) {\n      this.name = String(val);\n      this.value = val;\n      this.short = String(val);\n    } else {\n      _.extend(this, val, {\n        name: val.name || val.value,\n        value: 'value' in val ? val.value : val.name,\n        short: val.short || val.name || val.value\n      });\n    }\n\n    if (_.isFunction(val.disabled)) {\n      this.disabled = val.disabled(answers);\n    } else {\n      this.disabled = val.disabled;\n    }\n  }\n};\n"]},"metadata":{},"sourceType":"script"}