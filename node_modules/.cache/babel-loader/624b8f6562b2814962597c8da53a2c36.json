{"ast":null,"code":"module.exports = FileWriter;\n\nvar fs = require('graceful-fs');\n\nvar Writer = require('./writer.js');\n\nvar inherits = require('inherits');\n\nvar EOF = {};\ninherits(FileWriter, Writer);\n\nfunction FileWriter(props) {\n  var self = this;\n\n  if (!(self instanceof FileWriter)) {\n    throw new Error('FileWriter must be called as constructor.');\n  } // should already be established as a File type\n\n\n  if (props.type !== 'File' || !props.File) {\n    throw new Error('Non-file type ' + props.type);\n  }\n\n  self._buffer = [];\n  self._bytesWritten = 0;\n  Writer.call(this, props);\n}\n\nFileWriter.prototype._create = function () {\n  var self = this;\n  if (self._stream) return;\n  var so = {};\n  if (self.props.flags) so.flags = self.props.flags;\n  so.mode = Writer.filemode;\n  if (self._old && self._old.blksize) so.bufferSize = self._old.blksize;\n  self._stream = fs.createWriteStream(self._path, so);\n\n  self._stream.on('open', function () {\n    // console.error(\"FW open\", self._buffer, self._path)\n    self.ready = true;\n\n    self._buffer.forEach(function (c) {\n      if (c === EOF) self._stream.end();else self._stream.write(c);\n    });\n\n    self.emit('ready'); // give this a kick just in case it needs it.\n\n    self.emit('drain');\n  });\n\n  self._stream.on('error', function (er) {\n    self.emit('error', er);\n  });\n\n  self._stream.on('drain', function () {\n    self.emit('drain');\n  });\n\n  self._stream.on('close', function () {\n    // console.error('\\n\\nFW Stream Close', self._path, self.size)\n    self._finish();\n  });\n};\n\nFileWriter.prototype.write = function (c) {\n  var self = this;\n  self._bytesWritten += c.length;\n\n  if (!self.ready) {\n    if (!Buffer.isBuffer(c) && typeof c !== 'string') {\n      throw new Error('invalid write data');\n    }\n\n    self._buffer.push(c);\n\n    return false;\n  }\n\n  var ret = self._stream.write(c); // console.error('\\t-- fw wrote, _stream says', ret, self._stream._queue.length)\n  // allow 2 buffered writes, because otherwise there's just too\n  // much stop and go bs.\n\n\n  if (ret === false && self._stream._queue) {\n    return self._stream._queue.length <= 2;\n  } else {\n    return ret;\n  }\n};\n\nFileWriter.prototype.end = function (c) {\n  var self = this;\n  if (c) self.write(c);\n\n  if (!self.ready) {\n    self._buffer.push(EOF);\n\n    return false;\n  }\n\n  return self._stream.end();\n};\n\nFileWriter.prototype._finish = function () {\n  var self = this;\n\n  if (typeof self.size === 'number' && self._bytesWritten !== self.size) {\n    self.error('Did not get expected byte count.\\n' + 'expect: ' + self.size + '\\n' + 'actual: ' + self._bytesWritten);\n  }\n\n  Writer.prototype._finish.call(self);\n};","map":{"version":3,"sources":["/home/dev/Documentos/Projects/github-clone/node_modules/fstream/lib/file-writer.js"],"names":["module","exports","FileWriter","fs","require","Writer","inherits","EOF","props","self","Error","type","File","_buffer","_bytesWritten","call","prototype","_create","_stream","so","flags","mode","filemode","_old","blksize","bufferSize","createWriteStream","_path","on","ready","forEach","c","end","write","emit","er","_finish","length","Buffer","isBuffer","push","ret","_queue","size","error"],"mappings":"AAAAA,MAAM,CAACC,OAAP,GAAiBC,UAAjB;;AAEA,IAAIC,EAAE,GAAGC,OAAO,CAAC,aAAD,CAAhB;;AACA,IAAIC,MAAM,GAAGD,OAAO,CAAC,aAAD,CAApB;;AACA,IAAIE,QAAQ,GAAGF,OAAO,CAAC,UAAD,CAAtB;;AACA,IAAIG,GAAG,GAAG,EAAV;AAEAD,QAAQ,CAACJ,UAAD,EAAaG,MAAb,CAAR;;AAEA,SAASH,UAAT,CAAqBM,KAArB,EAA4B;AAC1B,MAAIC,IAAI,GAAG,IAAX;;AACA,MAAI,EAAEA,IAAI,YAAYP,UAAlB,CAAJ,EAAmC;AACjC,UAAM,IAAIQ,KAAJ,CAAU,2CAAV,CAAN;AACD,GAJyB,CAM1B;;;AACA,MAAIF,KAAK,CAACG,IAAN,KAAe,MAAf,IAAyB,CAACH,KAAK,CAACI,IAApC,EAA0C;AACxC,UAAM,IAAIF,KAAJ,CAAU,mBAAmBF,KAAK,CAACG,IAAnC,CAAN;AACD;;AAEDF,EAAAA,IAAI,CAACI,OAAL,GAAe,EAAf;AACAJ,EAAAA,IAAI,CAACK,aAAL,GAAqB,CAArB;AAEAT,EAAAA,MAAM,CAACU,IAAP,CAAY,IAAZ,EAAkBP,KAAlB;AACD;;AAEDN,UAAU,CAACc,SAAX,CAAqBC,OAArB,GAA+B,YAAY;AACzC,MAAIR,IAAI,GAAG,IAAX;AACA,MAAIA,IAAI,CAACS,OAAT,EAAkB;AAElB,MAAIC,EAAE,GAAG,EAAT;AACA,MAAIV,IAAI,CAACD,KAAL,CAAWY,KAAf,EAAsBD,EAAE,CAACC,KAAH,GAAWX,IAAI,CAACD,KAAL,CAAWY,KAAtB;AACtBD,EAAAA,EAAE,CAACE,IAAH,GAAUhB,MAAM,CAACiB,QAAjB;AACA,MAAIb,IAAI,CAACc,IAAL,IAAad,IAAI,CAACc,IAAL,CAAUC,OAA3B,EAAoCL,EAAE,CAACM,UAAH,GAAgBhB,IAAI,CAACc,IAAL,CAAUC,OAA1B;AAEpCf,EAAAA,IAAI,CAACS,OAAL,GAAef,EAAE,CAACuB,iBAAH,CAAqBjB,IAAI,CAACkB,KAA1B,EAAiCR,EAAjC,CAAf;;AAEAV,EAAAA,IAAI,CAACS,OAAL,CAAaU,EAAb,CAAgB,MAAhB,EAAwB,YAAY;AAClC;AACAnB,IAAAA,IAAI,CAACoB,KAAL,GAAa,IAAb;;AACApB,IAAAA,IAAI,CAACI,OAAL,CAAaiB,OAAb,CAAqB,UAAUC,CAAV,EAAa;AAChC,UAAIA,CAAC,KAAKxB,GAAV,EAAeE,IAAI,CAACS,OAAL,CAAac,GAAb,GAAf,KACKvB,IAAI,CAACS,OAAL,CAAae,KAAb,CAAmBF,CAAnB;AACN,KAHD;;AAIAtB,IAAAA,IAAI,CAACyB,IAAL,CAAU,OAAV,EAPkC,CAQlC;;AACAzB,IAAAA,IAAI,CAACyB,IAAL,CAAU,OAAV;AACD,GAVD;;AAYAzB,EAAAA,IAAI,CAACS,OAAL,CAAaU,EAAb,CAAgB,OAAhB,EAAyB,UAAUO,EAAV,EAAc;AAAE1B,IAAAA,IAAI,CAACyB,IAAL,CAAU,OAAV,EAAmBC,EAAnB;AAAwB,GAAjE;;AAEA1B,EAAAA,IAAI,CAACS,OAAL,CAAaU,EAAb,CAAgB,OAAhB,EAAyB,YAAY;AAAEnB,IAAAA,IAAI,CAACyB,IAAL,CAAU,OAAV;AAAoB,GAA3D;;AAEAzB,EAAAA,IAAI,CAACS,OAAL,CAAaU,EAAb,CAAgB,OAAhB,EAAyB,YAAY;AACnC;AACAnB,IAAAA,IAAI,CAAC2B,OAAL;AACD,GAHD;AAID,CA/BD;;AAiCAlC,UAAU,CAACc,SAAX,CAAqBiB,KAArB,GAA6B,UAAUF,CAAV,EAAa;AACxC,MAAItB,IAAI,GAAG,IAAX;AAEAA,EAAAA,IAAI,CAACK,aAAL,IAAsBiB,CAAC,CAACM,MAAxB;;AAEA,MAAI,CAAC5B,IAAI,CAACoB,KAAV,EAAiB;AACf,QAAI,CAACS,MAAM,CAACC,QAAP,CAAgBR,CAAhB,CAAD,IAAuB,OAAOA,CAAP,KAAa,QAAxC,EAAkD;AAChD,YAAM,IAAIrB,KAAJ,CAAU,oBAAV,CAAN;AACD;;AACDD,IAAAA,IAAI,CAACI,OAAL,CAAa2B,IAAb,CAAkBT,CAAlB;;AACA,WAAO,KAAP;AACD;;AAED,MAAIU,GAAG,GAAGhC,IAAI,CAACS,OAAL,CAAae,KAAb,CAAmBF,CAAnB,CAAV,CAbwC,CAcxC;AAEA;AACA;;;AACA,MAAIU,GAAG,KAAK,KAAR,IAAiBhC,IAAI,CAACS,OAAL,CAAawB,MAAlC,EAA0C;AACxC,WAAOjC,IAAI,CAACS,OAAL,CAAawB,MAAb,CAAoBL,MAApB,IAA8B,CAArC;AACD,GAFD,MAEO;AACL,WAAOI,GAAP;AACD;AACF,CAvBD;;AAyBAvC,UAAU,CAACc,SAAX,CAAqBgB,GAArB,GAA2B,UAAUD,CAAV,EAAa;AACtC,MAAItB,IAAI,GAAG,IAAX;AAEA,MAAIsB,CAAJ,EAAOtB,IAAI,CAACwB,KAAL,CAAWF,CAAX;;AAEP,MAAI,CAACtB,IAAI,CAACoB,KAAV,EAAiB;AACfpB,IAAAA,IAAI,CAACI,OAAL,CAAa2B,IAAb,CAAkBjC,GAAlB;;AACA,WAAO,KAAP;AACD;;AAED,SAAOE,IAAI,CAACS,OAAL,CAAac,GAAb,EAAP;AACD,CAXD;;AAaA9B,UAAU,CAACc,SAAX,CAAqBoB,OAArB,GAA+B,YAAY;AACzC,MAAI3B,IAAI,GAAG,IAAX;;AACA,MAAI,OAAOA,IAAI,CAACkC,IAAZ,KAAqB,QAArB,IAAiClC,IAAI,CAACK,aAAL,KAAuBL,IAAI,CAACkC,IAAjE,EAAuE;AACrElC,IAAAA,IAAI,CAACmC,KAAL,CACE,uCACA,UADA,GACanC,IAAI,CAACkC,IADlB,GACyB,IADzB,GAEA,UAFA,GAEalC,IAAI,CAACK,aAHpB;AAID;;AACDT,EAAAA,MAAM,CAACW,SAAP,CAAiBoB,OAAjB,CAAyBrB,IAAzB,CAA8BN,IAA9B;AACD,CATD","sourcesContent":["module.exports = FileWriter\n\nvar fs = require('graceful-fs')\nvar Writer = require('./writer.js')\nvar inherits = require('inherits')\nvar EOF = {}\n\ninherits(FileWriter, Writer)\n\nfunction FileWriter (props) {\n  var self = this\n  if (!(self instanceof FileWriter)) {\n    throw new Error('FileWriter must be called as constructor.')\n  }\n\n  // should already be established as a File type\n  if (props.type !== 'File' || !props.File) {\n    throw new Error('Non-file type ' + props.type)\n  }\n\n  self._buffer = []\n  self._bytesWritten = 0\n\n  Writer.call(this, props)\n}\n\nFileWriter.prototype._create = function () {\n  var self = this\n  if (self._stream) return\n\n  var so = {}\n  if (self.props.flags) so.flags = self.props.flags\n  so.mode = Writer.filemode\n  if (self._old && self._old.blksize) so.bufferSize = self._old.blksize\n\n  self._stream = fs.createWriteStream(self._path, so)\n\n  self._stream.on('open', function () {\n    // console.error(\"FW open\", self._buffer, self._path)\n    self.ready = true\n    self._buffer.forEach(function (c) {\n      if (c === EOF) self._stream.end()\n      else self._stream.write(c)\n    })\n    self.emit('ready')\n    // give this a kick just in case it needs it.\n    self.emit('drain')\n  })\n\n  self._stream.on('error', function (er) { self.emit('error', er) })\n\n  self._stream.on('drain', function () { self.emit('drain') })\n\n  self._stream.on('close', function () {\n    // console.error('\\n\\nFW Stream Close', self._path, self.size)\n    self._finish()\n  })\n}\n\nFileWriter.prototype.write = function (c) {\n  var self = this\n\n  self._bytesWritten += c.length\n\n  if (!self.ready) {\n    if (!Buffer.isBuffer(c) && typeof c !== 'string') {\n      throw new Error('invalid write data')\n    }\n    self._buffer.push(c)\n    return false\n  }\n\n  var ret = self._stream.write(c)\n  // console.error('\\t-- fw wrote, _stream says', ret, self._stream._queue.length)\n\n  // allow 2 buffered writes, because otherwise there's just too\n  // much stop and go bs.\n  if (ret === false && self._stream._queue) {\n    return self._stream._queue.length <= 2\n  } else {\n    return ret\n  }\n}\n\nFileWriter.prototype.end = function (c) {\n  var self = this\n\n  if (c) self.write(c)\n\n  if (!self.ready) {\n    self._buffer.push(EOF)\n    return false\n  }\n\n  return self._stream.end()\n}\n\nFileWriter.prototype._finish = function () {\n  var self = this\n  if (typeof self.size === 'number' && self._bytesWritten !== self.size) {\n    self.error(\n      'Did not get expected byte count.\\n' +\n      'expect: ' + self.size + '\\n' +\n      'actual: ' + self._bytesWritten)\n  }\n  Writer.prototype._finish.call(self)\n}\n"]},"metadata":{},"sourceType":"script"}