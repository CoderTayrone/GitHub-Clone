{"ast":null,"code":"\"use strict\";\n\nvar fs = require(\"fs\");\n\nvar spawn = require(\"cross-spawn\");\n\nvar {\n  FirebaseError\n} = require(\"./error\");\n\nvar clc = require(\"cli-color\");\n\nvar _ = require(\"lodash\");\n\nmodule.exports = function (filename) {\n  var ruleSrc = fs.readFileSync(filename, \"utf8\");\n  var result = spawn.sync(\"npx\", [\"--no-install\", \"firebase-bolt\"], {\n    input: ruleSrc,\n    timeout: 10000,\n    encoding: \"utf-8\"\n  });\n\n  if (result.error && _.get(result.error, \"code\") === \"ENOENT\") {\n    throw new FirebaseError(\"Bolt not installed, run \" + clc.bold(\"npm install -g firebase-bolt\"), {\n      exit: 1\n    });\n  } else if (result.error) {\n    throw new FirebaseError(\"Unexpected error parsing Bolt rules file\", {\n      exit: 2\n    });\n  } else if (result.status != null && result.status > 0) {\n    throw new FirebaseError(result.stderr.toString(), {\n      exit: 1\n    });\n  }\n\n  return result.stdout;\n};","map":{"version":3,"sources":["/home/dev/Documentos/Projects/github-clone/node_modules/firebase-tools/lib/parseBoltRules.js"],"names":["fs","require","spawn","FirebaseError","clc","_","module","exports","filename","ruleSrc","readFileSync","result","sync","input","timeout","encoding","error","get","bold","exit","status","stderr","toString","stdout"],"mappings":"AAAA;;AACA,IAAIA,EAAE,GAAGC,OAAO,CAAC,IAAD,CAAhB;;AACA,IAAIC,KAAK,GAAGD,OAAO,CAAC,aAAD,CAAnB;;AACA,IAAI;AAAEE,EAAAA;AAAF,IAAoBF,OAAO,CAAC,SAAD,CAA/B;;AACA,IAAIG,GAAG,GAAGH,OAAO,CAAC,WAAD,CAAjB;;AACA,IAAII,CAAC,GAAGJ,OAAO,CAAC,QAAD,CAAf;;AACAK,MAAM,CAACC,OAAP,GAAiB,UAAUC,QAAV,EAAoB;AACjC,MAAIC,OAAO,GAAGT,EAAE,CAACU,YAAH,CAAgBF,QAAhB,EAA0B,MAA1B,CAAd;AACA,MAAIG,MAAM,GAAGT,KAAK,CAACU,IAAN,CAAW,KAAX,EAAkB,CAAC,cAAD,EAAiB,eAAjB,CAAlB,EAAqD;AAC9DC,IAAAA,KAAK,EAAEJ,OADuD;AAE9DK,IAAAA,OAAO,EAAE,KAFqD;AAG9DC,IAAAA,QAAQ,EAAE;AAHoD,GAArD,CAAb;;AAKA,MAAIJ,MAAM,CAACK,KAAP,IAAgBX,CAAC,CAACY,GAAF,CAAMN,MAAM,CAACK,KAAb,EAAoB,MAApB,MAAgC,QAApD,EAA8D;AAC1D,UAAM,IAAIb,aAAJ,CAAkB,6BAA6BC,GAAG,CAACc,IAAJ,CAAS,8BAAT,CAA/C,EAAyF;AAC3FC,MAAAA,IAAI,EAAE;AADqF,KAAzF,CAAN;AAGH,GAJD,MAKK,IAAIR,MAAM,CAACK,KAAX,EAAkB;AACnB,UAAM,IAAIb,aAAJ,CAAkB,0CAAlB,EAA8D;AAChEgB,MAAAA,IAAI,EAAE;AAD0D,KAA9D,CAAN;AAGH,GAJI,MAKA,IAAIR,MAAM,CAACS,MAAP,IAAiB,IAAjB,IAAyBT,MAAM,CAACS,MAAP,GAAgB,CAA7C,EAAgD;AACjD,UAAM,IAAIjB,aAAJ,CAAkBQ,MAAM,CAACU,MAAP,CAAcC,QAAd,EAAlB,EAA4C;AAAEH,MAAAA,IAAI,EAAE;AAAR,KAA5C,CAAN;AACH;;AACD,SAAOR,MAAM,CAACY,MAAd;AACH,CArBD","sourcesContent":["\"use strict\";\nvar fs = require(\"fs\");\nvar spawn = require(\"cross-spawn\");\nvar { FirebaseError } = require(\"./error\");\nvar clc = require(\"cli-color\");\nvar _ = require(\"lodash\");\nmodule.exports = function (filename) {\n    var ruleSrc = fs.readFileSync(filename, \"utf8\");\n    var result = spawn.sync(\"npx\", [\"--no-install\", \"firebase-bolt\"], {\n        input: ruleSrc,\n        timeout: 10000,\n        encoding: \"utf-8\",\n    });\n    if (result.error && _.get(result.error, \"code\") === \"ENOENT\") {\n        throw new FirebaseError(\"Bolt not installed, run \" + clc.bold(\"npm install -g firebase-bolt\"), {\n            exit: 1,\n        });\n    }\n    else if (result.error) {\n        throw new FirebaseError(\"Unexpected error parsing Bolt rules file\", {\n            exit: 2,\n        });\n    }\n    else if (result.status != null && result.status > 0) {\n        throw new FirebaseError(result.stderr.toString(), { exit: 1 });\n    }\n    return result.stdout;\n};\n"]},"metadata":{},"sourceType":"script"}