{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.shuffleArray = exports.SocksClientError = void 0;\n/**\n * Error wrapper for SocksClient\n */\n\nclass SocksClientError extends Error {\n  constructor(message, options) {\n    super(message);\n    this.options = options;\n  }\n\n}\n\nexports.SocksClientError = SocksClientError;\n/**\n * Shuffles a given array.\n * @param array The array to shuffle.\n */\n\nfunction shuffleArray(array) {\n  // tslint:disable-next-line:no-increment-decrement\n  for (let i = array.length - 1; i > 0; i--) {\n    const j = Math.floor(Math.random() * (i + 1));\n    [array[i], array[j]] = [array[j], array[i]];\n  }\n}\n\nexports.shuffleArray = shuffleArray;","map":{"version":3,"sources":["../../src/common/util.ts"],"names":[],"mappings":";;;;;;AAEA;;AAEG;;AACH,MAAM,gBAAN,SAA+B,KAA/B,CAAoC;AAClC,EAAA,WAAA,CACE,OADF,EAES,OAFT,EAE8D;AAE5D,UAAM,OAAN;AAFO,SAAA,OAAA,GAAA,OAAA;AAGR;;AANiC;;AA+BZ,OAAA,CAAA,gBAAA,GAAA,gBAAA;AAtBxB;;;AAGG;;AACH,SAAS,YAAT,CAAsB,KAAtB,EAAkC;AAChC;AACA,OAAK,IAAI,CAAC,GAAG,KAAK,CAAC,MAAN,GAAe,CAA5B,EAA+B,CAAC,GAAG,CAAnC,EAAsC,CAAC,EAAvC,EAA2C;AACzC,UAAM,CAAC,GAAG,IAAI,CAAC,KAAL,CAAW,IAAI,CAAC,MAAL,MAAiB,CAAC,GAAG,CAArB,CAAX,CAAV;AACA,KAAC,KAAK,CAAC,CAAD,CAAN,EAAW,KAAK,CAAC,CAAD,CAAhB,IAAuB,CAAC,KAAK,CAAC,CAAD,CAAN,EAAW,KAAK,CAAC,CAAD,CAAhB,CAAvB;AACD;AACF;;AAYyC,OAAA,CAAA,YAAA,GAAA,YAAA","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.shuffleArray = exports.SocksClientError = void 0;\n/**\n * Error wrapper for SocksClient\n */\nclass SocksClientError extends Error {\n    constructor(message, options) {\n        super(message);\n        this.options = options;\n    }\n}\nexports.SocksClientError = SocksClientError;\n/**\n * Shuffles a given array.\n * @param array The array to shuffle.\n */\nfunction shuffleArray(array) {\n    // tslint:disable-next-line:no-increment-decrement\n    for (let i = array.length - 1; i > 0; i--) {\n        const j = Math.floor(Math.random() * (i + 1));\n        [array[i], array[j]] = [array[j], array[i]];\n    }\n}\nexports.shuffleArray = shuffleArray;\n//# sourceMappingURL=util.js.map"]},"metadata":{},"sourceType":"script"}