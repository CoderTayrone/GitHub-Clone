{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.packageJsonIsValid = void 0;\n\nconst path = require(\"path\");\n\nconst error_1 = require(\"../../../../error\");\n\nconst logger_1 = require(\"../../../../logger\");\n\nconst fsutils = require(\"../../../../fsutils\");\n\nconst cjson = require(\"cjson\");\n\nfunction assertFunctionsSourcePresent(data, sourceDir, projectDir) {\n  const indexJsFile = path.join(sourceDir, data.main || \"index.js\");\n\n  if (!fsutils.fileExistsSync(indexJsFile)) {\n    const msg = `${path.relative(projectDir, indexJsFile)} does not exist, can't deploy Cloud Functions`;\n    throw new error_1.FirebaseError(msg);\n  }\n}\n\nfunction packageJsonIsValid(sourceDirName, sourceDir, projectDir) {\n  const packageJsonFile = path.join(sourceDir, \"package.json\");\n\n  if (!fsutils.fileExistsSync(packageJsonFile)) {\n    const msg = `No npm package found in functions source directory ${sourceDirName}.`;\n    throw new error_1.FirebaseError(msg);\n  }\n\n  let data;\n\n  try {\n    data = cjson.load(packageJsonFile);\n    logger_1.logger.debug(\"> [functions] package.json contents:\", JSON.stringify(data, null, 2));\n    assertFunctionsSourcePresent(data, sourceDir, projectDir);\n  } catch (e) {\n    const msg = `There was an error reading ${sourceDirName}${path.sep}package.json:\\n\\n ${e.message}`;\n    throw new error_1.FirebaseError(msg);\n  }\n}\n\nexports.packageJsonIsValid = packageJsonIsValid;","map":{"version":3,"sources":["/home/dev/Documentos/Projects/github-clone/node_modules/firebase-tools/lib/deploy/functions/runtimes/node/validate.js"],"names":["Object","defineProperty","exports","value","packageJsonIsValid","path","require","error_1","logger_1","fsutils","cjson","assertFunctionsSourcePresent","data","sourceDir","projectDir","indexJsFile","join","main","fileExistsSync","msg","relative","FirebaseError","sourceDirName","packageJsonFile","load","logger","debug","JSON","stringify","e","sep","message"],"mappings":"AAAA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;AACAD,OAAO,CAACE,kBAAR,GAA6B,KAAK,CAAlC;;AACA,MAAMC,IAAI,GAAGC,OAAO,CAAC,MAAD,CAApB;;AACA,MAAMC,OAAO,GAAGD,OAAO,CAAC,mBAAD,CAAvB;;AACA,MAAME,QAAQ,GAAGF,OAAO,CAAC,oBAAD,CAAxB;;AACA,MAAMG,OAAO,GAAGH,OAAO,CAAC,qBAAD,CAAvB;;AACA,MAAMI,KAAK,GAAGJ,OAAO,CAAC,OAAD,CAArB;;AACA,SAASK,4BAAT,CAAsCC,IAAtC,EAA4CC,SAA5C,EAAuDC,UAAvD,EAAmE;AAC/D,QAAMC,WAAW,GAAGV,IAAI,CAACW,IAAL,CAAUH,SAAV,EAAqBD,IAAI,CAACK,IAAL,IAAa,UAAlC,CAApB;;AACA,MAAI,CAACR,OAAO,CAACS,cAAR,CAAuBH,WAAvB,CAAL,EAA0C;AACtC,UAAMI,GAAG,GAAI,GAAEd,IAAI,CAACe,QAAL,CAAcN,UAAd,EAA0BC,WAA1B,CAAuC,+CAAtD;AACA,UAAM,IAAIR,OAAO,CAACc,aAAZ,CAA0BF,GAA1B,CAAN;AACH;AACJ;;AACD,SAASf,kBAAT,CAA4BkB,aAA5B,EAA2CT,SAA3C,EAAsDC,UAAtD,EAAkE;AAC9D,QAAMS,eAAe,GAAGlB,IAAI,CAACW,IAAL,CAAUH,SAAV,EAAqB,cAArB,CAAxB;;AACA,MAAI,CAACJ,OAAO,CAACS,cAAR,CAAuBK,eAAvB,CAAL,EAA8C;AAC1C,UAAMJ,GAAG,GAAI,sDAAqDG,aAAc,GAAhF;AACA,UAAM,IAAIf,OAAO,CAACc,aAAZ,CAA0BF,GAA1B,CAAN;AACH;;AACD,MAAIP,IAAJ;;AACA,MAAI;AACAA,IAAAA,IAAI,GAAGF,KAAK,CAACc,IAAN,CAAWD,eAAX,CAAP;AACAf,IAAAA,QAAQ,CAACiB,MAAT,CAAgBC,KAAhB,CAAsB,sCAAtB,EAA8DC,IAAI,CAACC,SAAL,CAAehB,IAAf,EAAqB,IAArB,EAA2B,CAA3B,CAA9D;AACAD,IAAAA,4BAA4B,CAACC,IAAD,EAAOC,SAAP,EAAkBC,UAAlB,CAA5B;AACH,GAJD,CAKA,OAAOe,CAAP,EAAU;AACN,UAAMV,GAAG,GAAI,8BAA6BG,aAAc,GAAEjB,IAAI,CAACyB,GAAI,qBAAoBD,CAAC,CAACE,OAAQ,EAAjG;AACA,UAAM,IAAIxB,OAAO,CAACc,aAAZ,CAA0BF,GAA1B,CAAN;AACH;AACJ;;AACDjB,OAAO,CAACE,kBAAR,GAA6BA,kBAA7B","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.packageJsonIsValid = void 0;\nconst path = require(\"path\");\nconst error_1 = require(\"../../../../error\");\nconst logger_1 = require(\"../../../../logger\");\nconst fsutils = require(\"../../../../fsutils\");\nconst cjson = require(\"cjson\");\nfunction assertFunctionsSourcePresent(data, sourceDir, projectDir) {\n    const indexJsFile = path.join(sourceDir, data.main || \"index.js\");\n    if (!fsutils.fileExistsSync(indexJsFile)) {\n        const msg = `${path.relative(projectDir, indexJsFile)} does not exist, can't deploy Cloud Functions`;\n        throw new error_1.FirebaseError(msg);\n    }\n}\nfunction packageJsonIsValid(sourceDirName, sourceDir, projectDir) {\n    const packageJsonFile = path.join(sourceDir, \"package.json\");\n    if (!fsutils.fileExistsSync(packageJsonFile)) {\n        const msg = `No npm package found in functions source directory ${sourceDirName}.`;\n        throw new error_1.FirebaseError(msg);\n    }\n    let data;\n    try {\n        data = cjson.load(packageJsonFile);\n        logger_1.logger.debug(\"> [functions] package.json contents:\", JSON.stringify(data, null, 2));\n        assertFunctionsSourcePresent(data, sourceDir, projectDir);\n    }\n    catch (e) {\n        const msg = `There was an error reading ${sourceDirName}${path.sep}package.json:\\n\\n ${e.message}`;\n        throw new error_1.FirebaseError(msg);\n    }\n}\nexports.packageJsonIsValid = packageJsonIsValid;\n"]},"metadata":{},"sourceType":"script"}