{"ast":null,"code":"\"use strict\";\n\nconst _ = require(\"lodash\");\n\nconst {\n  FirebaseError\n} = require(\"../../error\");\n\nfunction extractPattern(type, spec) {\n  const glob = spec.source || spec.glob;\n  const regex = spec.regex;\n\n  if (glob && regex) {\n    throw new FirebaseError(\"Cannot specify a \" + type + \" pattern with both a glob and regex.\");\n  } else if (glob) {\n    return {\n      glob: glob\n    };\n  } else if (regex) {\n    return {\n      regex: regex\n    };\n  }\n\n  throw new FirebaseError(\"Cannot specify a \" + type + \" with no pattern (either a glob or regex required).\");\n}\n\nmodule.exports = function (config) {\n  const out = {};\n\n  if (!config) {\n    return out;\n  }\n\n  if (_.isArray(config.rewrites)) {\n    out.rewrites = config.rewrites.map(function (rewrite) {\n      const vRewrite = extractPattern(\"rewrite\", rewrite);\n\n      if (rewrite.destination) {\n        vRewrite.path = rewrite.destination;\n      } else if (rewrite.function) {\n        vRewrite.function = rewrite.function;\n      } else if (rewrite.dynamicLinks) {\n        vRewrite.dynamicLinks = rewrite.dynamicLinks;\n      } else if (rewrite.run) {\n        vRewrite.run = Object.assign({\n          region: \"us-central1\"\n        }, rewrite.run);\n      }\n\n      return vRewrite;\n    });\n  }\n\n  if (_.isArray(config.redirects)) {\n    out.redirects = config.redirects.map(function (redirect) {\n      const vRedirect = extractPattern(\"redirect\", redirect);\n      vRedirect.location = redirect.destination;\n\n      if (redirect.type) {\n        vRedirect.statusCode = redirect.type;\n      }\n\n      return vRedirect;\n    });\n  }\n\n  if (_.isArray(config.headers)) {\n    out.headers = config.headers.map(function (header) {\n      const vHeader = extractPattern(\"header\", header);\n      vHeader.headers = {};\n      (header.headers || []).forEach(function (h) {\n        vHeader.headers[h.key] = h.value;\n      });\n      return vHeader;\n    });\n  }\n\n  if (_.has(config, \"cleanUrls\")) {\n    out.cleanUrls = config.cleanUrls;\n  }\n\n  if (config.trailingSlash === true) {\n    out.trailingSlashBehavior = \"ADD\";\n  } else if (config.trailingSlash === false) {\n    out.trailingSlashBehavior = \"REMOVE\";\n  }\n\n  if (_.has(config, \"appAssociation\")) {\n    out.appAssociation = config.appAssociation;\n  }\n\n  if (_.has(config, \"i18n\")) {\n    out.i18n = config.i18n;\n  }\n\n  return out;\n};","map":{"version":3,"sources":["/home/dev/Documentos/Projects/github-clone/node_modules/firebase-tools/lib/deploy/hosting/convertConfig.js"],"names":["_","require","FirebaseError","extractPattern","type","spec","glob","source","regex","module","exports","config","out","isArray","rewrites","map","rewrite","vRewrite","destination","path","function","dynamicLinks","run","Object","assign","region","redirects","redirect","vRedirect","location","statusCode","headers","header","vHeader","forEach","h","key","value","has","cleanUrls","trailingSlash","trailingSlashBehavior","appAssociation","i18n"],"mappings":"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","sourcesContent":["\"use strict\";\nconst _ = require(\"lodash\");\nconst { FirebaseError } = require(\"../../error\");\nfunction extractPattern(type, spec) {\n    const glob = spec.source || spec.glob;\n    const regex = spec.regex;\n    if (glob && regex) {\n        throw new FirebaseError(\"Cannot specify a \" + type + \" pattern with both a glob and regex.\");\n    }\n    else if (glob) {\n        return { glob: glob };\n    }\n    else if (regex) {\n        return { regex: regex };\n    }\n    throw new FirebaseError(\"Cannot specify a \" + type + \" with no pattern (either a glob or regex required).\");\n}\nmodule.exports = function (config) {\n    const out = {};\n    if (!config) {\n        return out;\n    }\n    if (_.isArray(config.rewrites)) {\n        out.rewrites = config.rewrites.map(function (rewrite) {\n            const vRewrite = extractPattern(\"rewrite\", rewrite);\n            if (rewrite.destination) {\n                vRewrite.path = rewrite.destination;\n            }\n            else if (rewrite.function) {\n                vRewrite.function = rewrite.function;\n            }\n            else if (rewrite.dynamicLinks) {\n                vRewrite.dynamicLinks = rewrite.dynamicLinks;\n            }\n            else if (rewrite.run) {\n                vRewrite.run = Object.assign({ region: \"us-central1\" }, rewrite.run);\n            }\n            return vRewrite;\n        });\n    }\n    if (_.isArray(config.redirects)) {\n        out.redirects = config.redirects.map(function (redirect) {\n            const vRedirect = extractPattern(\"redirect\", redirect);\n            vRedirect.location = redirect.destination;\n            if (redirect.type) {\n                vRedirect.statusCode = redirect.type;\n            }\n            return vRedirect;\n        });\n    }\n    if (_.isArray(config.headers)) {\n        out.headers = config.headers.map(function (header) {\n            const vHeader = extractPattern(\"header\", header);\n            vHeader.headers = {};\n            (header.headers || []).forEach(function (h) {\n                vHeader.headers[h.key] = h.value;\n            });\n            return vHeader;\n        });\n    }\n    if (_.has(config, \"cleanUrls\")) {\n        out.cleanUrls = config.cleanUrls;\n    }\n    if (config.trailingSlash === true) {\n        out.trailingSlashBehavior = \"ADD\";\n    }\n    else if (config.trailingSlash === false) {\n        out.trailingSlashBehavior = \"REMOVE\";\n    }\n    if (_.has(config, \"appAssociation\")) {\n        out.appAssociation = config.appAssociation;\n    }\n    if (_.has(config, \"i18n\")) {\n        out.i18n = config.i18n;\n    }\n    return out;\n};\n"]},"metadata":{},"sourceType":"script"}