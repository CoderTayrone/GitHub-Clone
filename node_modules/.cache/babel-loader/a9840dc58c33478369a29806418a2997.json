{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.validateProjectId = exports.Command = void 0;\n\nconst cli_color_1 = require(\"cli-color\");\n\nconst lodash_1 = require(\"lodash\");\n\nconst error_1 = require(\"./error\");\n\nconst utils_1 = require(\"./utils\");\n\nconst rc_1 = require(\"./rc\");\n\nconst config_1 = require(\"./config\");\n\nconst configstore_1 = require(\"./configstore\");\n\nconst detectProjectRoot_1 = require(\"./detectProjectRoot\");\n\nconst track = require(\"./track\");\n\nconst clc = require(\"cli-color\");\n\nconst auth_1 = require(\"./auth\");\n\nconst projects_1 = require(\"./management/projects\");\n\nconst requireAuth_1 = require(\"./requireAuth\");\n\nclass Command {\n  constructor(cmd) {\n    this.cmd = cmd;\n    this.name = \"\";\n    this.descriptionText = \"\";\n    this.options = [];\n\n    this.actionFn = () => {};\n\n    this.befores = [];\n    this.helpText = \"\";\n    this.positionalArgs = [];\n    this.name = lodash_1.first(cmd.split(\" \")) || \"\";\n  }\n\n  description(t) {\n    this.descriptionText = t;\n    return this;\n  }\n\n  option(...args) {\n    this.options.push(args);\n    return this;\n  }\n\n  withForce(message) {\n    this.options.push([\"-f, --force\", message || \"automatically accept all interactive prompts\"]);\n    return this;\n  }\n\n  before(fn, ...args) {\n    this.befores.push({\n      fn: fn,\n      args: args\n    });\n    return this;\n  }\n\n  help(t) {\n    this.helpText = t;\n    return this;\n  }\n\n  action(fn) {\n    this.actionFn = fn;\n    return this;\n  }\n\n  register(client) {\n    this.client = client;\n    const program = client.cli;\n    const cmd = program.command(this.cmd);\n\n    if (this.descriptionText) {\n      cmd.description(this.descriptionText);\n    }\n\n    this.options.forEach(args => {\n      const flags = args.shift();\n      cmd.option(flags, ...args);\n    });\n\n    if (this.helpText) {\n      cmd.on(\"--help\", () => {\n        console.log(this.helpText);\n      });\n    }\n\n    this.positionalArgs = cmd._args;\n    cmd.action((...args) => {\n      const runner = this.runner();\n      const start = new Date().getTime();\n      const options = lodash_1.last(args);\n\n      if (args.length - 1 > cmd._args.length) {\n        client.errorOut(new error_1.FirebaseError(`Too many arguments. Run ${cli_color_1.bold(\"firebase help \" + this.name)} for usage instructions`, {\n          exit: 1\n        }));\n        return;\n      }\n\n      runner(...args).then(result => {\n        if (utils_1.getInheritedOption(options, \"json\")) {\n          console.log(JSON.stringify({\n            status: \"success\",\n            result: result\n          }, null, 2));\n        }\n\n        const duration = new Date().getTime() - start;\n        track(this.name, \"success\", duration).then(() => process.exit());\n      }).catch(async err => {\n        if (utils_1.getInheritedOption(options, \"json\")) {\n          console.log(JSON.stringify({\n            status: \"error\",\n            error: err.message\n          }, null, 2));\n        }\n\n        const duration = Date.now() - start;\n        const errorEvent = err.exit === 1 ? \"Error (User)\" : \"Error (Unexpected)\";\n        await Promise.all([track(this.name, \"error\", duration), track(errorEvent, \"\", duration)]);\n        client.errorOut(err);\n      });\n    });\n  }\n\n  async prepare(options) {\n    options = options || {};\n    options.project = utils_1.getInheritedOption(options, \"project\");\n\n    if (!process.stdin.isTTY || utils_1.getInheritedOption(options, \"nonInteractive\")) {\n      options.nonInteractive = true;\n    }\n\n    if (utils_1.getInheritedOption(options, \"interactive\")) {\n      options.interactive = true;\n      options.nonInteractive = false;\n    }\n\n    if (utils_1.getInheritedOption(options, \"debug\")) {\n      options.debug = true;\n    }\n\n    if (utils_1.getInheritedOption(options, \"json\")) {\n      options.nonInteractive = true;\n    } else {\n      utils_1.setupLoggers();\n    }\n\n    if (utils_1.getInheritedOption(options, \"config\")) {\n      options.configPath = utils_1.getInheritedOption(options, \"config\");\n    }\n\n    try {\n      options.config = config_1.Config.load(options);\n    } catch (e) {\n      options.configError = e;\n    }\n\n    const account = utils_1.getInheritedOption(options, \"account\");\n    options.account = account;\n    const projectRoot = options.projectRoot;\n    const activeAccount = auth_1.selectAccount(account, projectRoot);\n\n    if (activeAccount) {\n      auth_1.setActiveAccount(options, activeAccount);\n    }\n\n    options.projectRoot = detectProjectRoot_1.detectProjectRoot(options);\n    this.applyRC(options);\n\n    if (options.project) {\n      await this.resolveProjectIdentifiers(options);\n      validateProjectId(options.projectId);\n    }\n  }\n\n  applyRC(options) {\n    const rc = rc_1.loadRC(options);\n    options.rc = rc;\n    options.project = options.project || (configstore_1.configstore.get(\"activeProjects\") || {})[options.projectRoot];\n\n    if (options.config && !options.project) {\n      options.project = options.config.defaults.project;\n    }\n\n    const aliases = rc.projects;\n    const rcProject = lodash_1.get(aliases, options.project);\n\n    if (rcProject) {\n      options.projectAlias = options.project;\n      options.project = rcProject;\n    } else if (!options.project && lodash_1.size(aliases) === 1) {\n      options.projectAlias = lodash_1.head(lodash_1.keys(aliases));\n      options.project = lodash_1.head(lodash_1.values(aliases));\n    }\n  }\n\n  async resolveProjectIdentifiers(options) {\n    var _a;\n\n    if ((_a = options.project) === null || _a === void 0 ? void 0 : _a.match(/^\\d+$/)) {\n      await requireAuth_1.requireAuth(options);\n      const {\n        projectId,\n        projectNumber\n      } = await projects_1.getFirebaseProject(options.project);\n      options.projectId = projectId;\n      options.projectNumber = projectNumber;\n    } else {\n      options.projectId = options.project;\n    }\n  }\n\n  runner() {\n    return async (...args) => {\n      if (typeof lodash_1.last(args) !== \"object\" || lodash_1.last(args) === null) {\n        args.push({});\n      }\n\n      while (args.length < this.positionalArgs.length + 1) {\n        args.splice(args.length - 1, 0, \"\");\n      }\n\n      const options = lodash_1.last(args);\n      await this.prepare(options);\n\n      for (const before of this.befores) {\n        await before.fn(options, ...before.args);\n      }\n\n      return this.actionFn(...args);\n    };\n  }\n\n}\n\nexports.Command = Command;\nconst PROJECT_ID_REGEX = /^(?:[^:]+:)?[a-z0-9-]+$/;\n\nfunction validateProjectId(project) {\n  if (PROJECT_ID_REGEX.test(project)) {\n    return;\n  }\n\n  track(\"Project ID Check\", \"invalid\");\n  const invalidMessage = \"Invalid project id: \" + clc.bold(project) + \".\";\n\n  if (project.toLowerCase() !== project) {\n    throw new error_1.FirebaseError(invalidMessage + \"\\nNote: Project id must be all lowercase.\");\n  } else {\n    throw new error_1.FirebaseError(invalidMessage);\n  }\n}\n\nexports.validateProjectId = validateProjectId;","map":{"version":3,"sources":["/home/dev/Documentos/Projects/github-clone/node_modules/firebase-tools/lib/command.js"],"names":["Object","defineProperty","exports","value","validateProjectId","Command","cli_color_1","require","lodash_1","error_1","utils_1","rc_1","config_1","configstore_1","detectProjectRoot_1","track","clc","auth_1","projects_1","requireAuth_1","constructor","cmd","name","descriptionText","options","actionFn","befores","helpText","positionalArgs","first","split","description","t","option","args","push","withForce","message","before","fn","help","action","register","client","program","cli","command","forEach","flags","shift","on","console","log","_args","runner","start","Date","getTime","last","length","errorOut","FirebaseError","bold","exit","then","result","getInheritedOption","JSON","stringify","status","duration","process","catch","err","error","now","errorEvent","Promise","all","prepare","project","stdin","isTTY","nonInteractive","interactive","debug","setupLoggers","configPath","config","Config","load","e","configError","account","projectRoot","activeAccount","selectAccount","setActiveAccount","detectProjectRoot","applyRC","resolveProjectIdentifiers","projectId","rc","loadRC","configstore","get","defaults","aliases","projects","rcProject","projectAlias","size","head","keys","values","_a","match","requireAuth","projectNumber","getFirebaseProject","splice","PROJECT_ID_REGEX","test","invalidMessage","toLowerCase"],"mappings":"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","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.validateProjectId = exports.Command = void 0;\nconst cli_color_1 = require(\"cli-color\");\nconst lodash_1 = require(\"lodash\");\nconst error_1 = require(\"./error\");\nconst utils_1 = require(\"./utils\");\nconst rc_1 = require(\"./rc\");\nconst config_1 = require(\"./config\");\nconst configstore_1 = require(\"./configstore\");\nconst detectProjectRoot_1 = require(\"./detectProjectRoot\");\nconst track = require(\"./track\");\nconst clc = require(\"cli-color\");\nconst auth_1 = require(\"./auth\");\nconst projects_1 = require(\"./management/projects\");\nconst requireAuth_1 = require(\"./requireAuth\");\nclass Command {\n    constructor(cmd) {\n        this.cmd = cmd;\n        this.name = \"\";\n        this.descriptionText = \"\";\n        this.options = [];\n        this.actionFn = () => {\n        };\n        this.befores = [];\n        this.helpText = \"\";\n        this.positionalArgs = [];\n        this.name = lodash_1.first(cmd.split(\" \")) || \"\";\n    }\n    description(t) {\n        this.descriptionText = t;\n        return this;\n    }\n    option(...args) {\n        this.options.push(args);\n        return this;\n    }\n    withForce(message) {\n        this.options.push([\"-f, --force\", message || \"automatically accept all interactive prompts\"]);\n        return this;\n    }\n    before(fn, ...args) {\n        this.befores.push({ fn: fn, args: args });\n        return this;\n    }\n    help(t) {\n        this.helpText = t;\n        return this;\n    }\n    action(fn) {\n        this.actionFn = fn;\n        return this;\n    }\n    register(client) {\n        this.client = client;\n        const program = client.cli;\n        const cmd = program.command(this.cmd);\n        if (this.descriptionText) {\n            cmd.description(this.descriptionText);\n        }\n        this.options.forEach((args) => {\n            const flags = args.shift();\n            cmd.option(flags, ...args);\n        });\n        if (this.helpText) {\n            cmd.on(\"--help\", () => {\n                console.log(this.helpText);\n            });\n        }\n        this.positionalArgs = cmd._args;\n        cmd.action((...args) => {\n            const runner = this.runner();\n            const start = new Date().getTime();\n            const options = lodash_1.last(args);\n            if (args.length - 1 > cmd._args.length) {\n                client.errorOut(new error_1.FirebaseError(`Too many arguments. Run ${cli_color_1.bold(\"firebase help \" + this.name)} for usage instructions`, { exit: 1 }));\n                return;\n            }\n            runner(...args)\n                .then((result) => {\n                if (utils_1.getInheritedOption(options, \"json\")) {\n                    console.log(JSON.stringify({\n                        status: \"success\",\n                        result: result,\n                    }, null, 2));\n                }\n                const duration = new Date().getTime() - start;\n                track(this.name, \"success\", duration).then(() => process.exit());\n            })\n                .catch(async (err) => {\n                if (utils_1.getInheritedOption(options, \"json\")) {\n                    console.log(JSON.stringify({\n                        status: \"error\",\n                        error: err.message,\n                    }, null, 2));\n                }\n                const duration = Date.now() - start;\n                const errorEvent = err.exit === 1 ? \"Error (User)\" : \"Error (Unexpected)\";\n                await Promise.all([track(this.name, \"error\", duration), track(errorEvent, \"\", duration)]);\n                client.errorOut(err);\n            });\n        });\n    }\n    async prepare(options) {\n        options = options || {};\n        options.project = utils_1.getInheritedOption(options, \"project\");\n        if (!process.stdin.isTTY || utils_1.getInheritedOption(options, \"nonInteractive\")) {\n            options.nonInteractive = true;\n        }\n        if (utils_1.getInheritedOption(options, \"interactive\")) {\n            options.interactive = true;\n            options.nonInteractive = false;\n        }\n        if (utils_1.getInheritedOption(options, \"debug\")) {\n            options.debug = true;\n        }\n        if (utils_1.getInheritedOption(options, \"json\")) {\n            options.nonInteractive = true;\n        }\n        else {\n            utils_1.setupLoggers();\n        }\n        if (utils_1.getInheritedOption(options, \"config\")) {\n            options.configPath = utils_1.getInheritedOption(options, \"config\");\n        }\n        try {\n            options.config = config_1.Config.load(options);\n        }\n        catch (e) {\n            options.configError = e;\n        }\n        const account = utils_1.getInheritedOption(options, \"account\");\n        options.account = account;\n        const projectRoot = options.projectRoot;\n        const activeAccount = auth_1.selectAccount(account, projectRoot);\n        if (activeAccount) {\n            auth_1.setActiveAccount(options, activeAccount);\n        }\n        options.projectRoot = detectProjectRoot_1.detectProjectRoot(options);\n        this.applyRC(options);\n        if (options.project) {\n            await this.resolveProjectIdentifiers(options);\n            validateProjectId(options.projectId);\n        }\n    }\n    applyRC(options) {\n        const rc = rc_1.loadRC(options);\n        options.rc = rc;\n        options.project =\n            options.project || (configstore_1.configstore.get(\"activeProjects\") || {})[options.projectRoot];\n        if (options.config && !options.project) {\n            options.project = options.config.defaults.project;\n        }\n        const aliases = rc.projects;\n        const rcProject = lodash_1.get(aliases, options.project);\n        if (rcProject) {\n            options.projectAlias = options.project;\n            options.project = rcProject;\n        }\n        else if (!options.project && lodash_1.size(aliases) === 1) {\n            options.projectAlias = lodash_1.head(lodash_1.keys(aliases));\n            options.project = lodash_1.head(lodash_1.values(aliases));\n        }\n    }\n    async resolveProjectIdentifiers(options) {\n        var _a;\n        if ((_a = options.project) === null || _a === void 0 ? void 0 : _a.match(/^\\d+$/)) {\n            await requireAuth_1.requireAuth(options);\n            const { projectId, projectNumber } = await projects_1.getFirebaseProject(options.project);\n            options.projectId = projectId;\n            options.projectNumber = projectNumber;\n        }\n        else {\n            options.projectId = options.project;\n        }\n    }\n    runner() {\n        return async (...args) => {\n            if (typeof lodash_1.last(args) !== \"object\" || lodash_1.last(args) === null) {\n                args.push({});\n            }\n            while (args.length < this.positionalArgs.length + 1) {\n                args.splice(args.length - 1, 0, \"\");\n            }\n            const options = lodash_1.last(args);\n            await this.prepare(options);\n            for (const before of this.befores) {\n                await before.fn(options, ...before.args);\n            }\n            return this.actionFn(...args);\n        };\n    }\n}\nexports.Command = Command;\nconst PROJECT_ID_REGEX = /^(?:[^:]+:)?[a-z0-9-]+$/;\nfunction validateProjectId(project) {\n    if (PROJECT_ID_REGEX.test(project)) {\n        return;\n    }\n    track(\"Project ID Check\", \"invalid\");\n    const invalidMessage = \"Invalid project id: \" + clc.bold(project) + \".\";\n    if (project.toLowerCase() !== project) {\n        throw new error_1.FirebaseError(invalidMessage + \"\\nNote: Project id must be all lowercase.\");\n    }\n    else {\n        throw new error_1.FirebaseError(invalidMessage);\n    }\n}\nexports.validateProjectId = validateProjectId;\n"]},"metadata":{},"sourceType":"script"}