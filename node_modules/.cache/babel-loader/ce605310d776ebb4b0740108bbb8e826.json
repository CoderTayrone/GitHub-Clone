{"ast":null,"code":"'use strict';\n\nconst RE2 = require('./build/Release/re2');\n\nif (typeof Symbol != 'undefined') {\n  Symbol.match && (RE2.prototype[Symbol.match] = function (str) {\n    return this.match(str);\n  });\n  Symbol.search && (RE2.prototype[Symbol.search] = function (str) {\n    return this.search(str);\n  });\n  Symbol.replace && (RE2.prototype[Symbol.replace] = function (str, repl) {\n    return this.replace(str, repl);\n  });\n  Symbol.split && (RE2.prototype[Symbol.split] = function (str, limit) {\n    return this.split(str, limit);\n  });\n}\n\nmodule.exports = RE2;","map":{"version":3,"sources":["/home/dev/Documentos/Projects/github-clone/node_modules/re2/re2.js"],"names":["RE2","require","Symbol","match","prototype","str","search","replace","repl","split","limit","module","exports"],"mappings":"AAAA;;AAEA,MAAMA,GAAG,GAAGC,OAAO,CAAC,qBAAD,CAAnB;;AAEA,IAAI,OAAOC,MAAP,IAAiB,WAArB,EAAkC;AAChCA,EAAAA,MAAM,CAACC,KAAP,KACGH,GAAG,CAACI,SAAJ,CAAcF,MAAM,CAACC,KAArB,IAA8B,UAAUE,GAAV,EAAe;AAC5C,WAAO,KAAKF,KAAL,CAAWE,GAAX,CAAP;AACD,GAHH;AAIAH,EAAAA,MAAM,CAACI,MAAP,KACGN,GAAG,CAACI,SAAJ,CAAcF,MAAM,CAACI,MAArB,IAA+B,UAAUD,GAAV,EAAe;AAC7C,WAAO,KAAKC,MAAL,CAAYD,GAAZ,CAAP;AACD,GAHH;AAIAH,EAAAA,MAAM,CAACK,OAAP,KACGP,GAAG,CAACI,SAAJ,CAAcF,MAAM,CAACK,OAArB,IAAgC,UAAUF,GAAV,EAAeG,IAAf,EAAqB;AACpD,WAAO,KAAKD,OAAL,CAAaF,GAAb,EAAkBG,IAAlB,CAAP;AACD,GAHH;AAIAN,EAAAA,MAAM,CAACO,KAAP,KACGT,GAAG,CAACI,SAAJ,CAAcF,MAAM,CAACO,KAArB,IAA8B,UAAUJ,GAAV,EAAeK,KAAf,EAAsB;AACnD,WAAO,KAAKD,KAAL,CAAWJ,GAAX,EAAgBK,KAAhB,CAAP;AACD,GAHH;AAID;;AAEDC,MAAM,CAACC,OAAP,GAAiBZ,GAAjB","sourcesContent":["'use strict';\n\nconst RE2 = require('./build/Release/re2');\n\nif (typeof Symbol != 'undefined') {\n  Symbol.match &&\n    (RE2.prototype[Symbol.match] = function (str) {\n      return this.match(str);\n    });\n  Symbol.search &&\n    (RE2.prototype[Symbol.search] = function (str) {\n      return this.search(str);\n    });\n  Symbol.replace &&\n    (RE2.prototype[Symbol.replace] = function (str, repl) {\n      return this.replace(str, repl);\n    });\n  Symbol.split &&\n    (RE2.prototype[Symbol.split] = function (str, limit) {\n      return this.split(str, limit);\n    });\n}\n\nmodule.exports = RE2;\n"]},"metadata":{},"sourceType":"script"}