{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nclass SpecificationExtension {\n  static isValidExtension(extensionName) {\n    return /^x\\-/.test(extensionName);\n  }\n\n  getExtension(extensionName) {\n    if (!SpecificationExtension.isValidExtension(extensionName)) {\n      throw new Error(`Invalid specification extension: '${extensionName}'. Extensions must start with prefix 'x-`);\n    }\n\n    if (this[extensionName]) {\n      return this[extensionName];\n    }\n\n    return null;\n  }\n\n  addExtension(extensionName, payload) {\n    if (!SpecificationExtension.isValidExtension(extensionName)) {\n      throw new Error(`Invalid specification extension: '${extensionName}'. Extensions must start with prefix 'x-`);\n    }\n\n    this[extensionName] = payload;\n  }\n\n  listExtensions() {\n    const res = [];\n\n    for (const propName in this) {\n      if (this.hasOwnProperty(propName)) {\n        if (SpecificationExtension.isValidExtension(propName)) {\n          res.push(propName);\n        }\n      }\n    }\n\n    return res;\n  }\n\n}\n\nexports.SpecificationExtension = SpecificationExtension;","map":{"version":3,"sources":["../../src/model/SpecificationExtension.ts"],"names":[],"mappings":";;;;;;AAWA,MAAa,sBAAb,CAAmC;AAIR,SAAhB,gBAAgB,CAAC,aAAD,EAAsB;AACzC,WAAO,OAAO,IAAP,CAAY,aAAZ,CAAP;AACH;;AAED,EAAA,YAAY,CAAC,aAAD,EAAsB;AAC9B,QAAI,CAAC,sBAAsB,CAAC,gBAAvB,CAAwC,aAAxC,CAAL,EAA6D;AACzD,YAAM,IAAI,KAAJ,CACF,qCAAqC,aAAa,0CADhD,CAAN;AAGH;;AACD,QAAI,KAAK,aAAL,CAAJ,EAAyB;AACrB,aAAO,KAAK,aAAL,CAAP;AACH;;AACD,WAAO,IAAP;AACH;;AACD,EAAA,YAAY,CAAC,aAAD,EAAwB,OAAxB,EAAoC;AAC5C,QAAI,CAAC,sBAAsB,CAAC,gBAAvB,CAAwC,aAAxC,CAAL,EAA6D;AACzD,YAAM,IAAI,KAAJ,CACF,qCAAqC,aAAa,0CADhD,CAAN;AAGH;;AACD,SAAK,aAAL,IAAsB,OAAtB;AACH;;AACD,EAAA,cAAc,GAAA;AACV,UAAM,GAAG,GAAa,EAAtB;;AACA,SAAK,MAAM,QAAX,IAAuB,IAAvB,EAA6B;AACzB,UAAI,KAAK,cAAL,CAAoB,QAApB,CAAJ,EAAmC;AAC/B,YAAI,sBAAsB,CAAC,gBAAvB,CAAwC,QAAxC,CAAJ,EAAuD;AACnD,UAAA,GAAG,CAAC,IAAJ,CAAS,QAAT;AACH;AACJ;AACJ;;AACD,WAAO,GAAP;AACH;;AArC8B;;AAAnC,OAAA,CAAA,sBAAA,GAAA,sBAAA","sourceRoot":"","sourcesContent":["\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nclass SpecificationExtension {\r\n    static isValidExtension(extensionName) {\r\n        return /^x\\-/.test(extensionName);\r\n    }\r\n    getExtension(extensionName) {\r\n        if (!SpecificationExtension.isValidExtension(extensionName)) {\r\n            throw new Error(`Invalid specification extension: '${extensionName}'. Extensions must start with prefix 'x-`);\r\n        }\r\n        if (this[extensionName]) {\r\n            return this[extensionName];\r\n        }\r\n        return null;\r\n    }\r\n    addExtension(extensionName, payload) {\r\n        if (!SpecificationExtension.isValidExtension(extensionName)) {\r\n            throw new Error(`Invalid specification extension: '${extensionName}'. Extensions must start with prefix 'x-`);\r\n        }\r\n        this[extensionName] = payload;\r\n    }\r\n    listExtensions() {\r\n        const res = [];\r\n        for (const propName in this) {\r\n            if (this.hasOwnProperty(propName)) {\r\n                if (SpecificationExtension.isValidExtension(propName)) {\r\n                    res.push(propName);\r\n                }\r\n            }\r\n        }\r\n        return res;\r\n    }\r\n}\r\nexports.SpecificationExtension = SpecificationExtension;\r\n//# sourceMappingURL=SpecificationExtension.js.map"]},"metadata":{},"sourceType":"script"}