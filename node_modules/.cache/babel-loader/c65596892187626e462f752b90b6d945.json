{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nconst clc = require(\"cli-color\");\n\nconst apiv2_1 = require(\"../apiv2\");\n\nconst command_1 = require(\"../command\");\n\nconst api_1 = require(\"../api\");\n\nconst prompt_1 = require(\"../prompt\");\n\nconst requireHostingSite_1 = require(\"../requireHostingSite\");\n\nconst requirePermissions_1 = require(\"../requirePermissions\");\n\nconst utils = require(\"../utils\");\n\nexports.default = new command_1.Command(\"hosting:disable\").description(\"stop serving web traffic to your Firebase Hosting site\").option(\"-y, --confirm\", \"skip confirmation\").option(\"-s, --site <siteName>\", \"the site to disable\").before(requirePermissions_1.requirePermissions, [\"firebasehosting.sites.update\"]).before(requireHostingSite_1.requireHostingSite).action(async options => {\n  const siteToDisable = options.site;\n  const confirm = await prompt_1.promptOnce({\n    type: \"confirm\",\n    name: \"confirm\",\n    message: `Are you sure you want to disable Firebase Hosting for the site ${clc.underline(siteToDisable)}\\n${clc.underline(\"This will immediately make your site inaccessible!\")}`\n  });\n\n  if (!confirm) {\n    return;\n  }\n\n  const c = new apiv2_1.Client({\n    urlPrefix: api_1.hostingApiOrigin,\n    apiVersion: \"v1beta1\",\n    auth: true\n  });\n  await c.post(`/sites/${siteToDisable}/releases`, {\n    type: \"SITE_DISABLE\"\n  });\n  utils.logSuccess(`Hosting has been disabled for ${clc.bold(siteToDisable)}. Deploy a new version to re-enable.`);\n});","map":{"version":3,"sources":["/home/dev/Documentos/Projects/github-clone/node_modules/firebase-tools/lib/commands/hosting-disable.js"],"names":["Object","defineProperty","exports","value","clc","require","apiv2_1","command_1","api_1","prompt_1","requireHostingSite_1","requirePermissions_1","utils","default","Command","description","option","before","requirePermissions","requireHostingSite","action","options","siteToDisable","site","confirm","promptOnce","type","name","message","underline","c","Client","urlPrefix","hostingApiOrigin","apiVersion","auth","post","logSuccess","bold"],"mappings":"AAAA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;;AACA,MAAMC,GAAG,GAAGC,OAAO,CAAC,WAAD,CAAnB;;AACA,MAAMC,OAAO,GAAGD,OAAO,CAAC,UAAD,CAAvB;;AACA,MAAME,SAAS,GAAGF,OAAO,CAAC,YAAD,CAAzB;;AACA,MAAMG,KAAK,GAAGH,OAAO,CAAC,QAAD,CAArB;;AACA,MAAMI,QAAQ,GAAGJ,OAAO,CAAC,WAAD,CAAxB;;AACA,MAAMK,oBAAoB,GAAGL,OAAO,CAAC,uBAAD,CAApC;;AACA,MAAMM,oBAAoB,GAAGN,OAAO,CAAC,uBAAD,CAApC;;AACA,MAAMO,KAAK,GAAGP,OAAO,CAAC,UAAD,CAArB;;AACAH,OAAO,CAACW,OAAR,GAAkB,IAAIN,SAAS,CAACO,OAAd,CAAsB,iBAAtB,EACbC,WADa,CACD,wDADC,EAEbC,MAFa,CAEN,eAFM,EAEW,mBAFX,EAGbA,MAHa,CAGN,uBAHM,EAGmB,qBAHnB,EAIbC,MAJa,CAINN,oBAAoB,CAACO,kBAJf,EAImC,CAAC,8BAAD,CAJnC,EAKbD,MALa,CAKNP,oBAAoB,CAACS,kBALf,EAMbC,MANa,CAMN,MAAOC,OAAP,IAAmB;AAC3B,QAAMC,aAAa,GAAGD,OAAO,CAACE,IAA9B;AACA,QAAMC,OAAO,GAAG,MAAMf,QAAQ,CAACgB,UAAT,CAAoB;AACtCC,IAAAA,IAAI,EAAE,SADgC;AAEtCC,IAAAA,IAAI,EAAE,SAFgC;AAGtCC,IAAAA,OAAO,EAAG,kEAAiExB,GAAG,CAACyB,SAAJ,CAAcP,aAAd,CAA6B,KAAIlB,GAAG,CAACyB,SAAJ,CAAc,oDAAd,CAAoE;AAH1I,GAApB,CAAtB;;AAKA,MAAI,CAACL,OAAL,EAAc;AACV;AACH;;AACD,QAAMM,CAAC,GAAG,IAAIxB,OAAO,CAACyB,MAAZ,CAAmB;AAAEC,IAAAA,SAAS,EAAExB,KAAK,CAACyB,gBAAnB;AAAqCC,IAAAA,UAAU,EAAE,SAAjD;AAA4DC,IAAAA,IAAI,EAAE;AAAlE,GAAnB,CAAV;AACA,QAAML,CAAC,CAACM,IAAF,CAAQ,UAASd,aAAc,WAA/B,EAA2C;AAAEI,IAAAA,IAAI,EAAE;AAAR,GAA3C,CAAN;AACAd,EAAAA,KAAK,CAACyB,UAAN,CAAkB,iCAAgCjC,GAAG,CAACkC,IAAJ,CAAShB,aAAT,CAAwB,sCAA1E;AACH,CAnBiB,CAAlB","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst clc = require(\"cli-color\");\nconst apiv2_1 = require(\"../apiv2\");\nconst command_1 = require(\"../command\");\nconst api_1 = require(\"../api\");\nconst prompt_1 = require(\"../prompt\");\nconst requireHostingSite_1 = require(\"../requireHostingSite\");\nconst requirePermissions_1 = require(\"../requirePermissions\");\nconst utils = require(\"../utils\");\nexports.default = new command_1.Command(\"hosting:disable\")\n    .description(\"stop serving web traffic to your Firebase Hosting site\")\n    .option(\"-y, --confirm\", \"skip confirmation\")\n    .option(\"-s, --site <siteName>\", \"the site to disable\")\n    .before(requirePermissions_1.requirePermissions, [\"firebasehosting.sites.update\"])\n    .before(requireHostingSite_1.requireHostingSite)\n    .action(async (options) => {\n    const siteToDisable = options.site;\n    const confirm = await prompt_1.promptOnce({\n        type: \"confirm\",\n        name: \"confirm\",\n        message: `Are you sure you want to disable Firebase Hosting for the site ${clc.underline(siteToDisable)}\\n${clc.underline(\"This will immediately make your site inaccessible!\")}`,\n    });\n    if (!confirm) {\n        return;\n    }\n    const c = new apiv2_1.Client({ urlPrefix: api_1.hostingApiOrigin, apiVersion: \"v1beta1\", auth: true });\n    await c.post(`/sites/${siteToDisable}/releases`, { type: \"SITE_DISABLE\" });\n    utils.logSuccess(`Hosting has been disabled for ${clc.bold(siteToDisable)}. Deploy a new version to re-enable.`);\n});\n"]},"metadata":{},"sourceType":"script"}