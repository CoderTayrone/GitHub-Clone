{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getVersions = void 0;\n\nconst api = require(\"../api\");\n\nconst error_1 = require(\"../error\");\n\nconst logger_1 = require(\"../logger\");\n\nconst TIMEOUT = 30000;\n\nasync function getVersions(projectId, maxResults = 10) {\n  maxResults = maxResults || 300;\n\n  try {\n    let request = `/v1/projects/${projectId}/remoteConfig:listVersions`;\n\n    if (maxResults) {\n      request = request + \"?pageSize=\" + maxResults;\n    }\n\n    const response = await api.request(\"GET\", request, {\n      auth: true,\n      origin: api.remoteConfigApiOrigin,\n      timeout: TIMEOUT\n    });\n    return response.body;\n  } catch (err) {\n    logger_1.logger.debug(err.message);\n    throw new error_1.FirebaseError(`Failed to get Remote Config template versions for Firebase project ${projectId}. `, {\n      exit: 2,\n      original: err\n    });\n  }\n}\n\nexports.getVersions = getVersions;","map":{"version":3,"sources":["/home/dev/Documentos/Projects/github-clone/node_modules/firebase-tools/lib/remoteconfig/versionslist.js"],"names":["Object","defineProperty","exports","value","getVersions","api","require","error_1","logger_1","TIMEOUT","projectId","maxResults","request","response","auth","origin","remoteConfigApiOrigin","timeout","body","err","logger","debug","message","FirebaseError","exit","original"],"mappings":"AAAA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;AACAD,OAAO,CAACE,WAAR,GAAsB,KAAK,CAA3B;;AACA,MAAMC,GAAG,GAAGC,OAAO,CAAC,QAAD,CAAnB;;AACA,MAAMC,OAAO,GAAGD,OAAO,CAAC,UAAD,CAAvB;;AACA,MAAME,QAAQ,GAAGF,OAAO,CAAC,WAAD,CAAxB;;AACA,MAAMG,OAAO,GAAG,KAAhB;;AACA,eAAeL,WAAf,CAA2BM,SAA3B,EAAsCC,UAAU,GAAG,EAAnD,EAAuD;AACnDA,EAAAA,UAAU,GAAGA,UAAU,IAAI,GAA3B;;AACA,MAAI;AACA,QAAIC,OAAO,GAAI,gBAAeF,SAAU,4BAAxC;;AACA,QAAIC,UAAJ,EAAgB;AACZC,MAAAA,OAAO,GAAGA,OAAO,GAAG,YAAV,GAAyBD,UAAnC;AACH;;AACD,UAAME,QAAQ,GAAG,MAAMR,GAAG,CAACO,OAAJ,CAAY,KAAZ,EAAmBA,OAAnB,EAA4B;AAC/CE,MAAAA,IAAI,EAAE,IADyC;AAE/CC,MAAAA,MAAM,EAAEV,GAAG,CAACW,qBAFmC;AAG/CC,MAAAA,OAAO,EAAER;AAHsC,KAA5B,CAAvB;AAKA,WAAOI,QAAQ,CAACK,IAAhB;AACH,GAXD,CAYA,OAAOC,GAAP,EAAY;AACRX,IAAAA,QAAQ,CAACY,MAAT,CAAgBC,KAAhB,CAAsBF,GAAG,CAACG,OAA1B;AACA,UAAM,IAAIf,OAAO,CAACgB,aAAZ,CAA2B,sEAAqEb,SAAU,IAA1G,EAA+G;AAAEc,MAAAA,IAAI,EAAE,CAAR;AAAWC,MAAAA,QAAQ,EAAEN;AAArB,KAA/G,CAAN;AACH;AACJ;;AACDjB,OAAO,CAACE,WAAR,GAAsBA,WAAtB","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getVersions = void 0;\nconst api = require(\"../api\");\nconst error_1 = require(\"../error\");\nconst logger_1 = require(\"../logger\");\nconst TIMEOUT = 30000;\nasync function getVersions(projectId, maxResults = 10) {\n    maxResults = maxResults || 300;\n    try {\n        let request = `/v1/projects/${projectId}/remoteConfig:listVersions`;\n        if (maxResults) {\n            request = request + \"?pageSize=\" + maxResults;\n        }\n        const response = await api.request(\"GET\", request, {\n            auth: true,\n            origin: api.remoteConfigApiOrigin,\n            timeout: TIMEOUT,\n        });\n        return response.body;\n    }\n    catch (err) {\n        logger_1.logger.debug(err.message);\n        throw new error_1.FirebaseError(`Failed to get Remote Config template versions for Firebase project ${projectId}. `, { exit: 2, original: err });\n    }\n}\nexports.getVersions = getVersions;\n"]},"metadata":{},"sourceType":"script"}