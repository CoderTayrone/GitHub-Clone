{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nconst lodash_1 = require(\"lodash\");\n\nconst proxy_1 = require(\"./proxy\");\n\nconst projectUtils_1 = require(\"../projectUtils\");\n\nconst registry_1 = require(\"../emulator/registry\");\n\nconst types_1 = require(\"../emulator/types\");\n\nconst functionsEmulator_1 = require(\"../emulator/functionsEmulator\");\n\nfunction default_1(options) {\n  return rewrite => {\n    return new Promise(resolve => {\n      const projectId = projectUtils_1.needProjectId(options);\n      let url = `https://us-central1-${projectId}.cloudfunctions.net/${rewrite.function}`;\n      let destLabel = \"live\";\n\n      if (lodash_1.includes(options.targets, \"functions\")) {\n        destLabel = \"local\";\n        const functionsEmu = registry_1.EmulatorRegistry.get(types_1.Emulators.FUNCTIONS);\n\n        if (functionsEmu) {\n          url = functionsEmulator_1.FunctionsEmulator.getHttpFunctionUrl(functionsEmu.getInfo().host, functionsEmu.getInfo().port, projectId, rewrite.function, \"us-central1\");\n        }\n      }\n\n      resolve(proxy_1.proxyRequestHandler(url, `${destLabel} Function ${rewrite.function}`));\n    });\n  };\n}\n\nexports.default = default_1;","map":{"version":3,"sources":["/home/dev/Documentos/Projects/github-clone/node_modules/firebase-tools/lib/hosting/functionsProxy.js"],"names":["Object","defineProperty","exports","value","lodash_1","require","proxy_1","projectUtils_1","registry_1","types_1","functionsEmulator_1","default_1","options","rewrite","Promise","resolve","projectId","needProjectId","url","function","destLabel","includes","targets","functionsEmu","EmulatorRegistry","get","Emulators","FUNCTIONS","FunctionsEmulator","getHttpFunctionUrl","getInfo","host","port","proxyRequestHandler","default"],"mappings":"AAAA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;;AACA,MAAMC,QAAQ,GAAGC,OAAO,CAAC,QAAD,CAAxB;;AACA,MAAMC,OAAO,GAAGD,OAAO,CAAC,SAAD,CAAvB;;AACA,MAAME,cAAc,GAAGF,OAAO,CAAC,iBAAD,CAA9B;;AACA,MAAMG,UAAU,GAAGH,OAAO,CAAC,sBAAD,CAA1B;;AACA,MAAMI,OAAO,GAAGJ,OAAO,CAAC,mBAAD,CAAvB;;AACA,MAAMK,mBAAmB,GAAGL,OAAO,CAAC,+BAAD,CAAnC;;AACA,SAASM,SAAT,CAAmBC,OAAnB,EAA4B;AACxB,SAAQC,OAAD,IAAa;AAChB,WAAO,IAAIC,OAAJ,CAAaC,OAAD,IAAa;AAC5B,YAAMC,SAAS,GAAGT,cAAc,CAACU,aAAf,CAA6BL,OAA7B,CAAlB;AACA,UAAIM,GAAG,GAAI,uBAAsBF,SAAU,uBAAsBH,OAAO,CAACM,QAAS,EAAlF;AACA,UAAIC,SAAS,GAAG,MAAhB;;AACA,UAAIhB,QAAQ,CAACiB,QAAT,CAAkBT,OAAO,CAACU,OAA1B,EAAmC,WAAnC,CAAJ,EAAqD;AACjDF,QAAAA,SAAS,GAAG,OAAZ;AACA,cAAMG,YAAY,GAAGf,UAAU,CAACgB,gBAAX,CAA4BC,GAA5B,CAAgChB,OAAO,CAACiB,SAAR,CAAkBC,SAAlD,CAArB;;AACA,YAAIJ,YAAJ,EAAkB;AACdL,UAAAA,GAAG,GAAGR,mBAAmB,CAACkB,iBAApB,CAAsCC,kBAAtC,CAAyDN,YAAY,CAACO,OAAb,GAAuBC,IAAhF,EAAsFR,YAAY,CAACO,OAAb,GAAuBE,IAA7G,EAAmHhB,SAAnH,EAA8HH,OAAO,CAACM,QAAtI,EAAgJ,aAAhJ,CAAN;AACH;AACJ;;AACDJ,MAAAA,OAAO,CAACT,OAAO,CAAC2B,mBAAR,CAA4Bf,GAA5B,EAAkC,GAAEE,SAAU,aAAYP,OAAO,CAACM,QAAS,EAA3E,CAAD,CAAP;AACH,KAZM,CAAP;AAaH,GAdD;AAeH;;AACDjB,OAAO,CAACgC,OAAR,GAAkBvB,SAAlB","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst lodash_1 = require(\"lodash\");\nconst proxy_1 = require(\"./proxy\");\nconst projectUtils_1 = require(\"../projectUtils\");\nconst registry_1 = require(\"../emulator/registry\");\nconst types_1 = require(\"../emulator/types\");\nconst functionsEmulator_1 = require(\"../emulator/functionsEmulator\");\nfunction default_1(options) {\n    return (rewrite) => {\n        return new Promise((resolve) => {\n            const projectId = projectUtils_1.needProjectId(options);\n            let url = `https://us-central1-${projectId}.cloudfunctions.net/${rewrite.function}`;\n            let destLabel = \"live\";\n            if (lodash_1.includes(options.targets, \"functions\")) {\n                destLabel = \"local\";\n                const functionsEmu = registry_1.EmulatorRegistry.get(types_1.Emulators.FUNCTIONS);\n                if (functionsEmu) {\n                    url = functionsEmulator_1.FunctionsEmulator.getHttpFunctionUrl(functionsEmu.getInfo().host, functionsEmu.getInfo().port, projectId, rewrite.function, \"us-central1\");\n                }\n            }\n            resolve(proxy_1.proxyRequestHandler(url, `${destLabel} Function ${rewrite.function}`));\n        });\n    };\n}\nexports.default = default_1;\n"]},"metadata":{},"sourceType":"script"}