{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nconst command_1 = require(\"../command\");\n\nconst requireDatabaseInstance_1 = require(\"../requireDatabaseInstance\");\n\nconst requirePermissions_1 = require(\"../requirePermissions\");\n\nconst remove_1 = require(\"../database/remove\");\n\nconst types_1 = require(\"../emulator/types\");\n\nconst commandUtils_1 = require(\"../emulator/commandUtils\");\n\nconst database_1 = require(\"../management/database\");\n\nconst api_1 = require(\"../database/api\");\n\nconst utils = require(\"../utils\");\n\nconst prompt_1 = require(\"../prompt\");\n\nconst clc = require(\"cli-color\");\n\nconst _ = require(\"lodash\");\n\nmodule.exports = new command_1.Command(\"database:remove <path>\").description(\"remove data from your Firebase at the specified path\").option(\"-y, --confirm\", \"pass this option to bypass confirmation prompt\").option(\"--instance <instance>\", \"use the database <instance>.firebaseio.com (if omitted, use default database instance)\").before(requirePermissions_1.requirePermissions, [\"firebasedatabase.instances.update\"]).before(requireDatabaseInstance_1.requireDatabaseInstance).before(database_1.populateInstanceDetails).before(commandUtils_1.warnEmulatorNotSupported, types_1.Emulators.DATABASE).action(async (path, options) => {\n  if (!_.startsWith(path, \"/\")) {\n    return utils.reject(\"Path must begin with /\", {\n      exit: 1\n    });\n  }\n\n  const origin = api_1.realtimeOriginOrEmulatorOrCustomUrl(options.instanceDetails.databaseUrl);\n  const databaseUrl = utils.getDatabaseUrl(origin, options.instance, path);\n  const confirm = await prompt_1.promptOnce({\n    type: \"confirm\",\n    name: \"confirm\",\n    default: false,\n    message: \"You are about to remove all data at \" + clc.cyan(databaseUrl) + \". Are you sure?\"\n  }, options);\n\n  if (!confirm) {\n    return utils.reject(\"Command aborted.\", {\n      exit: 1\n    });\n  }\n\n  const removeOps = new remove_1.default(options.instance, path, origin);\n  await removeOps.execute();\n  utils.logSuccess(\"Data removed successfully\");\n});","map":{"version":3,"sources":["/home/dev/Documentos/Projects/github-clone/node_modules/firebase-tools/lib/commands/database-remove.js"],"names":["Object","defineProperty","exports","value","command_1","require","requireDatabaseInstance_1","requirePermissions_1","remove_1","types_1","commandUtils_1","database_1","api_1","utils","prompt_1","clc","_","module","Command","description","option","before","requirePermissions","requireDatabaseInstance","populateInstanceDetails","warnEmulatorNotSupported","Emulators","DATABASE","action","path","options","startsWith","reject","exit","origin","realtimeOriginOrEmulatorOrCustomUrl","instanceDetails","databaseUrl","getDatabaseUrl","instance","confirm","promptOnce","type","name","default","message","cyan","removeOps","execute","logSuccess"],"mappings":"AAAA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;;AACA,MAAMC,SAAS,GAAGC,OAAO,CAAC,YAAD,CAAzB;;AACA,MAAMC,yBAAyB,GAAGD,OAAO,CAAC,4BAAD,CAAzC;;AACA,MAAME,oBAAoB,GAAGF,OAAO,CAAC,uBAAD,CAApC;;AACA,MAAMG,QAAQ,GAAGH,OAAO,CAAC,oBAAD,CAAxB;;AACA,MAAMI,OAAO,GAAGJ,OAAO,CAAC,mBAAD,CAAvB;;AACA,MAAMK,cAAc,GAAGL,OAAO,CAAC,0BAAD,CAA9B;;AACA,MAAMM,UAAU,GAAGN,OAAO,CAAC,wBAAD,CAA1B;;AACA,MAAMO,KAAK,GAAGP,OAAO,CAAC,iBAAD,CAArB;;AACA,MAAMQ,KAAK,GAAGR,OAAO,CAAC,UAAD,CAArB;;AACA,MAAMS,QAAQ,GAAGT,OAAO,CAAC,WAAD,CAAxB;;AACA,MAAMU,GAAG,GAAGV,OAAO,CAAC,WAAD,CAAnB;;AACA,MAAMW,CAAC,GAAGX,OAAO,CAAC,QAAD,CAAjB;;AACAY,MAAM,CAACf,OAAP,GAAiB,IAAIE,SAAS,CAACc,OAAd,CAAsB,wBAAtB,EACZC,WADY,CACA,sDADA,EAEZC,MAFY,CAEL,eAFK,EAEY,gDAFZ,EAGZA,MAHY,CAGL,uBAHK,EAGoB,wFAHpB,EAIZC,MAJY,CAILd,oBAAoB,CAACe,kBAJhB,EAIoC,CAAC,mCAAD,CAJpC,EAKZD,MALY,CAKLf,yBAAyB,CAACiB,uBALrB,EAMZF,MANY,CAMLV,UAAU,CAACa,uBANN,EAOZH,MAPY,CAOLX,cAAc,CAACe,wBAPV,EAOoChB,OAAO,CAACiB,SAAR,CAAkBC,QAPtD,EAQZC,MARY,CAQL,OAAOC,IAAP,EAAaC,OAAb,KAAyB;AACjC,MAAI,CAACd,CAAC,CAACe,UAAF,CAAaF,IAAb,EAAmB,GAAnB,CAAL,EAA8B;AAC1B,WAAOhB,KAAK,CAACmB,MAAN,CAAa,wBAAb,EAAuC;AAAEC,MAAAA,IAAI,EAAE;AAAR,KAAvC,CAAP;AACH;;AACD,QAAMC,MAAM,GAAGtB,KAAK,CAACuB,mCAAN,CAA0CL,OAAO,CAACM,eAAR,CAAwBC,WAAlE,CAAf;AACA,QAAMA,WAAW,GAAGxB,KAAK,CAACyB,cAAN,CAAqBJ,MAArB,EAA6BJ,OAAO,CAACS,QAArC,EAA+CV,IAA/C,CAApB;AACA,QAAMW,OAAO,GAAG,MAAM1B,QAAQ,CAAC2B,UAAT,CAAoB;AACtCC,IAAAA,IAAI,EAAE,SADgC;AAEtCC,IAAAA,IAAI,EAAE,SAFgC;AAGtCC,IAAAA,OAAO,EAAE,KAH6B;AAItCC,IAAAA,OAAO,EAAE,yCAAyC9B,GAAG,CAAC+B,IAAJ,CAAST,WAAT,CAAzC,GAAiE;AAJpC,GAApB,EAKnBP,OALmB,CAAtB;;AAMA,MAAI,CAACU,OAAL,EAAc;AACV,WAAO3B,KAAK,CAACmB,MAAN,CAAa,kBAAb,EAAiC;AAAEC,MAAAA,IAAI,EAAE;AAAR,KAAjC,CAAP;AACH;;AACD,QAAMc,SAAS,GAAG,IAAIvC,QAAQ,CAACoC,OAAb,CAAqBd,OAAO,CAACS,QAA7B,EAAuCV,IAAvC,EAA6CK,MAA7C,CAAlB;AACA,QAAMa,SAAS,CAACC,OAAV,EAAN;AACAnC,EAAAA,KAAK,CAACoC,UAAN,CAAiB,2BAAjB;AACH,CA1BgB,CAAjB","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst command_1 = require(\"../command\");\nconst requireDatabaseInstance_1 = require(\"../requireDatabaseInstance\");\nconst requirePermissions_1 = require(\"../requirePermissions\");\nconst remove_1 = require(\"../database/remove\");\nconst types_1 = require(\"../emulator/types\");\nconst commandUtils_1 = require(\"../emulator/commandUtils\");\nconst database_1 = require(\"../management/database\");\nconst api_1 = require(\"../database/api\");\nconst utils = require(\"../utils\");\nconst prompt_1 = require(\"../prompt\");\nconst clc = require(\"cli-color\");\nconst _ = require(\"lodash\");\nmodule.exports = new command_1.Command(\"database:remove <path>\")\n    .description(\"remove data from your Firebase at the specified path\")\n    .option(\"-y, --confirm\", \"pass this option to bypass confirmation prompt\")\n    .option(\"--instance <instance>\", \"use the database <instance>.firebaseio.com (if omitted, use default database instance)\")\n    .before(requirePermissions_1.requirePermissions, [\"firebasedatabase.instances.update\"])\n    .before(requireDatabaseInstance_1.requireDatabaseInstance)\n    .before(database_1.populateInstanceDetails)\n    .before(commandUtils_1.warnEmulatorNotSupported, types_1.Emulators.DATABASE)\n    .action(async (path, options) => {\n    if (!_.startsWith(path, \"/\")) {\n        return utils.reject(\"Path must begin with /\", { exit: 1 });\n    }\n    const origin = api_1.realtimeOriginOrEmulatorOrCustomUrl(options.instanceDetails.databaseUrl);\n    const databaseUrl = utils.getDatabaseUrl(origin, options.instance, path);\n    const confirm = await prompt_1.promptOnce({\n        type: \"confirm\",\n        name: \"confirm\",\n        default: false,\n        message: \"You are about to remove all data at \" + clc.cyan(databaseUrl) + \". Are you sure?\",\n    }, options);\n    if (!confirm) {\n        return utils.reject(\"Command aborted.\", { exit: 1 });\n    }\n    const removeOps = new remove_1.default(options.instance, path, origin);\n    await removeOps.execute();\n    utils.logSuccess(\"Data removed successfully\");\n});\n"]},"metadata":{},"sourceType":"script"}