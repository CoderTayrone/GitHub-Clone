{"ast":null,"code":"'use strict';\n\nexports = module.exports = cliWidth;\n\nfunction normalizeOpts(options) {\n  var defaultOpts = {\n    defaultWidth: 0,\n    output: process.stdout,\n    tty: require('tty')\n  };\n\n  if (!options) {\n    return defaultOpts;\n  }\n\n  Object.keys(defaultOpts).forEach(function (key) {\n    if (!options[key]) {\n      options[key] = defaultOpts[key];\n    }\n  });\n  return options;\n}\n\nfunction cliWidth(options) {\n  var opts = normalizeOpts(options);\n\n  if (opts.output.getWindowSize) {\n    return opts.output.getWindowSize()[0] || opts.defaultWidth;\n  }\n\n  if (opts.tty.getWindowSize) {\n    return opts.tty.getWindowSize()[1] || opts.defaultWidth;\n  }\n\n  if (opts.output.columns) {\n    return opts.output.columns;\n  }\n\n  if (process.env.CLI_WIDTH) {\n    var width = parseInt(process.env.CLI_WIDTH, 10);\n\n    if (!isNaN(width) && width !== 0) {\n      return width;\n    }\n  }\n\n  return opts.defaultWidth;\n}\n\n;","map":{"version":3,"sources":["/home/dev/Documentos/Projects/github-clone/node_modules/cli-width/index.js"],"names":["exports","module","cliWidth","normalizeOpts","options","defaultOpts","defaultWidth","output","process","stdout","tty","require","Object","keys","forEach","key","opts","getWindowSize","columns","env","CLI_WIDTH","width","parseInt","isNaN"],"mappings":"AAAA;;AAEAA,OAAO,GAAGC,MAAM,CAACD,OAAP,GAAiBE,QAA3B;;AAEA,SAASC,aAAT,CAAuBC,OAAvB,EAAgC;AAC9B,MAAIC,WAAW,GAAG;AAChBC,IAAAA,YAAY,EAAE,CADE;AAEhBC,IAAAA,MAAM,EAAEC,OAAO,CAACC,MAFA;AAGhBC,IAAAA,GAAG,EAAEC,OAAO,CAAC,KAAD;AAHI,GAAlB;;AAMA,MAAI,CAACP,OAAL,EAAc;AACZ,WAAOC,WAAP;AACD;;AAEDO,EAAAA,MAAM,CAACC,IAAP,CAAYR,WAAZ,EAAyBS,OAAzB,CAAiC,UAAUC,GAAV,EAAe;AAC9C,QAAI,CAACX,OAAO,CAACW,GAAD,CAAZ,EAAmB;AACjBX,MAAAA,OAAO,CAACW,GAAD,CAAP,GAAeV,WAAW,CAACU,GAAD,CAA1B;AACD;AACF,GAJD;AAMA,SAAOX,OAAP;AACD;;AAED,SAASF,QAAT,CAAkBE,OAAlB,EAA2B;AACzB,MAAIY,IAAI,GAAGb,aAAa,CAACC,OAAD,CAAxB;;AAEA,MAAIY,IAAI,CAACT,MAAL,CAAYU,aAAhB,EAA+B;AAC7B,WAAOD,IAAI,CAACT,MAAL,CAAYU,aAAZ,GAA4B,CAA5B,KAAkCD,IAAI,CAACV,YAA9C;AACD;;AAED,MAAIU,IAAI,CAACN,GAAL,CAASO,aAAb,EAA4B;AAC1B,WAAOD,IAAI,CAACN,GAAL,CAASO,aAAT,GAAyB,CAAzB,KAA+BD,IAAI,CAACV,YAA3C;AACD;;AAED,MAAIU,IAAI,CAACT,MAAL,CAAYW,OAAhB,EAAyB;AACvB,WAAOF,IAAI,CAACT,MAAL,CAAYW,OAAnB;AACD;;AAED,MAAIV,OAAO,CAACW,GAAR,CAAYC,SAAhB,EAA2B;AACzB,QAAIC,KAAK,GAAGC,QAAQ,CAACd,OAAO,CAACW,GAAR,CAAYC,SAAb,EAAwB,EAAxB,CAApB;;AAEA,QAAI,CAACG,KAAK,CAACF,KAAD,CAAN,IAAiBA,KAAK,KAAK,CAA/B,EAAkC;AAChC,aAAOA,KAAP;AACD;AACF;;AAED,SAAOL,IAAI,CAACV,YAAZ;AACD;;AAAA","sourcesContent":["'use strict';\n\nexports = module.exports = cliWidth;\n\nfunction normalizeOpts(options) {\n  var defaultOpts = {\n    defaultWidth: 0,\n    output: process.stdout,\n    tty: require('tty')\n  };\n\n  if (!options) {\n    return defaultOpts;\n  }\n\n  Object.keys(defaultOpts).forEach(function (key) {\n    if (!options[key]) {\n      options[key] = defaultOpts[key];\n    }\n  });\n\n  return options;\n}\n\nfunction cliWidth(options) {\n  var opts = normalizeOpts(options);\n\n  if (opts.output.getWindowSize) {\n    return opts.output.getWindowSize()[0] || opts.defaultWidth;\n  }\n\n  if (opts.tty.getWindowSize) {\n    return opts.tty.getWindowSize()[1] || opts.defaultWidth;\n  }\n\n  if (opts.output.columns) {\n    return opts.output.columns;\n  }\n\n  if (process.env.CLI_WIDTH) {\n    var width = parseInt(process.env.CLI_WIDTH, 10);\n\n    if (!isNaN(width) && width !== 0) {\n      return width;\n    }\n  }\n\n  return opts.defaultWidth;\n};\n"]},"metadata":{},"sourceType":"script"}