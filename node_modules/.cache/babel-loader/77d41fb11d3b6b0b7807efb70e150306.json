{"ast":null,"code":"/**\n * Copyright 2015 Google Inc. All Rights Reserved.\n * Use of this source code is governed by a BSD-style\n * license that can be found in the LICENSE file or at\n * https://github.com/firebase/superstatic/blob/master/LICENSE\n */\nconst slasher = require(\"glob-slasher\");\n\nconst urlParser = require(\"fast-url-parser\");\n\nconst patterns = require(\"../utils/patterns\");\n\nconst normalizeConfig = function (config) {\n  return config || [];\n};\n\nconst matcher = function (rewrites) {\n  return function (url) {\n    for (let i = 0; i < rewrites.length; i++) {\n      if (patterns.configMatcher(url, rewrites[i])) {\n        return rewrites[i];\n      }\n    }\n\n    return undefined;\n  };\n};\n\nmodule.exports = function () {\n  return function (req, res, next) {\n    const rewrites = matcher(normalizeConfig(req.superstatic.rewrites));\n    const pathname = urlParser.parse(req.url).pathname;\n    const match = rewrites(slasher(pathname));\n\n    if (!match) {\n      return next();\n    }\n\n    res.statusCode = 200;\n    return res.superstatic.handle({\n      rewrite: match\n    }, next);\n  };\n};","map":{"version":3,"sources":["/home/dev/Documentos/Projects/github-clone/node_modules/superstatic/lib/middleware/rewrites.js"],"names":["slasher","require","urlParser","patterns","normalizeConfig","config","matcher","rewrites","url","i","length","configMatcher","undefined","module","exports","req","res","next","superstatic","pathname","parse","match","statusCode","handle","rewrite"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AAEA,MAAMA,OAAO,GAAGC,OAAO,CAAC,cAAD,CAAvB;;AACA,MAAMC,SAAS,GAAGD,OAAO,CAAC,iBAAD,CAAzB;;AACA,MAAME,QAAQ,GAAGF,OAAO,CAAC,mBAAD,CAAxB;;AAEA,MAAMG,eAAe,GAAG,UAASC,MAAT,EAAiB;AACvC,SAAOA,MAAM,IAAI,EAAjB;AACD,CAFD;;AAIA,MAAMC,OAAO,GAAG,UAASC,QAAT,EAAmB;AACjC,SAAO,UAASC,GAAT,EAAc;AACnB,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,QAAQ,CAACG,MAA7B,EAAqCD,CAAC,EAAtC,EAA0C;AACxC,UAAIN,QAAQ,CAACQ,aAAT,CAAuBH,GAAvB,EAA4BD,QAAQ,CAACE,CAAD,CAApC,CAAJ,EAA8C;AAC5C,eAAOF,QAAQ,CAACE,CAAD,CAAf;AACD;AACF;;AACD,WAAOG,SAAP;AACD,GAPD;AAQD,CATD;;AAWAC,MAAM,CAACC,OAAP,GAAiB,YAAW;AAC1B,SAAO,UAASC,GAAT,EAAcC,GAAd,EAAmBC,IAAnB,EAAyB;AAC9B,UAAMV,QAAQ,GAAGD,OAAO,CAACF,eAAe,CAACW,GAAG,CAACG,WAAJ,CAAgBX,QAAjB,CAAhB,CAAxB;AAEA,UAAMY,QAAQ,GAAGjB,SAAS,CAACkB,KAAV,CAAgBL,GAAG,CAACP,GAApB,EAAyBW,QAA1C;AACA,UAAME,KAAK,GAAGd,QAAQ,CAACP,OAAO,CAACmB,QAAD,CAAR,CAAtB;;AAEA,QAAI,CAACE,KAAL,EAAY;AACV,aAAOJ,IAAI,EAAX;AACD;;AAEDD,IAAAA,GAAG,CAACM,UAAJ,GAAiB,GAAjB;AAEA,WAAON,GAAG,CAACE,WAAJ,CAAgBK,MAAhB,CAAuB;AAAEC,MAAAA,OAAO,EAAEH;AAAX,KAAvB,EAA2CJ,IAA3C,CAAP;AACD,GAbD;AAcD,CAfD","sourcesContent":["/**\n * Copyright 2015 Google Inc. All Rights Reserved.\n * Use of this source code is governed by a BSD-style\n * license that can be found in the LICENSE file or at\n * https://github.com/firebase/superstatic/blob/master/LICENSE\n */\n\nconst slasher = require(\"glob-slasher\");\nconst urlParser = require(\"fast-url-parser\");\nconst patterns = require(\"../utils/patterns\");\n\nconst normalizeConfig = function(config) {\n  return config || [];\n};\n\nconst matcher = function(rewrites) {\n  return function(url) {\n    for (let i = 0; i < rewrites.length; i++) {\n      if (patterns.configMatcher(url, rewrites[i])) {\n        return rewrites[i];\n      }\n    }\n    return undefined;\n  };\n};\n\nmodule.exports = function() {\n  return function(req, res, next) {\n    const rewrites = matcher(normalizeConfig(req.superstatic.rewrites));\n\n    const pathname = urlParser.parse(req.url).pathname;\n    const match = rewrites(slasher(pathname));\n\n    if (!match) {\n      return next();\n    }\n\n    res.statusCode = 200;\n\n    return res.superstatic.handle({ rewrite: match }, next);\n  };\n};\n"]},"metadata":{},"sourceType":"script"}