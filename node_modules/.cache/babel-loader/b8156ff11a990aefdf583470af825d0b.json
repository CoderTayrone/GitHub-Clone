{"ast":null,"code":"module.exports = function (store) {\n  function getset(name, value) {\n    var node = vars.store;\n    var keys = name.split('.');\n    keys.slice(0, -1).forEach(function (k) {\n      if (node[k] === undefined) node[k] = {};\n      node = node[k];\n    });\n    var key = keys[keys.length - 1];\n\n    if (arguments.length == 1) {\n      return node[key];\n    } else {\n      return node[key] = value;\n    }\n  }\n\n  var vars = {\n    get: function (name) {\n      return getset(name);\n    },\n    set: function (name, value) {\n      return getset(name, value);\n    },\n    store: store || {}\n  };\n  return vars;\n};","map":{"version":3,"sources":["/home/dev/Documentos/Projects/github-clone/node_modules/binary/lib/vars.js"],"names":["module","exports","store","getset","name","value","node","vars","keys","split","slice","forEach","k","undefined","key","length","arguments","get","set"],"mappings":"AAAAA,MAAM,CAACC,OAAP,GAAiB,UAAUC,KAAV,EAAiB;AAC9B,WAASC,MAAT,CAAiBC,IAAjB,EAAuBC,KAAvB,EAA8B;AAC1B,QAAIC,IAAI,GAAGC,IAAI,CAACL,KAAhB;AACA,QAAIM,IAAI,GAAGJ,IAAI,CAACK,KAAL,CAAW,GAAX,CAAX;AACAD,IAAAA,IAAI,CAACE,KAAL,CAAW,CAAX,EAAa,CAAC,CAAd,EAAiBC,OAAjB,CAAyB,UAAUC,CAAV,EAAa;AAClC,UAAIN,IAAI,CAACM,CAAD,CAAJ,KAAYC,SAAhB,EAA2BP,IAAI,CAACM,CAAD,CAAJ,GAAU,EAAV;AAC3BN,MAAAA,IAAI,GAAGA,IAAI,CAACM,CAAD,CAAX;AACH,KAHD;AAIA,QAAIE,GAAG,GAAGN,IAAI,CAACA,IAAI,CAACO,MAAL,GAAc,CAAf,CAAd;;AACA,QAAIC,SAAS,CAACD,MAAV,IAAoB,CAAxB,EAA2B;AACvB,aAAOT,IAAI,CAACQ,GAAD,CAAX;AACH,KAFD,MAGK;AACD,aAAOR,IAAI,CAACQ,GAAD,CAAJ,GAAYT,KAAnB;AACH;AACJ;;AAED,MAAIE,IAAI,GAAG;AACPU,IAAAA,GAAG,EAAG,UAAUb,IAAV,EAAgB;AAClB,aAAOD,MAAM,CAACC,IAAD,CAAb;AACH,KAHM;AAIPc,IAAAA,GAAG,EAAG,UAAUd,IAAV,EAAgBC,KAAhB,EAAuB;AACzB,aAAOF,MAAM,CAACC,IAAD,EAAOC,KAAP,CAAb;AACH,KANM;AAOPH,IAAAA,KAAK,EAAGA,KAAK,IAAI;AAPV,GAAX;AASA,SAAOK,IAAP;AACH,CA3BD","sourcesContent":["module.exports = function (store) {\n    function getset (name, value) {\n        var node = vars.store;\n        var keys = name.split('.');\n        keys.slice(0,-1).forEach(function (k) {\n            if (node[k] === undefined) node[k] = {};\n            node = node[k]\n        });\n        var key = keys[keys.length - 1];\n        if (arguments.length == 1) {\n            return node[key];\n        }\n        else {\n            return node[key] = value;\n        }\n    }\n    \n    var vars = {\n        get : function (name) {\n            return getset(name);\n        },\n        set : function (name, value) {\n            return getset(name, value);\n        },\n        store : store || {},\n    };\n    return vars;\n};\n"]},"metadata":{},"sourceType":"script"}