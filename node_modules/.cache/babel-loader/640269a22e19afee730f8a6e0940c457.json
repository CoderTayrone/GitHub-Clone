{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.release = void 0;\n\nconst queue_1 = require(\"../../throttler/queue\");\n\nconst deploymentPlanner_1 = require(\"./deploymentPlanner\");\n\nconst functionsConfig_1 = require(\"../../functionsConfig\");\n\nconst env_1 = require(\"../../functions/env\");\n\nconst prompts_1 = require(\"./prompts\");\n\nconst deploymentTimer_1 = require(\"./deploymentTimer\");\n\nconst errorHandler_1 = require(\"./errorHandler\");\n\nconst previews_1 = require(\"../../previews\");\n\nconst backend = require(\"./backend\");\n\nconst containerCleaner = require(\"./containerCleaner\");\n\nconst helper = require(\"./functionsDeployHelper\");\n\nconst tasks = require(\"./tasks\");\n\nconst utils = require(\"../../utils\");\n\nconst track_1 = require(\"../../track\");\n\nasync function release(context, options, payload) {\n  if (!options.config.has(\"functions\")) {\n    return;\n  }\n\n  const projectId = context.projectId;\n  const sourceUrl = context.uploadUrl;\n  const functionsSource = options.config.get(\"functions.source\");\n  const appEngineLocation = functionsConfig_1.getAppEngineLocation(context.firebaseConfig);\n  const timer = new deploymentTimer_1.DeploymentTimer();\n  const errorHandler = new errorHandler_1.ErrorHandler();\n  const fullDeployment = deploymentPlanner_1.createDeploymentPlan(payload.functions.backend, await backend.existingBackend(context), {\n    filters: context.filters,\n    overwriteEnvs: previews_1.previews.dotenv && env_1.hasUserEnvs({\n      functionsSource: options.config.path(functionsSource),\n      projectId,\n      projectAlias: options.projectAlias\n    })\n  });\n  const cloudFunctionsQueue = new queue_1.default({\n    retries: 30,\n    backoff: 20000,\n    concurrency: 40,\n    maxBackoff: 40000,\n    handler: tasks.functionsDeploymentHandler(timer, errorHandler)\n  });\n  const schedulerQueue = new queue_1.default({\n    handler: tasks.schedulerDeploymentHandler(errorHandler)\n  });\n  const pubSubQueue = new queue_1.default({\n    handler: tasks.schedulerDeploymentHandler(errorHandler)\n  });\n  const regionPromises = [];\n  const taskParams = {\n    projectId,\n    sourceUrl,\n    storage: context.storage,\n    errorHandler\n  };\n  const allFnsToDelete = Object.values(fullDeployment.regionalDeployments).reduce((accum, region) => [...accum, ...region.functionsToDelete], []);\n  const shouldDeleteFunctions = await prompts_1.promptForFunctionDeletion(allFnsToDelete, options.force, options.nonInteractive);\n\n  if (!shouldDeleteFunctions) {\n    fullDeployment.schedulesToDelete = fullDeployment.schedulesToDelete.filter(schedule => {\n      return !allFnsToDelete.find(backend.sameFunctionName(schedule.targetService));\n    });\n    fullDeployment.topicsToDelete = fullDeployment.topicsToDelete.filter(topic => {\n      return !allFnsToDelete.find(backend.sameFunctionName(topic.targetService));\n    });\n\n    for (const regionalDeployment of Object.values(fullDeployment.regionalDeployments)) {\n      regionalDeployment.functionsToDelete = [];\n    }\n  }\n\n  for (const [region, deployment] of Object.entries(fullDeployment.regionalDeployments)) {\n    regionPromises.push(tasks.runRegionalFunctionDeployment(taskParams, region, deployment, cloudFunctionsQueue));\n  }\n\n  for (const schedule of fullDeployment.schedulesToUpsert) {\n    const task = tasks.upsertScheduleTask(taskParams, schedule, appEngineLocation);\n    void schedulerQueue.run(task);\n  }\n\n  for (const schedule of fullDeployment.schedulesToDelete) {\n    const task = tasks.deleteScheduleTask(taskParams, schedule, appEngineLocation);\n    void schedulerQueue.run(task);\n  }\n\n  for (const topic of fullDeployment.topicsToDelete) {\n    const task = tasks.deleteTopicTask(taskParams, topic);\n    void pubSubQueue.run(task);\n  }\n\n  const queuePromises = [cloudFunctionsQueue.wait(), schedulerQueue.wait(), pubSubQueue.wait()];\n  cloudFunctionsQueue.process();\n  schedulerQueue.process();\n  pubSubQueue.process();\n  schedulerQueue.close();\n  pubSubQueue.close();\n  await Promise.all(regionPromises);\n  cloudFunctionsQueue.close();\n\n  try {\n    await Promise.all(queuePromises);\n  } catch (err) {\n    utils.reject(\"Exceeded maximum retries while deploying functions. \" + \"If you are deploying a large number of functions, \" + \"please deploy your functions in batches by using the --only flag, \" + \"and wait a few minutes before deploying again. \" + \"Go to https://firebase.google.com/docs/cli/#partial_deploys to learn more.\", {\n      original: err\n    });\n  }\n\n  const functions = payload.functions.backend.cloudFunctions;\n  const gcfv1 = functions.find(fn => fn.platform === \"gcfv1\");\n  const gcfv2 = functions.find(fn => fn.platform === \"gcfv2\");\n  const tag = gcfv1 && gcfv2 ? \"v1+v2\" : gcfv1 ? \"v1\" : \"v2\";\n  track_1.track(\"functions_codebase_deploy\", tag, functions.length);\n  helper.logAndTrackDeployStats(cloudFunctionsQueue, errorHandler);\n  await containerCleaner.cleanupBuildImages(payload.functions.backend.cloudFunctions);\n  await helper.printTriggerUrls(context, payload.functions.backend);\n  errorHandler.printWarnings();\n  errorHandler.printErrors();\n}\n\nexports.release = release;","map":{"version":3,"sources":["/home/dev/Documentos/Projects/github-clone/node_modules/firebase-tools/lib/deploy/functions/release.js"],"names":["Object","defineProperty","exports","value","release","queue_1","require","deploymentPlanner_1","functionsConfig_1","env_1","prompts_1","deploymentTimer_1","errorHandler_1","previews_1","backend","containerCleaner","helper","tasks","utils","track_1","context","options","payload","config","has","projectId","sourceUrl","uploadUrl","functionsSource","get","appEngineLocation","getAppEngineLocation","firebaseConfig","timer","DeploymentTimer","errorHandler","ErrorHandler","fullDeployment","createDeploymentPlan","functions","existingBackend","filters","overwriteEnvs","previews","dotenv","hasUserEnvs","path","projectAlias","cloudFunctionsQueue","default","retries","backoff","concurrency","maxBackoff","handler","functionsDeploymentHandler","schedulerQueue","schedulerDeploymentHandler","pubSubQueue","regionPromises","taskParams","storage","allFnsToDelete","values","regionalDeployments","reduce","accum","region","functionsToDelete","shouldDeleteFunctions","promptForFunctionDeletion","force","nonInteractive","schedulesToDelete","filter","schedule","find","sameFunctionName","targetService","topicsToDelete","topic","regionalDeployment","deployment","entries","push","runRegionalFunctionDeployment","schedulesToUpsert","task","upsertScheduleTask","run","deleteScheduleTask","deleteTopicTask","queuePromises","wait","process","close","Promise","all","err","reject","original","cloudFunctions","gcfv1","fn","platform","gcfv2","tag","track","length","logAndTrackDeployStats","cleanupBuildImages","printTriggerUrls","printWarnings","printErrors"],"mappings":"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","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.release = void 0;\nconst queue_1 = require(\"../../throttler/queue\");\nconst deploymentPlanner_1 = require(\"./deploymentPlanner\");\nconst functionsConfig_1 = require(\"../../functionsConfig\");\nconst env_1 = require(\"../../functions/env\");\nconst prompts_1 = require(\"./prompts\");\nconst deploymentTimer_1 = require(\"./deploymentTimer\");\nconst errorHandler_1 = require(\"./errorHandler\");\nconst previews_1 = require(\"../../previews\");\nconst backend = require(\"./backend\");\nconst containerCleaner = require(\"./containerCleaner\");\nconst helper = require(\"./functionsDeployHelper\");\nconst tasks = require(\"./tasks\");\nconst utils = require(\"../../utils\");\nconst track_1 = require(\"../../track\");\nasync function release(context, options, payload) {\n    if (!options.config.has(\"functions\")) {\n        return;\n    }\n    const projectId = context.projectId;\n    const sourceUrl = context.uploadUrl;\n    const functionsSource = options.config.get(\"functions.source\");\n    const appEngineLocation = functionsConfig_1.getAppEngineLocation(context.firebaseConfig);\n    const timer = new deploymentTimer_1.DeploymentTimer();\n    const errorHandler = new errorHandler_1.ErrorHandler();\n    const fullDeployment = deploymentPlanner_1.createDeploymentPlan(payload.functions.backend, await backend.existingBackend(context), {\n        filters: context.filters,\n        overwriteEnvs: previews_1.previews.dotenv &&\n            env_1.hasUserEnvs({\n                functionsSource: options.config.path(functionsSource),\n                projectId,\n                projectAlias: options.projectAlias,\n            }),\n    });\n    const cloudFunctionsQueue = new queue_1.default({\n        retries: 30,\n        backoff: 20000,\n        concurrency: 40,\n        maxBackoff: 40000,\n        handler: tasks.functionsDeploymentHandler(timer, errorHandler),\n    });\n    const schedulerQueue = new queue_1.default({\n        handler: tasks.schedulerDeploymentHandler(errorHandler),\n    });\n    const pubSubQueue = new queue_1.default({\n        handler: tasks.schedulerDeploymentHandler(errorHandler),\n    });\n    const regionPromises = [];\n    const taskParams = {\n        projectId,\n        sourceUrl,\n        storage: context.storage,\n        errorHandler,\n    };\n    const allFnsToDelete = Object.values(fullDeployment.regionalDeployments).reduce((accum, region) => [...accum, ...region.functionsToDelete], []);\n    const shouldDeleteFunctions = await prompts_1.promptForFunctionDeletion(allFnsToDelete, options.force, options.nonInteractive);\n    if (!shouldDeleteFunctions) {\n        fullDeployment.schedulesToDelete = fullDeployment.schedulesToDelete.filter((schedule) => {\n            return !allFnsToDelete.find(backend.sameFunctionName(schedule.targetService));\n        });\n        fullDeployment.topicsToDelete = fullDeployment.topicsToDelete.filter((topic) => {\n            return !allFnsToDelete.find(backend.sameFunctionName(topic.targetService));\n        });\n        for (const regionalDeployment of Object.values(fullDeployment.regionalDeployments)) {\n            regionalDeployment.functionsToDelete = [];\n        }\n    }\n    for (const [region, deployment] of Object.entries(fullDeployment.regionalDeployments)) {\n        regionPromises.push(tasks.runRegionalFunctionDeployment(taskParams, region, deployment, cloudFunctionsQueue));\n    }\n    for (const schedule of fullDeployment.schedulesToUpsert) {\n        const task = tasks.upsertScheduleTask(taskParams, schedule, appEngineLocation);\n        void schedulerQueue.run(task);\n    }\n    for (const schedule of fullDeployment.schedulesToDelete) {\n        const task = tasks.deleteScheduleTask(taskParams, schedule, appEngineLocation);\n        void schedulerQueue.run(task);\n    }\n    for (const topic of fullDeployment.topicsToDelete) {\n        const task = tasks.deleteTopicTask(taskParams, topic);\n        void pubSubQueue.run(task);\n    }\n    const queuePromises = [cloudFunctionsQueue.wait(), schedulerQueue.wait(), pubSubQueue.wait()];\n    cloudFunctionsQueue.process();\n    schedulerQueue.process();\n    pubSubQueue.process();\n    schedulerQueue.close();\n    pubSubQueue.close();\n    await Promise.all(regionPromises);\n    cloudFunctionsQueue.close();\n    try {\n        await Promise.all(queuePromises);\n    }\n    catch (err) {\n        utils.reject(\"Exceeded maximum retries while deploying functions. \" +\n            \"If you are deploying a large number of functions, \" +\n            \"please deploy your functions in batches by using the --only flag, \" +\n            \"and wait a few minutes before deploying again. \" +\n            \"Go to https://firebase.google.com/docs/cli/#partial_deploys to learn more.\", {\n            original: err,\n        });\n    }\n    const functions = payload.functions.backend.cloudFunctions;\n    const gcfv1 = functions.find((fn) => fn.platform === \"gcfv1\");\n    const gcfv2 = functions.find((fn) => fn.platform === \"gcfv2\");\n    const tag = gcfv1 && gcfv2 ? \"v1+v2\" : gcfv1 ? \"v1\" : \"v2\";\n    track_1.track(\"functions_codebase_deploy\", tag, functions.length);\n    helper.logAndTrackDeployStats(cloudFunctionsQueue, errorHandler);\n    await containerCleaner.cleanupBuildImages(payload.functions.backend.cloudFunctions);\n    await helper.printTriggerUrls(context, payload.functions.backend);\n    errorHandler.printWarnings();\n    errorHandler.printErrors();\n}\nexports.release = release;\n"]},"metadata":{},"sourceType":"script"}