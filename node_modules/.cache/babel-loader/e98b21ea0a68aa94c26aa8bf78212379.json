{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nconst Operation_1 = __importDefault(require(\"./Operation\"));\n\nconst Parameter_1 = __importDefault(require(\"./Parameter\"));\n\nconst extensions_1 = require(\"./extensions\"); // CONNECT not included, as it is not valid for OpenAPI 3.0.1.\n\n\nconst HTTP_METHODS = ['GET', 'HEAD', 'POST', 'PUT', 'DELETE', 'OPTIONS', 'TRACE', 'PATCH'];\n\nclass Path {\n  constructor(context, oaPath, exegesisController) {\n    this.context = context;\n\n    if (oaPath.$ref) {\n      this.oaPath = context.resolveRef(oaPath.$ref);\n    } else {\n      this.oaPath = oaPath;\n    }\n\n    const parameters = (oaPath.parameters || []).map((p, i) => new Parameter_1.default(context.childContext(['parameters', '' + i]), p));\n    exegesisController = oaPath[extensions_1.EXEGESIS_CONTROLLER] || exegesisController;\n    this._operations = HTTP_METHODS.map(method => method.toLowerCase()).filter(method => oaPath[method]).reduce((result, method) => {\n      result[method] = new Operation_1.default(context.childContext(method), oaPath[method], oaPath, method, exegesisController, parameters);\n      return result;\n    }, Object.create(null));\n  }\n\n  getOperation(method) {\n    return this._operations[method.toLowerCase()];\n  }\n\n}\n\nexports.default = Path;","map":{"version":3,"sources":["../../src/oas3/Path.ts"],"names":[],"mappings":";;;;;;;;;;;;AAAA,MAAA,WAAA,GAAA,eAAA,CAAA,OAAA,CAAA,aAAA,CAAA,CAAA;;AAIA,MAAA,WAAA,GAAA,eAAA,CAAA,OAAA,CAAA,aAAA,CAAA,CAAA;;AACA,MAAA,YAAA,GAAA,OAAA,CAAA,cAAA,CAAA,C,CAEA;;;AACA,MAAM,YAAY,GAAG,CAAC,KAAD,EAAQ,MAAR,EAAgB,MAAhB,EAAwB,KAAxB,EAA+B,QAA/B,EAAyC,SAAzC,EAAoD,OAApD,EAA6D,OAA7D,CAArB;;AAMA,MAAqB,IAArB,CAAyB;AAKrB,EAAA,WAAA,CACI,OADJ,EAEI,MAFJ,EAGI,kBAHJ,EAG0C;AAEtC,SAAK,OAAL,GAAe,OAAf;;AACA,QAAI,MAAM,CAAC,IAAX,EAAiB;AACb,WAAK,MAAL,GAAc,OAAO,CAAC,UAAR,CAAmB,MAAM,CAAC,IAA1B,CAAd;AACH,KAFD,MAEO;AACH,WAAK,MAAL,GAAc,MAAd;AACH;;AACD,UAAM,UAAU,GAAG,CAAC,MAAM,CAAC,UAAP,IAAqB,EAAtB,EAA0B,GAA1B,CACf,CAAC,CAAD,EAAI,CAAJ,KAAU,IAAI,WAAA,CAAA,OAAJ,CAAc,OAAO,CAAC,YAAR,CAAqB,CAAC,YAAD,EAAe,KAAK,CAApB,CAArB,CAAd,EAA4D,CAA5D,CADK,CAAnB;AAIA,IAAA,kBAAkB,GAAG,MAAM,CAAC,YAAA,CAAA,mBAAD,CAAN,IAA+B,kBAApD;AACA,SAAK,WAAL,GAAmB,YAAY,CAAC,GAAb,CAAkB,MAAD,IAAY,MAAM,CAAC,WAAP,EAA7B,EACd,MADc,CACN,MAAD,IAAY,MAAM,CAAC,MAAD,CADX,EAEd,MAFc,CAEP,CAAC,MAAD,EAAwB,MAAxB,KAA0C;AAC9C,MAAA,MAAM,CAAC,MAAD,CAAN,GAAiB,IAAI,WAAA,CAAA,OAAJ,CACb,OAAO,CAAC,YAAR,CAAqB,MAArB,CADa,EAEb,MAAM,CAAC,MAAD,CAFO,EAGb,MAHa,EAIb,MAJa,EAKb,kBALa,EAMb,UANa,CAAjB;AAQA,aAAO,MAAP;AACH,KAZc,EAYZ,MAAM,CAAC,MAAP,CAAc,IAAd,CAZY,CAAnB;AAaH;;AAED,EAAA,YAAY,CAAC,MAAD,EAAe;AACvB,WAAO,KAAK,WAAL,CAAiB,MAAM,CAAC,WAAP,EAAjB,CAAP;AACH;;AAtCoB;;AAAzB,OAAA,CAAA,OAAA,GAAA,IAAA","sourceRoot":"","sourcesContent":["\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst Operation_1 = __importDefault(require(\"./Operation\"));\nconst Parameter_1 = __importDefault(require(\"./Parameter\"));\nconst extensions_1 = require(\"./extensions\");\n// CONNECT not included, as it is not valid for OpenAPI 3.0.1.\nconst HTTP_METHODS = ['GET', 'HEAD', 'POST', 'PUT', 'DELETE', 'OPTIONS', 'TRACE', 'PATCH'];\nclass Path {\n    constructor(context, oaPath, exegesisController) {\n        this.context = context;\n        if (oaPath.$ref) {\n            this.oaPath = context.resolveRef(oaPath.$ref);\n        }\n        else {\n            this.oaPath = oaPath;\n        }\n        const parameters = (oaPath.parameters || []).map((p, i) => new Parameter_1.default(context.childContext(['parameters', '' + i]), p));\n        exegesisController = oaPath[extensions_1.EXEGESIS_CONTROLLER] || exegesisController;\n        this._operations = HTTP_METHODS.map((method) => method.toLowerCase())\n            .filter((method) => oaPath[method])\n            .reduce((result, method) => {\n            result[method] = new Operation_1.default(context.childContext(method), oaPath[method], oaPath, method, exegesisController, parameters);\n            return result;\n        }, Object.create(null));\n    }\n    getOperation(method) {\n        return this._operations[method.toLowerCase()];\n    }\n}\nexports.default = Path;\n//# sourceMappingURL=Path.js.map"]},"metadata":{},"sourceType":"script"}