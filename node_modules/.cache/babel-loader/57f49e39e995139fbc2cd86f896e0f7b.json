{"ast":null,"code":"\"use strict\";\n\nvar ua = require(\"universal-analytics\");\n\nvar _ = require(\"lodash\");\n\nvar {\n  configstore\n} = require(\"./configstore\");\n\nvar pkg = require(\"../package.json\");\n\nvar uuid = require(\"uuid\");\n\nconst {\n  logger\n} = require(\"./logger\");\n\nvar anonId = configstore.get(\"analytics-uuid\");\n\nif (!anonId) {\n  anonId = uuid.v4();\n  configstore.set(\"analytics-uuid\", anonId);\n}\n\nvar visitor = ua(process.env.FIREBASE_ANALYTICS_UA || \"UA-29174744-3\", anonId, {\n  strictCidFormat: false,\n  https: true\n});\nvisitor.set(\"cd1\", process.platform);\nvisitor.set(\"cd2\", process.version);\nvisitor.set(\"cd3\", process.env.FIREPIT_VERSION || \"none\");\n\nfunction track(action, label, duration) {\n  return new Promise(function (resolve) {\n    if (!_.isString(action) || !_.isString(label)) {\n      logger.debug(\"track received non-string arguments:\", action, label);\n      resolve();\n    }\n\n    duration = duration || 0;\n\n    if (configstore.get(\"tokens\") && configstore.get(\"usage\")) {\n      visitor.event(\"Firebase CLI \" + pkg.version, action, label, duration).send(function () {\n        resolve();\n      });\n    } else {\n      resolve();\n    }\n  });\n}\n\ntrack.track = track;\nmodule.exports = track;","map":{"version":3,"sources":["/home/dev/Documentos/Projects/github-clone/node_modules/firebase-tools/lib/track.js"],"names":["ua","require","_","configstore","pkg","uuid","logger","anonId","get","v4","set","visitor","process","env","FIREBASE_ANALYTICS_UA","strictCidFormat","https","platform","version","FIREPIT_VERSION","track","action","label","duration","Promise","resolve","isString","debug","event","send","module","exports"],"mappings":"AAAA;;AACA,IAAIA,EAAE,GAAGC,OAAO,CAAC,qBAAD,CAAhB;;AACA,IAAIC,CAAC,GAAGD,OAAO,CAAC,QAAD,CAAf;;AACA,IAAI;AAAEE,EAAAA;AAAF,IAAkBF,OAAO,CAAC,eAAD,CAA7B;;AACA,IAAIG,GAAG,GAAGH,OAAO,CAAC,iBAAD,CAAjB;;AACA,IAAII,IAAI,GAAGJ,OAAO,CAAC,MAAD,CAAlB;;AACA,MAAM;AAAEK,EAAAA;AAAF,IAAaL,OAAO,CAAC,UAAD,CAA1B;;AACA,IAAIM,MAAM,GAAGJ,WAAW,CAACK,GAAZ,CAAgB,gBAAhB,CAAb;;AACA,IAAI,CAACD,MAAL,EAAa;AACTA,EAAAA,MAAM,GAAGF,IAAI,CAACI,EAAL,EAAT;AACAN,EAAAA,WAAW,CAACO,GAAZ,CAAgB,gBAAhB,EAAkCH,MAAlC;AACH;;AACD,IAAII,OAAO,GAAGX,EAAE,CAACY,OAAO,CAACC,GAAR,CAAYC,qBAAZ,IAAqC,eAAtC,EAAuDP,MAAvD,EAA+D;AAC3EQ,EAAAA,eAAe,EAAE,KAD0D;AAE3EC,EAAAA,KAAK,EAAE;AAFoE,CAA/D,CAAhB;AAIAL,OAAO,CAACD,GAAR,CAAY,KAAZ,EAAmBE,OAAO,CAACK,QAA3B;AACAN,OAAO,CAACD,GAAR,CAAY,KAAZ,EAAmBE,OAAO,CAACM,OAA3B;AACAP,OAAO,CAACD,GAAR,CAAY,KAAZ,EAAmBE,OAAO,CAACC,GAAR,CAAYM,eAAZ,IAA+B,MAAlD;;AACA,SAASC,KAAT,CAAeC,MAAf,EAAuBC,KAAvB,EAA8BC,QAA9B,EAAwC;AACpC,SAAO,IAAIC,OAAJ,CAAY,UAAUC,OAAV,EAAmB;AAClC,QAAI,CAACvB,CAAC,CAACwB,QAAF,CAAWL,MAAX,CAAD,IAAuB,CAACnB,CAAC,CAACwB,QAAF,CAAWJ,KAAX,CAA5B,EAA+C;AAC3ChB,MAAAA,MAAM,CAACqB,KAAP,CAAa,sCAAb,EAAqDN,MAArD,EAA6DC,KAA7D;AACAG,MAAAA,OAAO;AACV;;AACDF,IAAAA,QAAQ,GAAGA,QAAQ,IAAI,CAAvB;;AACA,QAAIpB,WAAW,CAACK,GAAZ,CAAgB,QAAhB,KAA6BL,WAAW,CAACK,GAAZ,CAAgB,OAAhB,CAAjC,EAA2D;AACvDG,MAAAA,OAAO,CAACiB,KAAR,CAAc,kBAAkBxB,GAAG,CAACc,OAApC,EAA6CG,MAA7C,EAAqDC,KAArD,EAA4DC,QAA5D,EAAsEM,IAAtE,CAA2E,YAAY;AACnFJ,QAAAA,OAAO;AACV,OAFD;AAGH,KAJD,MAKK;AACDA,MAAAA,OAAO;AACV;AACJ,GAdM,CAAP;AAeH;;AACDL,KAAK,CAACA,KAAN,GAAcA,KAAd;AACAU,MAAM,CAACC,OAAP,GAAiBX,KAAjB","sourcesContent":["\"use strict\";\nvar ua = require(\"universal-analytics\");\nvar _ = require(\"lodash\");\nvar { configstore } = require(\"./configstore\");\nvar pkg = require(\"../package.json\");\nvar uuid = require(\"uuid\");\nconst { logger } = require(\"./logger\");\nvar anonId = configstore.get(\"analytics-uuid\");\nif (!anonId) {\n    anonId = uuid.v4();\n    configstore.set(\"analytics-uuid\", anonId);\n}\nvar visitor = ua(process.env.FIREBASE_ANALYTICS_UA || \"UA-29174744-3\", anonId, {\n    strictCidFormat: false,\n    https: true,\n});\nvisitor.set(\"cd1\", process.platform);\nvisitor.set(\"cd2\", process.version);\nvisitor.set(\"cd3\", process.env.FIREPIT_VERSION || \"none\");\nfunction track(action, label, duration) {\n    return new Promise(function (resolve) {\n        if (!_.isString(action) || !_.isString(label)) {\n            logger.debug(\"track received non-string arguments:\", action, label);\n            resolve();\n        }\n        duration = duration || 0;\n        if (configstore.get(\"tokens\") && configstore.get(\"usage\")) {\n            visitor.event(\"Firebase CLI \" + pkg.version, action, label, duration).send(function () {\n                resolve();\n            });\n        }\n        else {\n            resolve();\n        }\n    });\n}\ntrack.track = track;\nmodule.exports = track;\n"]},"metadata":{},"sourceType":"script"}