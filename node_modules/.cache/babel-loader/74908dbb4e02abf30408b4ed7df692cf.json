{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nconst cli_color_1 = require(\"cli-color\");\n\nconst utils_1 = require(\"../utils\");\n\nconst command_1 = require(\"../command\");\n\nconst api_1 = require(\"../hosting/api\");\n\nconst prompt_1 = require(\"../prompt\");\n\nconst error_1 = require(\"../error\");\n\nconst requirePermissions_1 = require(\"../requirePermissions\");\n\nconst projectUtils_1 = require(\"../projectUtils\");\n\nconst logger_1 = require(\"../logger\");\n\nconst LOG_TAG = \"hosting:sites\";\nexports.default = new command_1.Command(\"hosting:sites:create [siteId]\").description(\"create a Firebase Hosting site\").option(\"--app <appId>\", \"specify an existing Firebase Web App ID\").before(requirePermissions_1.requirePermissions, [\"firebasehosting.sites.update\"]).action(async (siteId, options) => {\n  const projectId = projectUtils_1.needProjectId(options);\n  const appId = options.app;\n\n  if (!siteId) {\n    if (options.nonInteractive) {\n      throw new error_1.FirebaseError(`\"siteId\" argument must be provided in a non-interactive environment`);\n    }\n\n    siteId = await prompt_1.promptOnce({\n      type: \"input\",\n      message: \"Please provide an unique, URL-friendly id for the site (<id>.web.app):\",\n      validate: s => s.length > 0\n    });\n  }\n\n  if (!siteId) {\n    throw new error_1.FirebaseError(`\"siteId\" must not be empty`);\n  }\n\n  let site;\n\n  try {\n    site = await api_1.createSite(projectId, siteId, appId);\n  } catch (e) {\n    if (e.status === 409) {\n      throw new error_1.FirebaseError(`Site ${cli_color_1.bold(siteId)} already exists in project ${cli_color_1.bold(projectId)}.`, {\n        original: e\n      });\n    }\n\n    throw e;\n  }\n\n  logger_1.logger.info();\n  utils_1.logLabeledSuccess(LOG_TAG, `Site ${cli_color_1.bold(siteId)} has been created in project ${cli_color_1.bold(projectId)}.`);\n\n  if (appId) {\n    utils_1.logLabeledSuccess(LOG_TAG, `Site ${cli_color_1.bold(siteId)} has been linked to web app ${cli_color_1.bold(appId)}`);\n  }\n\n  utils_1.logLabeledSuccess(LOG_TAG, `Site URL: ${site.defaultUrl}`);\n  logger_1.logger.info();\n  logger_1.logger.info(`To deploy to this site, follow the guide at https://firebase.google.com/docs/hosting/multisites.`);\n  return site;\n});","map":{"version":3,"sources":["/home/dev/Documentos/Projects/github-clone/node_modules/firebase-tools/lib/commands/hosting-sites-create.js"],"names":["Object","defineProperty","exports","value","cli_color_1","require","utils_1","command_1","api_1","prompt_1","error_1","requirePermissions_1","projectUtils_1","logger_1","LOG_TAG","default","Command","description","option","before","requirePermissions","action","siteId","options","projectId","needProjectId","appId","app","nonInteractive","FirebaseError","promptOnce","type","message","validate","s","length","site","createSite","e","status","bold","original","logger","info","logLabeledSuccess","defaultUrl"],"mappings":"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","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst cli_color_1 = require(\"cli-color\");\nconst utils_1 = require(\"../utils\");\nconst command_1 = require(\"../command\");\nconst api_1 = require(\"../hosting/api\");\nconst prompt_1 = require(\"../prompt\");\nconst error_1 = require(\"../error\");\nconst requirePermissions_1 = require(\"../requirePermissions\");\nconst projectUtils_1 = require(\"../projectUtils\");\nconst logger_1 = require(\"../logger\");\nconst LOG_TAG = \"hosting:sites\";\nexports.default = new command_1.Command(\"hosting:sites:create [siteId]\")\n    .description(\"create a Firebase Hosting site\")\n    .option(\"--app <appId>\", \"specify an existing Firebase Web App ID\")\n    .before(requirePermissions_1.requirePermissions, [\"firebasehosting.sites.update\"])\n    .action(async (siteId, options) => {\n    const projectId = projectUtils_1.needProjectId(options);\n    const appId = options.app;\n    if (!siteId) {\n        if (options.nonInteractive) {\n            throw new error_1.FirebaseError(`\"siteId\" argument must be provided in a non-interactive environment`);\n        }\n        siteId = await prompt_1.promptOnce({\n            type: \"input\",\n            message: \"Please provide an unique, URL-friendly id for the site (<id>.web.app):\",\n            validate: (s) => s.length > 0,\n        });\n    }\n    if (!siteId) {\n        throw new error_1.FirebaseError(`\"siteId\" must not be empty`);\n    }\n    let site;\n    try {\n        site = await api_1.createSite(projectId, siteId, appId);\n    }\n    catch (e) {\n        if (e.status === 409) {\n            throw new error_1.FirebaseError(`Site ${cli_color_1.bold(siteId)} already exists in project ${cli_color_1.bold(projectId)}.`, { original: e });\n        }\n        throw e;\n    }\n    logger_1.logger.info();\n    utils_1.logLabeledSuccess(LOG_TAG, `Site ${cli_color_1.bold(siteId)} has been created in project ${cli_color_1.bold(projectId)}.`);\n    if (appId) {\n        utils_1.logLabeledSuccess(LOG_TAG, `Site ${cli_color_1.bold(siteId)} has been linked to web app ${cli_color_1.bold(appId)}`);\n    }\n    utils_1.logLabeledSuccess(LOG_TAG, `Site URL: ${site.defaultUrl}`);\n    logger_1.logger.info();\n    logger_1.logger.info(`To deploy to this site, follow the guide at https://firebase.google.com/docs/hosting/multisites.`);\n    return site;\n});\n"]},"metadata":{},"sourceType":"script"}