{"ast":null,"code":"// A thing that emits \"entry\" events with Reader objects\n// Pausing it causes it to stop emitting entry events, and also\n// pauses the current entry if there is one.\nmodule.exports = DirReader;\n\nvar fs = require('graceful-fs');\n\nvar inherits = require('inherits');\n\nvar path = require('path');\n\nvar Reader = require('./reader.js');\n\nvar assert = require('assert').ok;\n\ninherits(DirReader, Reader);\n\nfunction DirReader(props) {\n  var self = this;\n\n  if (!(self instanceof DirReader)) {\n    throw new Error('DirReader must be called as constructor.');\n  } // should already be established as a Directory type\n\n\n  if (props.type !== 'Directory' || !props.Directory) {\n    throw new Error('Non-directory type ' + props.type);\n  }\n\n  self.entries = null;\n  self._index = -1;\n  self._paused = false;\n  self._length = -1;\n\n  if (props.sort) {\n    this.sort = props.sort;\n  }\n\n  Reader.call(this, props);\n}\n\nDirReader.prototype._getEntries = function () {\n  var self = this; // race condition.  might pause() before calling _getEntries,\n  // and then resume, and try to get them a second time.\n\n  if (self._gotEntries) return;\n  self._gotEntries = true;\n  fs.readdir(self._path, function (er, entries) {\n    if (er) return self.error(er);\n    self.entries = entries;\n    self.emit('entries', entries);\n    if (self._paused) self.once('resume', processEntries);else processEntries();\n\n    function processEntries() {\n      self._length = self.entries.length;\n\n      if (typeof self.sort === 'function') {\n        self.entries = self.entries.sort(self.sort.bind(self));\n      }\n\n      self._read();\n    }\n  });\n}; // start walking the dir, and emit an \"entry\" event for each one.\n\n\nDirReader.prototype._read = function () {\n  var self = this;\n  if (!self.entries) return self._getEntries();\n\n  if (self._paused || self._currentEntry || self._aborted) {\n    // console.error('DR paused=%j, current=%j, aborted=%j', self._paused, !!self._currentEntry, self._aborted)\n    return;\n  }\n\n  self._index++;\n\n  if (self._index >= self.entries.length) {\n    if (!self._ended) {\n      self._ended = true;\n      self.emit('end');\n      self.emit('close');\n    }\n\n    return;\n  } // ok, handle this one, then.\n  // save creating a proxy, by stat'ing the thing now.\n\n\n  var p = path.resolve(self._path, self.entries[self._index]);\n  assert(p !== self._path);\n  assert(self.entries[self._index]); // set this to prevent trying to _read() again in the stat time.\n\n  self._currentEntry = p;\n  fs[self.props.follow ? 'stat' : 'lstat'](p, function (er, stat) {\n    if (er) return self.error(er);\n    var who = self._proxy || self;\n    stat.path = p;\n    stat.basename = path.basename(p);\n    stat.dirname = path.dirname(p);\n    var childProps = self.getChildProps.call(who, stat);\n    childProps.path = p;\n    childProps.basename = path.basename(p);\n    childProps.dirname = path.dirname(p);\n    var entry = Reader(childProps, stat); // console.error(\"DR Entry\", p, stat.size)\n\n    self._currentEntry = entry; // \"entry\" events are for direct entries in a specific dir.\n    // \"child\" events are for any and all children at all levels.\n    // This nomenclature is not completely final.\n\n    entry.on('pause', function (who) {\n      if (!self._paused && !entry._disowned) {\n        self.pause(who);\n      }\n    });\n    entry.on('resume', function (who) {\n      if (self._paused && !entry._disowned) {\n        self.resume(who);\n      }\n    });\n    entry.on('stat', function (props) {\n      self.emit('_entryStat', entry, props);\n      if (entry._aborted) return;\n\n      if (entry._paused) {\n        entry.once('resume', function () {\n          self.emit('entryStat', entry, props);\n        });\n      } else self.emit('entryStat', entry, props);\n    });\n    entry.on('ready', function EMITCHILD() {\n      // console.error(\"DR emit child\", entry._path)\n      if (self._paused) {\n        // console.error(\"  DR emit child - try again later\")\n        // pause the child, and emit the \"entry\" event once we drain.\n        // console.error(\"DR pausing child entry\")\n        entry.pause(self);\n        return self.once('resume', EMITCHILD);\n      } // skip over sockets.  they can't be piped around properly,\n      // so there's really no sense even acknowledging them.\n      // if someone really wants to see them, they can listen to\n      // the \"socket\" events.\n\n\n      if (entry.type === 'Socket') {\n        self.emit('socket', entry);\n      } else {\n        self.emitEntry(entry);\n      }\n    });\n    var ended = false;\n    entry.on('close', onend);\n    entry.on('disown', onend);\n\n    function onend() {\n      if (ended) return;\n      ended = true;\n      self.emit('childEnd', entry);\n      self.emit('entryEnd', entry);\n      self._currentEntry = null;\n\n      if (!self._paused) {\n        self._read();\n      }\n    } // XXX Remove this.  Works in node as of 0.6.2 or so.\n    // Long filenames should not break stuff.\n\n\n    entry.on('error', function (er) {\n      if (entry._swallowErrors) {\n        self.warn(er);\n        entry.emit('end');\n        entry.emit('close');\n      } else {\n        self.emit('error', er);\n      }\n    }) // proxy up some events.\n    ;\n    ['child', 'childEnd', 'warn'].forEach(function (ev) {\n      entry.on(ev, self.emit.bind(self, ev));\n    });\n  });\n};\n\nDirReader.prototype.disown = function (entry) {\n  entry.emit('beforeDisown');\n  entry._disowned = true;\n  entry.parent = entry.root = null;\n\n  if (entry === this._currentEntry) {\n    this._currentEntry = null;\n  }\n\n  entry.emit('disown');\n};\n\nDirReader.prototype.getChildProps = function () {\n  return {\n    depth: this.depth + 1,\n    root: this.root || this,\n    parent: this,\n    follow: this.follow,\n    filter: this.filter,\n    sort: this.props.sort,\n    hardlinks: this.props.hardlinks\n  };\n};\n\nDirReader.prototype.pause = function (who) {\n  var self = this;\n  if (self._paused) return;\n  who = who || self;\n  self._paused = true;\n\n  if (self._currentEntry && self._currentEntry.pause) {\n    self._currentEntry.pause(who);\n  }\n\n  self.emit('pause', who);\n};\n\nDirReader.prototype.resume = function (who) {\n  var self = this;\n  if (!self._paused) return;\n  who = who || self;\n  self._paused = false; // console.error('DR Emit Resume', self._path)\n\n  self.emit('resume', who);\n\n  if (self._paused) {\n    // console.error('DR Re-paused', self._path)\n    return;\n  }\n\n  if (self._currentEntry) {\n    if (self._currentEntry.resume) self._currentEntry.resume(who);\n  } else self._read();\n};\n\nDirReader.prototype.emitEntry = function (entry) {\n  this.emit('entry', entry);\n  this.emit('child', entry);\n};","map":{"version":3,"sources":["/home/dev/Documentos/Projects/github-clone/node_modules/fstream/lib/dir-reader.js"],"names":["module","exports","DirReader","fs","require","inherits","path","Reader","assert","ok","props","self","Error","type","Directory","entries","_index","_paused","_length","sort","call","prototype","_getEntries","_gotEntries","readdir","_path","er","error","emit","once","processEntries","length","bind","_read","_currentEntry","_aborted","_ended","p","resolve","follow","stat","who","_proxy","basename","dirname","childProps","getChildProps","entry","on","_disowned","pause","resume","EMITCHILD","emitEntry","ended","onend","_swallowErrors","warn","forEach","ev","disown","parent","root","depth","filter","hardlinks"],"mappings":"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","sourcesContent":["// A thing that emits \"entry\" events with Reader objects\n// Pausing it causes it to stop emitting entry events, and also\n// pauses the current entry if there is one.\n\nmodule.exports = DirReader\n\nvar fs = require('graceful-fs')\nvar inherits = require('inherits')\nvar path = require('path')\nvar Reader = require('./reader.js')\nvar assert = require('assert').ok\n\ninherits(DirReader, Reader)\n\nfunction DirReader (props) {\n  var self = this\n  if (!(self instanceof DirReader)) {\n    throw new Error('DirReader must be called as constructor.')\n  }\n\n  // should already be established as a Directory type\n  if (props.type !== 'Directory' || !props.Directory) {\n    throw new Error('Non-directory type ' + props.type)\n  }\n\n  self.entries = null\n  self._index = -1\n  self._paused = false\n  self._length = -1\n\n  if (props.sort) {\n    this.sort = props.sort\n  }\n\n  Reader.call(this, props)\n}\n\nDirReader.prototype._getEntries = function () {\n  var self = this\n\n  // race condition.  might pause() before calling _getEntries,\n  // and then resume, and try to get them a second time.\n  if (self._gotEntries) return\n  self._gotEntries = true\n\n  fs.readdir(self._path, function (er, entries) {\n    if (er) return self.error(er)\n\n    self.entries = entries\n\n    self.emit('entries', entries)\n    if (self._paused) self.once('resume', processEntries)\n    else processEntries()\n\n    function processEntries () {\n      self._length = self.entries.length\n      if (typeof self.sort === 'function') {\n        self.entries = self.entries.sort(self.sort.bind(self))\n      }\n      self._read()\n    }\n  })\n}\n\n// start walking the dir, and emit an \"entry\" event for each one.\nDirReader.prototype._read = function () {\n  var self = this\n\n  if (!self.entries) return self._getEntries()\n\n  if (self._paused || self._currentEntry || self._aborted) {\n    // console.error('DR paused=%j, current=%j, aborted=%j', self._paused, !!self._currentEntry, self._aborted)\n    return\n  }\n\n  self._index++\n  if (self._index >= self.entries.length) {\n    if (!self._ended) {\n      self._ended = true\n      self.emit('end')\n      self.emit('close')\n    }\n    return\n  }\n\n  // ok, handle this one, then.\n\n  // save creating a proxy, by stat'ing the thing now.\n  var p = path.resolve(self._path, self.entries[self._index])\n  assert(p !== self._path)\n  assert(self.entries[self._index])\n\n  // set this to prevent trying to _read() again in the stat time.\n  self._currentEntry = p\n  fs[ self.props.follow ? 'stat' : 'lstat' ](p, function (er, stat) {\n    if (er) return self.error(er)\n\n    var who = self._proxy || self\n\n    stat.path = p\n    stat.basename = path.basename(p)\n    stat.dirname = path.dirname(p)\n    var childProps = self.getChildProps.call(who, stat)\n    childProps.path = p\n    childProps.basename = path.basename(p)\n    childProps.dirname = path.dirname(p)\n\n    var entry = Reader(childProps, stat)\n\n    // console.error(\"DR Entry\", p, stat.size)\n\n    self._currentEntry = entry\n\n    // \"entry\" events are for direct entries in a specific dir.\n    // \"child\" events are for any and all children at all levels.\n    // This nomenclature is not completely final.\n\n    entry.on('pause', function (who) {\n      if (!self._paused && !entry._disowned) {\n        self.pause(who)\n      }\n    })\n\n    entry.on('resume', function (who) {\n      if (self._paused && !entry._disowned) {\n        self.resume(who)\n      }\n    })\n\n    entry.on('stat', function (props) {\n      self.emit('_entryStat', entry, props)\n      if (entry._aborted) return\n      if (entry._paused) {\n        entry.once('resume', function () {\n          self.emit('entryStat', entry, props)\n        })\n      } else self.emit('entryStat', entry, props)\n    })\n\n    entry.on('ready', function EMITCHILD () {\n      // console.error(\"DR emit child\", entry._path)\n      if (self._paused) {\n        // console.error(\"  DR emit child - try again later\")\n        // pause the child, and emit the \"entry\" event once we drain.\n        // console.error(\"DR pausing child entry\")\n        entry.pause(self)\n        return self.once('resume', EMITCHILD)\n      }\n\n      // skip over sockets.  they can't be piped around properly,\n      // so there's really no sense even acknowledging them.\n      // if someone really wants to see them, they can listen to\n      // the \"socket\" events.\n      if (entry.type === 'Socket') {\n        self.emit('socket', entry)\n      } else {\n        self.emitEntry(entry)\n      }\n    })\n\n    var ended = false\n    entry.on('close', onend)\n    entry.on('disown', onend)\n    function onend () {\n      if (ended) return\n      ended = true\n      self.emit('childEnd', entry)\n      self.emit('entryEnd', entry)\n      self._currentEntry = null\n      if (!self._paused) {\n        self._read()\n      }\n    }\n\n    // XXX Remove this.  Works in node as of 0.6.2 or so.\n    // Long filenames should not break stuff.\n    entry.on('error', function (er) {\n      if (entry._swallowErrors) {\n        self.warn(er)\n        entry.emit('end')\n        entry.emit('close')\n      } else {\n        self.emit('error', er)\n      }\n    })\n\n    // proxy up some events.\n    ;[\n      'child',\n      'childEnd',\n      'warn'\n    ].forEach(function (ev) {\n      entry.on(ev, self.emit.bind(self, ev))\n    })\n  })\n}\n\nDirReader.prototype.disown = function (entry) {\n  entry.emit('beforeDisown')\n  entry._disowned = true\n  entry.parent = entry.root = null\n  if (entry === this._currentEntry) {\n    this._currentEntry = null\n  }\n  entry.emit('disown')\n}\n\nDirReader.prototype.getChildProps = function () {\n  return {\n    depth: this.depth + 1,\n    root: this.root || this,\n    parent: this,\n    follow: this.follow,\n    filter: this.filter,\n    sort: this.props.sort,\n    hardlinks: this.props.hardlinks\n  }\n}\n\nDirReader.prototype.pause = function (who) {\n  var self = this\n  if (self._paused) return\n  who = who || self\n  self._paused = true\n  if (self._currentEntry && self._currentEntry.pause) {\n    self._currentEntry.pause(who)\n  }\n  self.emit('pause', who)\n}\n\nDirReader.prototype.resume = function (who) {\n  var self = this\n  if (!self._paused) return\n  who = who || self\n\n  self._paused = false\n  // console.error('DR Emit Resume', self._path)\n  self.emit('resume', who)\n  if (self._paused) {\n    // console.error('DR Re-paused', self._path)\n    return\n  }\n\n  if (self._currentEntry) {\n    if (self._currentEntry.resume) self._currentEntry.resume(who)\n  } else self._read()\n}\n\nDirReader.prototype.emitEntry = function (entry) {\n  this.emit('entry', entry)\n  this.emit('child', entry)\n}\n"]},"metadata":{},"sourceType":"script"}