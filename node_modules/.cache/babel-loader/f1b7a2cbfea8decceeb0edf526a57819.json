{"ast":null,"code":"var _ = require('lodash');\n\nmodule.exports = function (data, options) {\n  options = _.extend({\n    mutator: function (val) {\n      return val;\n    }\n  }, options);\n\n  if (typeof data !== 'object') {\n    throw new Error('[toxic] requires an object to mutate');\n  }\n\n  return _(data).map(function (value, key) {\n    // Which mutator to use\n    var keyMutator = options.keyMutator || options.mutator;\n    var valueMutator = options.valueMutator || options.mutator;\n    return [keyMutator(key), valueMutator(value)];\n  }).filter(_.identity).fromPairs().value();\n};","map":{"version":3,"sources":["/home/dev/Documentos/Projects/github-clone/node_modules/toxic/index.js"],"names":["_","require","module","exports","data","options","extend","mutator","val","Error","map","value","key","keyMutator","valueMutator","filter","identity","fromPairs"],"mappings":"AAAA,IAAIA,CAAC,GAAGC,OAAO,CAAC,QAAD,CAAf;;AAEAC,MAAM,CAACC,OAAP,GAAiB,UAAUC,IAAV,EAAgBC,OAAhB,EAAyB;AAExCA,EAAAA,OAAO,GAAGL,CAAC,CAACM,MAAF,CAAS;AACjBC,IAAAA,OAAO,EAAE,UAAUC,GAAV,EAAe;AACtB,aAAOA,GAAP;AACD;AAHgB,GAAT,EAIPH,OAJO,CAAV;;AAMA,MAAI,OAAOD,IAAP,KAAgB,QAApB,EAA8B;AAC5B,UAAM,IAAIK,KAAJ,CAAU,sCAAV,CAAN;AACD;;AAED,SAAOT,CAAC,CAACI,IAAD,CAAD,CACJM,GADI,CACA,UAAUC,KAAV,EAAiBC,GAAjB,EAAsB;AACzB;AACA,QAAIC,UAAU,GAAGR,OAAO,CAACQ,UAAR,IAAsBR,OAAO,CAACE,OAA/C;AACA,QAAIO,YAAY,GAAGT,OAAO,CAACS,YAAR,IAAwBT,OAAO,CAACE,OAAnD;AAEA,WAAO,CACLM,UAAU,CAACD,GAAD,CADL,EAELE,YAAY,CAACH,KAAD,CAFP,CAAP;AAID,GAVI,EAWJI,MAXI,CAWGf,CAAC,CAACgB,QAXL,EAYJC,SAZI,GAaJN,KAbI,EAAP;AAcD,CA1BD","sourcesContent":["var _ = require('lodash');\n\nmodule.exports = function (data, options) {\n  \n  options = _.extend({\n    mutator: function (val) {\n      return val;\n    }\n  }, options);\n  \n  if (typeof data !== 'object') {\n    throw new Error('[toxic] requires an object to mutate');\n  }\n  \n  return _(data)\n    .map(function (value, key) {\n      // Which mutator to use\n      var keyMutator = options.keyMutator || options.mutator;\n      var valueMutator = options.valueMutator || options.mutator;\n      \n      return [\n        keyMutator(key),\n        valueMutator(value)\n      ];\n    })\n    .filter(_.identity)\n    .fromPairs()\n    .value();\n};\n"]},"metadata":{},"sourceType":"script"}