{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.functionResourceToEmulatedTriggerDefintion = void 0;\n\nconst _ = require(\"lodash\");\n\nconst constants_1 = require(\"../../emulator/constants\");\n\nconst emulatorLogger_1 = require(\"../../emulator/emulatorLogger\");\n\nconst types_1 = require(\"../../emulator/types\");\n\nfunction functionResourceToEmulatedTriggerDefintion(resource) {\n  const etd = {\n    name: resource.name,\n    entryPoint: resource.name\n  };\n\n  const properties = _.get(resource, \"properties\", {});\n\n  if (properties.timeout) {\n    etd.timeout = properties.timeout;\n  }\n\n  if (properties.location) {\n    etd.regions = [properties.location];\n  }\n\n  if (properties.availableMemoryMb) {\n    etd.availableMemoryMb = properties.availableMemoryMb;\n  }\n\n  if (properties.httpsTrigger) {\n    etd.httpsTrigger = properties.httpsTrigger;\n  } else if (properties.eventTrigger) {\n    properties.eventTrigger.service = getServiceFromEventType(properties.eventTrigger.eventType);\n    etd.eventTrigger = properties.eventTrigger;\n  } else {\n    emulatorLogger_1.EmulatorLogger.forEmulator(types_1.Emulators.FUNCTIONS).log(\"WARN\", `Function '${resource.name} is missing a trigger in extension.yaml. Please add one, as triggers defined in code are ignored.`);\n  }\n\n  return etd;\n}\n\nexports.functionResourceToEmulatedTriggerDefintion = functionResourceToEmulatedTriggerDefintion;\n\nfunction getServiceFromEventType(eventType) {\n  if (eventType.includes(\"firestore\")) {\n    return constants_1.Constants.SERVICE_FIRESTORE;\n  }\n\n  if (eventType.includes(\"database\")) {\n    return constants_1.Constants.SERVICE_REALTIME_DATABASE;\n  }\n\n  if (eventType.includes(\"pubsub\")) {\n    return constants_1.Constants.SERVICE_PUBSUB;\n  }\n\n  if (eventType.includes(\"storage\")) {\n    return constants_1.Constants.SERVICE_STORAGE;\n  }\n\n  if (eventType.includes(\"analytics\")) {\n    return constants_1.Constants.SERVICE_ANALYTICS;\n  }\n\n  if (eventType.includes(\"auth\")) {\n    return constants_1.Constants.SERVICE_AUTH;\n  }\n\n  if (eventType.includes(\"crashlytics\")) {\n    return constants_1.Constants.SERVICE_CRASHLYTICS;\n  }\n\n  if (eventType.includes(\"remoteconfig\")) {\n    return constants_1.Constants.SERVICE_REMOTE_CONFIG;\n  }\n\n  if (eventType.includes(\"testing\")) {\n    return constants_1.Constants.SERVICE_TEST_LAB;\n  }\n\n  return \"\";\n}","map":{"version":3,"sources":["/home/dev/Documentos/Projects/github-clone/node_modules/firebase-tools/lib/extensions/emulator/triggerHelper.js"],"names":["Object","defineProperty","exports","value","functionResourceToEmulatedTriggerDefintion","_","require","constants_1","emulatorLogger_1","types_1","resource","etd","name","entryPoint","properties","get","timeout","location","regions","availableMemoryMb","httpsTrigger","eventTrigger","service","getServiceFromEventType","eventType","EmulatorLogger","forEmulator","Emulators","FUNCTIONS","log","includes","Constants","SERVICE_FIRESTORE","SERVICE_REALTIME_DATABASE","SERVICE_PUBSUB","SERVICE_STORAGE","SERVICE_ANALYTICS","SERVICE_AUTH","SERVICE_CRASHLYTICS","SERVICE_REMOTE_CONFIG","SERVICE_TEST_LAB"],"mappings":"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","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.functionResourceToEmulatedTriggerDefintion = void 0;\nconst _ = require(\"lodash\");\nconst constants_1 = require(\"../../emulator/constants\");\nconst emulatorLogger_1 = require(\"../../emulator/emulatorLogger\");\nconst types_1 = require(\"../../emulator/types\");\nfunction functionResourceToEmulatedTriggerDefintion(resource) {\n    const etd = {\n        name: resource.name,\n        entryPoint: resource.name,\n    };\n    const properties = _.get(resource, \"properties\", {});\n    if (properties.timeout) {\n        etd.timeout = properties.timeout;\n    }\n    if (properties.location) {\n        etd.regions = [properties.location];\n    }\n    if (properties.availableMemoryMb) {\n        etd.availableMemoryMb = properties.availableMemoryMb;\n    }\n    if (properties.httpsTrigger) {\n        etd.httpsTrigger = properties.httpsTrigger;\n    }\n    else if (properties.eventTrigger) {\n        properties.eventTrigger.service = getServiceFromEventType(properties.eventTrigger.eventType);\n        etd.eventTrigger = properties.eventTrigger;\n    }\n    else {\n        emulatorLogger_1.EmulatorLogger.forEmulator(types_1.Emulators.FUNCTIONS).log(\"WARN\", `Function '${resource.name} is missing a trigger in extension.yaml. Please add one, as triggers defined in code are ignored.`);\n    }\n    return etd;\n}\nexports.functionResourceToEmulatedTriggerDefintion = functionResourceToEmulatedTriggerDefintion;\nfunction getServiceFromEventType(eventType) {\n    if (eventType.includes(\"firestore\")) {\n        return constants_1.Constants.SERVICE_FIRESTORE;\n    }\n    if (eventType.includes(\"database\")) {\n        return constants_1.Constants.SERVICE_REALTIME_DATABASE;\n    }\n    if (eventType.includes(\"pubsub\")) {\n        return constants_1.Constants.SERVICE_PUBSUB;\n    }\n    if (eventType.includes(\"storage\")) {\n        return constants_1.Constants.SERVICE_STORAGE;\n    }\n    if (eventType.includes(\"analytics\")) {\n        return constants_1.Constants.SERVICE_ANALYTICS;\n    }\n    if (eventType.includes(\"auth\")) {\n        return constants_1.Constants.SERVICE_AUTH;\n    }\n    if (eventType.includes(\"crashlytics\")) {\n        return constants_1.Constants.SERVICE_CRASHLYTICS;\n    }\n    if (eventType.includes(\"remoteconfig\")) {\n        return constants_1.Constants.SERVICE_REMOTE_CONFIG;\n    }\n    if (eventType.includes(\"testing\")) {\n        return constants_1.Constants.SERVICE_TEST_LAB;\n    }\n    return \"\";\n}\n"]},"metadata":{},"sourceType":"script"}