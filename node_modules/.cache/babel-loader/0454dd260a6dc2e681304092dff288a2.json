{"ast":null,"code":"\"use strict\";\n/**\n * Returns true if the string matches the specified shell\n * expression.\n *\n * Actually, currently the patterns are shell expressions,\n * not regular expressions.\n *\n * Examples:\n *\n * ``` js\n * shExpMatch(\"http://home.netscape.com/people/ari/index.html\", \"*\\/ari/*\")\n *   // is true.\n *\n * shExpMatch(\"http://home.netscape.com/people/montulli/index.html\", \"*\\/ari/*\")\n *   // is false.\n * ```\n *\n * @param {String} str is any string to compare (e.g. the URL, or the hostname).\n * @param {String} shexp is a shell expression to compare against.\n * @return {Boolean} true if the string matches the shell expression.\n */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nfunction shExpMatch(str, shexp) {\n  var re = toRegExp(shexp);\n  return re.test(str);\n}\n\nexports.default = shExpMatch;\n/**\n * Converts a \"shell expression\" to a JavaScript RegExp.\n *\n * @api private\n */\n\nfunction toRegExp(str) {\n  str = String(str).replace(/\\./g, '\\\\.').replace(/\\?/g, '.').replace(/\\*/g, '.*');\n  return new RegExp('^' + str + '$');\n}","map":{"version":3,"sources":["../src/shExpMatch.ts"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;;;;;;;;AAoBG;;;;;;AAEH,SAAwB,UAAxB,CAAmC,GAAnC,EAAgD,KAAhD,EAA6D;AAC5D,MAAI,EAAE,GAAG,QAAQ,CAAC,KAAD,CAAjB;AACA,SAAO,EAAE,CAAC,IAAH,CAAQ,GAAR,CAAP;AACA;;AAHD,OAAA,CAAA,OAAA,GAAA,UAAA;AAKA;;;;AAIG;;AAEH,SAAS,QAAT,CAAkB,GAAlB,EAA6B;AAC5B,EAAA,GAAG,GAAG,MAAM,CAAC,GAAD,CAAN,CACJ,OADI,CACI,KADJ,EACW,KADX,EAEJ,OAFI,CAEI,KAFJ,EAEW,GAFX,EAGJ,OAHI,CAGI,KAHJ,EAGW,IAHX,CAAN;AAIA,SAAO,IAAI,MAAJ,CAAW,MAAM,GAAN,GAAY,GAAvB,CAAP;AACA","sourceRoot":"","sourcesContent":["\"use strict\";\n/**\n * Returns true if the string matches the specified shell\n * expression.\n *\n * Actually, currently the patterns are shell expressions,\n * not regular expressions.\n *\n * Examples:\n *\n * ``` js\n * shExpMatch(\"http://home.netscape.com/people/ari/index.html\", \"*\\/ari/*\")\n *   // is true.\n *\n * shExpMatch(\"http://home.netscape.com/people/montulli/index.html\", \"*\\/ari/*\")\n *   // is false.\n * ```\n *\n * @param {String} str is any string to compare (e.g. the URL, or the hostname).\n * @param {String} shexp is a shell expression to compare against.\n * @return {Boolean} true if the string matches the shell expression.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction shExpMatch(str, shexp) {\n    var re = toRegExp(shexp);\n    return re.test(str);\n}\nexports.default = shExpMatch;\n/**\n * Converts a \"shell expression\" to a JavaScript RegExp.\n *\n * @api private\n */\nfunction toRegExp(str) {\n    str = String(str)\n        .replace(/\\./g, '\\\\.')\n        .replace(/\\?/g, '.')\n        .replace(/\\*/g, '.*');\n    return new RegExp('^' + str + '$');\n}\n//# sourceMappingURL=shExpMatch.js.map"]},"metadata":{},"sourceType":"script"}