{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.detectProjectRoot = void 0;\n\nconst fsutils_1 = require(\"./fsutils\");\n\nconst error_1 = require(\"./error\");\n\nconst path_1 = require(\"path\");\n\nfunction detectProjectRoot(options) {\n  let projectRootDir = options.cwd || process.cwd();\n\n  if (options.configPath) {\n    const fullPath = path_1.resolve(projectRootDir, options.configPath);\n\n    if (!fsutils_1.fileExistsSync(fullPath)) {\n      throw new error_1.FirebaseError(`Could not load config file ${options.configPath}.`, {\n        exit: 1\n      });\n    }\n\n    return path_1.dirname(fullPath);\n  }\n\n  while (!fsutils_1.fileExistsSync(path_1.resolve(projectRootDir, \"./firebase.json\"))) {\n    const parentDir = path_1.dirname(projectRootDir);\n\n    if (parentDir === projectRootDir) {\n      return null;\n    }\n\n    projectRootDir = parentDir;\n  }\n\n  return projectRootDir;\n}\n\nexports.detectProjectRoot = detectProjectRoot;","map":{"version":3,"sources":["/home/dev/Documentos/Projects/github-clone/node_modules/firebase-tools/lib/detectProjectRoot.js"],"names":["Object","defineProperty","exports","value","detectProjectRoot","fsutils_1","require","error_1","path_1","options","projectRootDir","cwd","process","configPath","fullPath","resolve","fileExistsSync","FirebaseError","exit","dirname","parentDir"],"mappings":"AAAA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;AACAD,OAAO,CAACE,iBAAR,GAA4B,KAAK,CAAjC;;AACA,MAAMC,SAAS,GAAGC,OAAO,CAAC,WAAD,CAAzB;;AACA,MAAMC,OAAO,GAAGD,OAAO,CAAC,SAAD,CAAvB;;AACA,MAAME,MAAM,GAAGF,OAAO,CAAC,MAAD,CAAtB;;AACA,SAASF,iBAAT,CAA2BK,OAA3B,EAAoC;AAChC,MAAIC,cAAc,GAAGD,OAAO,CAACE,GAAR,IAAeC,OAAO,CAACD,GAAR,EAApC;;AACA,MAAIF,OAAO,CAACI,UAAZ,EAAwB;AACpB,UAAMC,QAAQ,GAAGN,MAAM,CAACO,OAAP,CAAeL,cAAf,EAA+BD,OAAO,CAACI,UAAvC,CAAjB;;AACA,QAAI,CAACR,SAAS,CAACW,cAAV,CAAyBF,QAAzB,CAAL,EAAyC;AACrC,YAAM,IAAIP,OAAO,CAACU,aAAZ,CAA2B,8BAA6BR,OAAO,CAACI,UAAW,GAA3E,EAA+E;AAAEK,QAAAA,IAAI,EAAE;AAAR,OAA/E,CAAN;AACH;;AACD,WAAOV,MAAM,CAACW,OAAP,CAAeL,QAAf,CAAP;AACH;;AACD,SAAO,CAACT,SAAS,CAACW,cAAV,CAAyBR,MAAM,CAACO,OAAP,CAAeL,cAAf,EAA+B,iBAA/B,CAAzB,CAAR,EAAqF;AACjF,UAAMU,SAAS,GAAGZ,MAAM,CAACW,OAAP,CAAeT,cAAf,CAAlB;;AACA,QAAIU,SAAS,KAAKV,cAAlB,EAAkC;AAC9B,aAAO,IAAP;AACH;;AACDA,IAAAA,cAAc,GAAGU,SAAjB;AACH;;AACD,SAAOV,cAAP;AACH;;AACDR,OAAO,CAACE,iBAAR,GAA4BA,iBAA5B","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.detectProjectRoot = void 0;\nconst fsutils_1 = require(\"./fsutils\");\nconst error_1 = require(\"./error\");\nconst path_1 = require(\"path\");\nfunction detectProjectRoot(options) {\n    let projectRootDir = options.cwd || process.cwd();\n    if (options.configPath) {\n        const fullPath = path_1.resolve(projectRootDir, options.configPath);\n        if (!fsutils_1.fileExistsSync(fullPath)) {\n            throw new error_1.FirebaseError(`Could not load config file ${options.configPath}.`, { exit: 1 });\n        }\n        return path_1.dirname(fullPath);\n    }\n    while (!fsutils_1.fileExistsSync(path_1.resolve(projectRootDir, \"./firebase.json\"))) {\n        const parentDir = path_1.dirname(projectRootDir);\n        if (parentDir === projectRootDir) {\n            return null;\n        }\n        projectRootDir = parentDir;\n    }\n    return projectRootDir;\n}\nexports.detectProjectRoot = detectProjectRoot;\n"]},"metadata":{},"sourceType":"script"}