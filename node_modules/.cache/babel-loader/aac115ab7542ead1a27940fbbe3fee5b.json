{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Client = exports.setAccessToken = exports.setRefreshToken = void 0;\n\nconst stream_1 = require(\"stream\");\n\nconst url_1 = require(\"url\");\n\nconst ProxyAgent = require(\"proxy-agent\");\n\nconst abort_controller_1 = require(\"abort-controller\");\n\nconst node_fetch_1 = require(\"node-fetch\");\n\nconst util_1 = require(\"util\");\n\nconst auth = require(\"./auth\");\n\nconst error_1 = require(\"./error\");\n\nconst logger_1 = require(\"./logger\");\n\nconst responseToError = require(\"./responseToError\");\n\nconst pkg = require(\"../package.json\");\n\nconst CLI_VERSION = pkg.CLI_VERSION;\nlet accessToken = \"\";\nlet refreshToken = \"\";\n\nfunction setRefreshToken(token = \"\") {\n  refreshToken = token;\n}\n\nexports.setRefreshToken = setRefreshToken;\n\nfunction setAccessToken(token = \"\") {\n  accessToken = token;\n}\n\nexports.setAccessToken = setAccessToken;\n\nfunction proxyURIFromEnv() {\n  return process.env.HTTPS_PROXY || process.env.https_proxy || process.env.HTTP_PROXY || process.env.http_proxy || undefined;\n}\n\nclass Client {\n  constructor(opts) {\n    this.opts = opts;\n\n    if (this.opts.auth === undefined) {\n      this.opts.auth = true;\n    }\n\n    if (this.opts.urlPrefix.endsWith(\"/\")) {\n      this.opts.urlPrefix = this.opts.urlPrefix.substring(0, this.opts.urlPrefix.length - 1);\n    }\n  }\n\n  get(path, options = {}) {\n    const reqOptions = Object.assign(options, {\n      method: \"GET\",\n      path\n    });\n    return this.request(reqOptions);\n  }\n\n  post(path, json, options = {}) {\n    const reqOptions = Object.assign(options, {\n      method: \"POST\",\n      path,\n      body: json\n    });\n    return this.request(reqOptions);\n  }\n\n  patch(path, json, options = {}) {\n    const reqOptions = Object.assign(options, {\n      method: \"PATCH\",\n      path,\n      body: json\n    });\n    return this.request(reqOptions);\n  }\n\n  put(path, json, options = {}) {\n    const reqOptions = Object.assign(options, {\n      method: \"PUT\",\n      path,\n      body: json\n    });\n    return this.request(reqOptions);\n  }\n\n  delete(path, options = {}) {\n    const reqOptions = Object.assign(options, {\n      method: \"DELETE\",\n      path\n    });\n    return this.request(reqOptions);\n  }\n\n  async request(reqOptions) {\n    if (!reqOptions.responseType) {\n      reqOptions.responseType = \"json\";\n    }\n\n    if (reqOptions.responseType === \"stream\" && !reqOptions.resolveOnHTTPError) {\n      throw new error_1.FirebaseError(\"apiv2 will not handle HTTP errors while streaming and you must set `resolveOnHTTPError` and check for res.status >= 400 on your own\", {\n        exit: 2\n      });\n    }\n\n    let internalReqOptions = Object.assign(reqOptions, {\n      headers: new node_fetch_1.Headers(reqOptions.headers)\n    });\n    internalReqOptions = this.addRequestHeaders(internalReqOptions);\n\n    if (this.opts.auth) {\n      internalReqOptions = await this.addAuthHeader(internalReqOptions);\n    }\n\n    try {\n      return await this.doRequest(internalReqOptions);\n    } catch (thrown) {\n      if (thrown instanceof error_1.FirebaseError) {\n        throw thrown;\n      }\n\n      let err;\n\n      if (thrown instanceof Error) {\n        err = thrown;\n      } else {\n        err = new Error(thrown);\n      }\n\n      throw new error_1.FirebaseError(`Failed to make request: ${err.message}`, {\n        original: err\n      });\n    }\n  }\n\n  addRequestHeaders(reqOptions) {\n    if (!reqOptions.headers) {\n      reqOptions.headers = new node_fetch_1.Headers();\n    }\n\n    reqOptions.headers.set(\"Connection\", \"keep-alive\");\n\n    if (!reqOptions.headers.has(\"User-Agent\")) {\n      reqOptions.headers.set(\"User-Agent\", `FirebaseCLI/${CLI_VERSION}`);\n    }\n\n    reqOptions.headers.set(\"X-Client-Version\", `FirebaseCLI/${CLI_VERSION}`);\n\n    if (reqOptions.responseType === \"json\") {\n      reqOptions.headers.set(\"Content-Type\", \"application/json\");\n    }\n\n    return reqOptions;\n  }\n\n  async addAuthHeader(reqOptions) {\n    if (!reqOptions.headers) {\n      reqOptions.headers = new node_fetch_1.Headers();\n    }\n\n    let token;\n\n    if (isLocalInsecureRequest(this.opts.urlPrefix)) {\n      token = \"owner\";\n    } else {\n      token = await this.getAccessToken();\n    }\n\n    reqOptions.headers.set(\"Authorization\", `Bearer ${token}`);\n    return reqOptions;\n  }\n\n  async getAccessToken() {\n    if (accessToken) {\n      return accessToken;\n    }\n\n    const data = await auth.getAccessToken(refreshToken, []);\n    return data.access_token;\n  }\n\n  requestURL(options) {\n    const versionPath = this.opts.apiVersion ? `/${this.opts.apiVersion}` : \"\";\n    return `${this.opts.urlPrefix}${versionPath}${options.path}`;\n  }\n\n  async doRequest(options) {\n    if (!options.path.startsWith(\"/\")) {\n      options.path = \"/\" + options.path;\n    }\n\n    let fetchURL = this.requestURL(options);\n\n    if (options.queryParams) {\n      if (!(options.queryParams instanceof url_1.URLSearchParams)) {\n        const sp = new url_1.URLSearchParams();\n\n        for (const key of Object.keys(options.queryParams)) {\n          const value = options.queryParams[key];\n          sp.append(key, `${value}`);\n        }\n\n        options.queryParams = sp;\n      }\n\n      const queryString = options.queryParams.toString();\n\n      if (queryString) {\n        fetchURL += `?${queryString}`;\n      }\n    }\n\n    const fetchOptions = {\n      headers: options.headers,\n      method: options.method,\n      redirect: options.redirect,\n      compress: options.compress\n    };\n\n    if (this.opts.proxy) {\n      fetchOptions.agent = new ProxyAgent(this.opts.proxy);\n    }\n\n    const envProxy = proxyURIFromEnv();\n\n    if (envProxy) {\n      fetchOptions.agent = new ProxyAgent(envProxy);\n    }\n\n    if (options.signal) {\n      fetchOptions.signal = options.signal;\n    }\n\n    let reqTimeout;\n\n    if (options.timeout) {\n      const controller = new abort_controller_1.default();\n      reqTimeout = setTimeout(() => {\n        controller.abort();\n      }, options.timeout);\n      fetchOptions.signal = controller.signal;\n    }\n\n    if (typeof options.body === \"string\" || isStream(options.body)) {\n      fetchOptions.body = options.body;\n    } else if (options.body !== undefined) {\n      fetchOptions.body = JSON.stringify(options.body);\n    }\n\n    this.logRequest(options);\n    let res;\n\n    try {\n      res = await node_fetch_1.default(fetchURL, fetchOptions);\n    } catch (thrown) {\n      const err = thrown instanceof Error ? thrown : new Error(thrown);\n      const isAbortError = err.name.includes(\"AbortError\");\n\n      if (isAbortError) {\n        throw new error_1.FirebaseError(`Timeout reached making request to ${fetchURL}`, {\n          original: err\n        });\n      }\n\n      throw new error_1.FirebaseError(`Failed to make request to ${fetchURL}`, {\n        original: err\n      });\n    } finally {\n      if (reqTimeout) {\n        clearTimeout(reqTimeout);\n      }\n    }\n\n    let body;\n\n    if (options.responseType === \"json\") {\n      if (res.status === 204) {\n        body = undefined;\n      } else {\n        body = await res.json();\n      }\n    } else if (options.responseType === \"stream\") {\n      body = res.body;\n    } else {\n      throw new error_1.FirebaseError(`Unable to interpret response. Please set responseType.`, {\n        exit: 2\n      });\n    }\n\n    this.logResponse(res, body, options);\n\n    if (res.status >= 400) {\n      if (!options.resolveOnHTTPError) {\n        throw responseToError({\n          statusCode: res.status\n        }, body);\n      }\n    }\n\n    return {\n      status: res.status,\n      response: res,\n      body\n    };\n  }\n\n  logRequest(options) {\n    var _a, _b;\n\n    let queryParamsLog = \"[none]\";\n\n    if (options.queryParams) {\n      queryParamsLog = \"[omitted]\";\n\n      if (!((_a = options.skipLog) === null || _a === void 0 ? void 0 : _a.queryParams)) {\n        queryParamsLog = options.queryParams instanceof url_1.URLSearchParams ? options.queryParams.toString() : JSON.stringify(options.queryParams);\n      }\n    }\n\n    const logURL = this.requestURL(options);\n    logger_1.logger.debug(`>>> [apiv2][query] ${options.method} ${logURL} ${queryParamsLog}`);\n\n    if (options.body !== undefined) {\n      let logBody = \"[omitted]\";\n\n      if (!((_b = options.skipLog) === null || _b === void 0 ? void 0 : _b.body)) {\n        logBody = bodyToString(options.body);\n      }\n\n      logger_1.logger.debug(`>>> [apiv2][body] ${options.method} ${logURL} ${logBody}`);\n    }\n  }\n\n  logResponse(res, body, options) {\n    var _a;\n\n    const logURL = this.requestURL(options);\n    logger_1.logger.debug(`<<< [apiv2][status] ${options.method} ${logURL} ${res.status}`);\n    let logBody = \"[omitted]\";\n\n    if (!((_a = options.skipLog) === null || _a === void 0 ? void 0 : _a.resBody)) {\n      logBody = bodyToString(body);\n    }\n\n    logger_1.logger.debug(`<<< [apiv2][body] ${options.method} ${logURL} ${logBody}`);\n  }\n\n}\n\nexports.Client = Client;\n\nfunction isLocalInsecureRequest(urlPrefix) {\n  const u = url_1.parse(urlPrefix);\n  return u.protocol === \"http:\";\n}\n\nfunction bodyToString(body) {\n  if (isStream(body)) {\n    return \"[stream]\";\n  } else {\n    try {\n      return JSON.stringify(body);\n    } catch (_) {\n      return util_1.default.inspect(body);\n    }\n  }\n}\n\nfunction isStream(o) {\n  return o instanceof stream_1.Readable;\n}","map":{"version":3,"sources":["/home/dev/Documentos/Projects/github-clone/node_modules/firebase-tools/lib/apiv2.js"],"names":["Object","defineProperty","exports","value","Client","setAccessToken","setRefreshToken","stream_1","require","url_1","ProxyAgent","abort_controller_1","node_fetch_1","util_1","auth","error_1","logger_1","responseToError","pkg","CLI_VERSION","accessToken","refreshToken","token","proxyURIFromEnv","process","env","HTTPS_PROXY","https_proxy","HTTP_PROXY","http_proxy","undefined","constructor","opts","urlPrefix","endsWith","substring","length","get","path","options","reqOptions","assign","method","request","post","json","body","patch","put","delete","responseType","resolveOnHTTPError","FirebaseError","exit","internalReqOptions","headers","Headers","addRequestHeaders","addAuthHeader","doRequest","thrown","err","Error","message","original","set","has","isLocalInsecureRequest","getAccessToken","data","access_token","requestURL","versionPath","apiVersion","startsWith","fetchURL","queryParams","URLSearchParams","sp","key","keys","append","queryString","toString","fetchOptions","redirect","compress","proxy","agent","envProxy","signal","reqTimeout","timeout","controller","default","setTimeout","abort","isStream","JSON","stringify","logRequest","res","isAbortError","name","includes","clearTimeout","status","logResponse","statusCode","response","_a","_b","queryParamsLog","skipLog","logURL","logger","debug","logBody","bodyToString","resBody","u","parse","protocol","_","inspect","o","Readable"],"mappings":"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","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Client = exports.setAccessToken = exports.setRefreshToken = void 0;\nconst stream_1 = require(\"stream\");\nconst url_1 = require(\"url\");\nconst ProxyAgent = require(\"proxy-agent\");\nconst abort_controller_1 = require(\"abort-controller\");\nconst node_fetch_1 = require(\"node-fetch\");\nconst util_1 = require(\"util\");\nconst auth = require(\"./auth\");\nconst error_1 = require(\"./error\");\nconst logger_1 = require(\"./logger\");\nconst responseToError = require(\"./responseToError\");\nconst pkg = require(\"../package.json\");\nconst CLI_VERSION = pkg.CLI_VERSION;\nlet accessToken = \"\";\nlet refreshToken = \"\";\nfunction setRefreshToken(token = \"\") {\n    refreshToken = token;\n}\nexports.setRefreshToken = setRefreshToken;\nfunction setAccessToken(token = \"\") {\n    accessToken = token;\n}\nexports.setAccessToken = setAccessToken;\nfunction proxyURIFromEnv() {\n    return (process.env.HTTPS_PROXY ||\n        process.env.https_proxy ||\n        process.env.HTTP_PROXY ||\n        process.env.http_proxy ||\n        undefined);\n}\nclass Client {\n    constructor(opts) {\n        this.opts = opts;\n        if (this.opts.auth === undefined) {\n            this.opts.auth = true;\n        }\n        if (this.opts.urlPrefix.endsWith(\"/\")) {\n            this.opts.urlPrefix = this.opts.urlPrefix.substring(0, this.opts.urlPrefix.length - 1);\n        }\n    }\n    get(path, options = {}) {\n        const reqOptions = Object.assign(options, {\n            method: \"GET\",\n            path,\n        });\n        return this.request(reqOptions);\n    }\n    post(path, json, options = {}) {\n        const reqOptions = Object.assign(options, {\n            method: \"POST\",\n            path,\n            body: json,\n        });\n        return this.request(reqOptions);\n    }\n    patch(path, json, options = {}) {\n        const reqOptions = Object.assign(options, {\n            method: \"PATCH\",\n            path,\n            body: json,\n        });\n        return this.request(reqOptions);\n    }\n    put(path, json, options = {}) {\n        const reqOptions = Object.assign(options, {\n            method: \"PUT\",\n            path,\n            body: json,\n        });\n        return this.request(reqOptions);\n    }\n    delete(path, options = {}) {\n        const reqOptions = Object.assign(options, {\n            method: \"DELETE\",\n            path,\n        });\n        return this.request(reqOptions);\n    }\n    async request(reqOptions) {\n        if (!reqOptions.responseType) {\n            reqOptions.responseType = \"json\";\n        }\n        if (reqOptions.responseType === \"stream\" && !reqOptions.resolveOnHTTPError) {\n            throw new error_1.FirebaseError(\"apiv2 will not handle HTTP errors while streaming and you must set `resolveOnHTTPError` and check for res.status >= 400 on your own\", { exit: 2 });\n        }\n        let internalReqOptions = Object.assign(reqOptions, {\n            headers: new node_fetch_1.Headers(reqOptions.headers),\n        });\n        internalReqOptions = this.addRequestHeaders(internalReqOptions);\n        if (this.opts.auth) {\n            internalReqOptions = await this.addAuthHeader(internalReqOptions);\n        }\n        try {\n            return await this.doRequest(internalReqOptions);\n        }\n        catch (thrown) {\n            if (thrown instanceof error_1.FirebaseError) {\n                throw thrown;\n            }\n            let err;\n            if (thrown instanceof Error) {\n                err = thrown;\n            }\n            else {\n                err = new Error(thrown);\n            }\n            throw new error_1.FirebaseError(`Failed to make request: ${err.message}`, { original: err });\n        }\n    }\n    addRequestHeaders(reqOptions) {\n        if (!reqOptions.headers) {\n            reqOptions.headers = new node_fetch_1.Headers();\n        }\n        reqOptions.headers.set(\"Connection\", \"keep-alive\");\n        if (!reqOptions.headers.has(\"User-Agent\")) {\n            reqOptions.headers.set(\"User-Agent\", `FirebaseCLI/${CLI_VERSION}`);\n        }\n        reqOptions.headers.set(\"X-Client-Version\", `FirebaseCLI/${CLI_VERSION}`);\n        if (reqOptions.responseType === \"json\") {\n            reqOptions.headers.set(\"Content-Type\", \"application/json\");\n        }\n        return reqOptions;\n    }\n    async addAuthHeader(reqOptions) {\n        if (!reqOptions.headers) {\n            reqOptions.headers = new node_fetch_1.Headers();\n        }\n        let token;\n        if (isLocalInsecureRequest(this.opts.urlPrefix)) {\n            token = \"owner\";\n        }\n        else {\n            token = await this.getAccessToken();\n        }\n        reqOptions.headers.set(\"Authorization\", `Bearer ${token}`);\n        return reqOptions;\n    }\n    async getAccessToken() {\n        if (accessToken) {\n            return accessToken;\n        }\n        const data = (await auth.getAccessToken(refreshToken, []));\n        return data.access_token;\n    }\n    requestURL(options) {\n        const versionPath = this.opts.apiVersion ? `/${this.opts.apiVersion}` : \"\";\n        return `${this.opts.urlPrefix}${versionPath}${options.path}`;\n    }\n    async doRequest(options) {\n        if (!options.path.startsWith(\"/\")) {\n            options.path = \"/\" + options.path;\n        }\n        let fetchURL = this.requestURL(options);\n        if (options.queryParams) {\n            if (!(options.queryParams instanceof url_1.URLSearchParams)) {\n                const sp = new url_1.URLSearchParams();\n                for (const key of Object.keys(options.queryParams)) {\n                    const value = options.queryParams[key];\n                    sp.append(key, `${value}`);\n                }\n                options.queryParams = sp;\n            }\n            const queryString = options.queryParams.toString();\n            if (queryString) {\n                fetchURL += `?${queryString}`;\n            }\n        }\n        const fetchOptions = {\n            headers: options.headers,\n            method: options.method,\n            redirect: options.redirect,\n            compress: options.compress,\n        };\n        if (this.opts.proxy) {\n            fetchOptions.agent = new ProxyAgent(this.opts.proxy);\n        }\n        const envProxy = proxyURIFromEnv();\n        if (envProxy) {\n            fetchOptions.agent = new ProxyAgent(envProxy);\n        }\n        if (options.signal) {\n            fetchOptions.signal = options.signal;\n        }\n        let reqTimeout;\n        if (options.timeout) {\n            const controller = new abort_controller_1.default();\n            reqTimeout = setTimeout(() => {\n                controller.abort();\n            }, options.timeout);\n            fetchOptions.signal = controller.signal;\n        }\n        if (typeof options.body === \"string\" || isStream(options.body)) {\n            fetchOptions.body = options.body;\n        }\n        else if (options.body !== undefined) {\n            fetchOptions.body = JSON.stringify(options.body);\n        }\n        this.logRequest(options);\n        let res;\n        try {\n            res = await node_fetch_1.default(fetchURL, fetchOptions);\n        }\n        catch (thrown) {\n            const err = thrown instanceof Error ? thrown : new Error(thrown);\n            const isAbortError = err.name.includes(\"AbortError\");\n            if (isAbortError) {\n                throw new error_1.FirebaseError(`Timeout reached making request to ${fetchURL}`, { original: err });\n            }\n            throw new error_1.FirebaseError(`Failed to make request to ${fetchURL}`, { original: err });\n        }\n        finally {\n            if (reqTimeout) {\n                clearTimeout(reqTimeout);\n            }\n        }\n        let body;\n        if (options.responseType === \"json\") {\n            if (res.status === 204) {\n                body = undefined;\n            }\n            else {\n                body = (await res.json());\n            }\n        }\n        else if (options.responseType === \"stream\") {\n            body = res.body;\n        }\n        else {\n            throw new error_1.FirebaseError(`Unable to interpret response. Please set responseType.`, {\n                exit: 2,\n            });\n        }\n        this.logResponse(res, body, options);\n        if (res.status >= 400) {\n            if (!options.resolveOnHTTPError) {\n                throw responseToError({ statusCode: res.status }, body);\n            }\n        }\n        return {\n            status: res.status,\n            response: res,\n            body,\n        };\n    }\n    logRequest(options) {\n        var _a, _b;\n        let queryParamsLog = \"[none]\";\n        if (options.queryParams) {\n            queryParamsLog = \"[omitted]\";\n            if (!((_a = options.skipLog) === null || _a === void 0 ? void 0 : _a.queryParams)) {\n                queryParamsLog =\n                    options.queryParams instanceof url_1.URLSearchParams\n                        ? options.queryParams.toString()\n                        : JSON.stringify(options.queryParams);\n            }\n        }\n        const logURL = this.requestURL(options);\n        logger_1.logger.debug(`>>> [apiv2][query] ${options.method} ${logURL} ${queryParamsLog}`);\n        if (options.body !== undefined) {\n            let logBody = \"[omitted]\";\n            if (!((_b = options.skipLog) === null || _b === void 0 ? void 0 : _b.body)) {\n                logBody = bodyToString(options.body);\n            }\n            logger_1.logger.debug(`>>> [apiv2][body] ${options.method} ${logURL} ${logBody}`);\n        }\n    }\n    logResponse(res, body, options) {\n        var _a;\n        const logURL = this.requestURL(options);\n        logger_1.logger.debug(`<<< [apiv2][status] ${options.method} ${logURL} ${res.status}`);\n        let logBody = \"[omitted]\";\n        if (!((_a = options.skipLog) === null || _a === void 0 ? void 0 : _a.resBody)) {\n            logBody = bodyToString(body);\n        }\n        logger_1.logger.debug(`<<< [apiv2][body] ${options.method} ${logURL} ${logBody}`);\n    }\n}\nexports.Client = Client;\nfunction isLocalInsecureRequest(urlPrefix) {\n    const u = url_1.parse(urlPrefix);\n    return u.protocol === \"http:\";\n}\nfunction bodyToString(body) {\n    if (isStream(body)) {\n        return \"[stream]\";\n    }\n    else {\n        try {\n            return JSON.stringify(body);\n        }\n        catch (_) {\n            return util_1.default.inspect(body);\n        }\n    }\n}\nfunction isStream(o) {\n    return o instanceof stream_1.Readable;\n}\n"]},"metadata":{},"sourceType":"script"}