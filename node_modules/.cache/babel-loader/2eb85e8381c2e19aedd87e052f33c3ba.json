{"ast":null,"code":"/**\n * Repeats a string.\n *\n * @param {String} char(s)\n * @param {Number} number of times\n * @return {String} repeated string\n */\nexports.repeat = function (str, times) {\n  return Array(times + 1).join(str);\n};\n/**\n * Pads a string\n *\n * @api public\n */\n\n\nexports.pad = function (str, len, pad, dir) {\n  if (len + 1 >= str.length) switch (dir) {\n    case 'left':\n      str = Array(len + 1 - str.length).join(pad) + str;\n      break;\n\n    case 'both':\n      var right = Math.ceil((padlen = len - str.length) / 2);\n      var left = padlen - right;\n      str = Array(left + 1).join(pad) + str + Array(right + 1).join(pad);\n      break;\n\n    default:\n      str = str + Array(len + 1 - str.length).join(pad);\n  }\n  ;\n  return str;\n};\n/**\n * Truncates a string\n *\n * @api public\n */\n\n\nexports.truncate = function (str, length, chr) {\n  chr = chr || '…';\n  return str.length >= length ? str.substr(0, length - chr.length) + chr : str;\n};\n/**\n * Copies and merges options with defaults.\n *\n * @param {Object} defaults\n * @param {Object} supplied options\n * @return {Object} new (merged) object\n */\n\n\nfunction options(defaults, opts) {\n  for (var p in opts) {\n    if (p === '__proto__' || p === 'constructor' || p === 'prototype') {\n      continue;\n    }\n\n    if (opts[p] && opts[p].constructor && opts[p].constructor === Object) {\n      defaults[p] = defaults[p] || {};\n      options(defaults[p], opts[p]);\n    } else {\n      defaults[p] = opts[p];\n    }\n  }\n\n  return defaults;\n}\n\n;\nexports.options = options; //\n// For consideration of terminal \"color\" programs like colors.js,\n// which can add ANSI escape color codes to strings,\n// we destyle the ANSI color escape codes for padding calculations.\n//\n// see: http://en.wikipedia.org/wiki/ANSI_escape_code\n//\n\nexports.strlen = function (str) {\n  var code = /\\u001b\\[(?:\\d*;){0,5}\\d*m/g;\n  var stripped = (\"\" + str).replace(code, '');\n  var split = stripped.split(\"\\n\");\n  return split.reduce(function (memo, s) {\n    return s.length > memo ? s.length : memo;\n  }, 0);\n};","map":{"version":3,"sources":["/home/dev/Documentos/Projects/github-clone/node_modules/cli-table/lib/utils.js"],"names":["exports","repeat","str","times","Array","join","pad","len","dir","length","right","Math","ceil","padlen","left","truncate","chr","substr","options","defaults","opts","p","constructor","Object","strlen","code","stripped","replace","split","reduce","memo","s"],"mappings":"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","sourcesContent":["\n/**\n * Repeats a string.\n *\n * @param {String} char(s)\n * @param {Number} number of times\n * @return {String} repeated string\n */\n\nexports.repeat = function (str, times){\n  return Array(times + 1).join(str);\n};\n\n/**\n * Pads a string\n *\n * @api public\n */\n\nexports.pad = function (str, len, pad, dir) {\n  if (len + 1 >= str.length)\n    switch (dir){\n      case 'left':\n        str = Array(len + 1 - str.length).join(pad) + str;\n        break;\n\n      case 'both':\n        var right = Math.ceil((padlen = len - str.length) / 2);\n        var left = padlen - right;\n        str = Array(left + 1).join(pad) + str + Array(right + 1).join(pad);\n        break;\n\n      default:\n        str = str + Array(len + 1 - str.length).join(pad);\n    };\n\n  return str;\n};\n\n/**\n * Truncates a string\n *\n * @api public\n */\n\nexports.truncate = function (str, length, chr){\n  chr = chr || '…';\n  return str.length >= length ? str.substr(0, length - chr.length) + chr : str;\n};\n\n/**\n * Copies and merges options with defaults.\n *\n * @param {Object} defaults\n * @param {Object} supplied options\n * @return {Object} new (merged) object\n */\n\nfunction options(defaults, opts) {\n  for (var p in opts) {\n    if (p === '__proto__' || p === 'constructor' || p === 'prototype') {\n        continue;\n    }\n    if (opts[p] && opts[p].constructor && opts[p].constructor === Object) {\n      defaults[p] = defaults[p] || {};\n      options(defaults[p], opts[p]);\n    } else {\n      defaults[p] = opts[p];\n    }\n  }\n  return defaults;\n};\nexports.options = options;\n\n//\n// For consideration of terminal \"color\" programs like colors.js,\n// which can add ANSI escape color codes to strings,\n// we destyle the ANSI color escape codes for padding calculations.\n//\n// see: http://en.wikipedia.org/wiki/ANSI_escape_code\n//\nexports.strlen = function(str){\n  var code = /\\u001b\\[(?:\\d*;){0,5}\\d*m/g;\n  var stripped = (\"\" + str).replace(code,'');\n  var split = stripped.split(\"\\n\");\n  return split.reduce(function (memo, s) { return (s.length > memo) ? s.length : memo }, 0);\n}\n"]},"metadata":{},"sourceType":"script"}