{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nconst _ = require(\"lodash\");\n\nconst command_1 = require(\"../command\");\n\nconst requireDatabaseInstance_1 = require(\"../requireDatabaseInstance\");\n\nconst database_1 = require(\"../management/database\");\n\nconst requirePermissions_1 = require(\"../requirePermissions\");\n\nconst utils = require(\"../utils\");\n\nconst profiler_1 = require(\"../profiler\");\n\nconst types_1 = require(\"../emulator/types\");\n\nconst commandUtils_1 = require(\"../emulator/commandUtils\");\n\nconst description = \"profile the Realtime Database and generate a usage report\";\nmodule.exports = new command_1.Command(\"database:profile\").description(description).option(\"-o, --output <filename>\", \"save the output to the specified file\").option(\"-d, --duration <seconds>\", \"collect database usage information for the specified number of seconds\").option(\"--raw\", \"output the raw stats collected as newline delimited json\").option(\"--no-collapse\", \"prevent collapsing similar paths into $wildcard locations\").option(\"-i, --input <filename>\", \"generate the report based on the specified file instead \" + \"of streaming logs from the database\").option(\"--instance <instance>\", \"use the database <instance>.firebaseio.com (if omitted, use default database instance)\").before(requirePermissions_1.requirePermissions, [\"firebasedatabase.instances.update\"]).before(requireDatabaseInstance_1.requireDatabaseInstance).before(database_1.populateInstanceDetails).before(commandUtils_1.warnEmulatorNotSupported, types_1.Emulators.DATABASE).action(options => {\n  if (options.raw && options.input) {\n    return utils.reject(\"Cannot specify both an input file and raw format\", {\n      exit: 1\n    });\n  } else if (options.parent.json && options.raw) {\n    return utils.reject(\"Cannot output raw data in json format\", {\n      exit: 1\n    });\n  } else if (options.input && _.has(options, \"duration\")) {\n    return utils.reject(\"Cannot specify a duration for input files\", {\n      exit: 1\n    });\n  } else if (_.has(options, \"duration\") && options.duration <= 0) {\n    return utils.reject(\"Must specify a positive number of seconds\", {\n      exit: 1\n    });\n  }\n\n  return profiler_1.profiler(options);\n});","map":{"version":3,"sources":["/home/dev/Documentos/Projects/github-clone/node_modules/firebase-tools/lib/commands/database-profile.js"],"names":["Object","defineProperty","exports","value","_","require","command_1","requireDatabaseInstance_1","database_1","requirePermissions_1","utils","profiler_1","types_1","commandUtils_1","description","module","Command","option","before","requirePermissions","requireDatabaseInstance","populateInstanceDetails","warnEmulatorNotSupported","Emulators","DATABASE","action","options","raw","input","reject","exit","parent","json","has","duration","profiler"],"mappings":"AAAA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;;AACA,MAAMC,CAAC,GAAGC,OAAO,CAAC,QAAD,CAAjB;;AACA,MAAMC,SAAS,GAAGD,OAAO,CAAC,YAAD,CAAzB;;AACA,MAAME,yBAAyB,GAAGF,OAAO,CAAC,4BAAD,CAAzC;;AACA,MAAMG,UAAU,GAAGH,OAAO,CAAC,wBAAD,CAA1B;;AACA,MAAMI,oBAAoB,GAAGJ,OAAO,CAAC,uBAAD,CAApC;;AACA,MAAMK,KAAK,GAAGL,OAAO,CAAC,UAAD,CAArB;;AACA,MAAMM,UAAU,GAAGN,OAAO,CAAC,aAAD,CAA1B;;AACA,MAAMO,OAAO,GAAGP,OAAO,CAAC,mBAAD,CAAvB;;AACA,MAAMQ,cAAc,GAAGR,OAAO,CAAC,0BAAD,CAA9B;;AACA,MAAMS,WAAW,GAAG,2DAApB;AACAC,MAAM,CAACb,OAAP,GAAiB,IAAII,SAAS,CAACU,OAAd,CAAsB,kBAAtB,EACZF,WADY,CACAA,WADA,EAEZG,MAFY,CAEL,yBAFK,EAEsB,uCAFtB,EAGZA,MAHY,CAGL,0BAHK,EAGuB,wEAHvB,EAIZA,MAJY,CAIL,OAJK,EAII,0DAJJ,EAKZA,MALY,CAKL,eALK,EAKY,2DALZ,EAMZA,MANY,CAML,wBANK,EAMqB,6DAClC,qCAPa,EAQZA,MARY,CAQL,uBARK,EAQoB,wFARpB,EASZC,MATY,CASLT,oBAAoB,CAACU,kBAThB,EASoC,CAAC,mCAAD,CATpC,EAUZD,MAVY,CAULX,yBAAyB,CAACa,uBAVrB,EAWZF,MAXY,CAWLV,UAAU,CAACa,uBAXN,EAYZH,MAZY,CAYLL,cAAc,CAACS,wBAZV,EAYoCV,OAAO,CAACW,SAAR,CAAkBC,QAZtD,EAaZC,MAbY,CAaJC,OAAD,IAAa;AACrB,MAAIA,OAAO,CAACC,GAAR,IAAeD,OAAO,CAACE,KAA3B,EAAkC;AAC9B,WAAOlB,KAAK,CAACmB,MAAN,CAAa,kDAAb,EAAiE;AACpEC,MAAAA,IAAI,EAAE;AAD8D,KAAjE,CAAP;AAGH,GAJD,MAKK,IAAIJ,OAAO,CAACK,MAAR,CAAeC,IAAf,IAAuBN,OAAO,CAACC,GAAnC,EAAwC;AACzC,WAAOjB,KAAK,CAACmB,MAAN,CAAa,uCAAb,EAAsD;AAAEC,MAAAA,IAAI,EAAE;AAAR,KAAtD,CAAP;AACH,GAFI,MAGA,IAAIJ,OAAO,CAACE,KAAR,IAAiBxB,CAAC,CAAC6B,GAAF,CAAMP,OAAN,EAAe,UAAf,CAArB,EAAiD;AAClD,WAAOhB,KAAK,CAACmB,MAAN,CAAa,2CAAb,EAA0D;AAC7DC,MAAAA,IAAI,EAAE;AADuD,KAA1D,CAAP;AAGH,GAJI,MAKA,IAAI1B,CAAC,CAAC6B,GAAF,CAAMP,OAAN,EAAe,UAAf,KAA8BA,OAAO,CAACQ,QAAR,IAAoB,CAAtD,EAAyD;AAC1D,WAAOxB,KAAK,CAACmB,MAAN,CAAa,2CAAb,EAA0D;AAC7DC,MAAAA,IAAI,EAAE;AADuD,KAA1D,CAAP;AAGH;;AACD,SAAOnB,UAAU,CAACwB,QAAX,CAAoBT,OAApB,CAAP;AACH,CAjCgB,CAAjB","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst _ = require(\"lodash\");\nconst command_1 = require(\"../command\");\nconst requireDatabaseInstance_1 = require(\"../requireDatabaseInstance\");\nconst database_1 = require(\"../management/database\");\nconst requirePermissions_1 = require(\"../requirePermissions\");\nconst utils = require(\"../utils\");\nconst profiler_1 = require(\"../profiler\");\nconst types_1 = require(\"../emulator/types\");\nconst commandUtils_1 = require(\"../emulator/commandUtils\");\nconst description = \"profile the Realtime Database and generate a usage report\";\nmodule.exports = new command_1.Command(\"database:profile\")\n    .description(description)\n    .option(\"-o, --output <filename>\", \"save the output to the specified file\")\n    .option(\"-d, --duration <seconds>\", \"collect database usage information for the specified number of seconds\")\n    .option(\"--raw\", \"output the raw stats collected as newline delimited json\")\n    .option(\"--no-collapse\", \"prevent collapsing similar paths into $wildcard locations\")\n    .option(\"-i, --input <filename>\", \"generate the report based on the specified file instead \" +\n    \"of streaming logs from the database\")\n    .option(\"--instance <instance>\", \"use the database <instance>.firebaseio.com (if omitted, use default database instance)\")\n    .before(requirePermissions_1.requirePermissions, [\"firebasedatabase.instances.update\"])\n    .before(requireDatabaseInstance_1.requireDatabaseInstance)\n    .before(database_1.populateInstanceDetails)\n    .before(commandUtils_1.warnEmulatorNotSupported, types_1.Emulators.DATABASE)\n    .action((options) => {\n    if (options.raw && options.input) {\n        return utils.reject(\"Cannot specify both an input file and raw format\", {\n            exit: 1,\n        });\n    }\n    else if (options.parent.json && options.raw) {\n        return utils.reject(\"Cannot output raw data in json format\", { exit: 1 });\n    }\n    else if (options.input && _.has(options, \"duration\")) {\n        return utils.reject(\"Cannot specify a duration for input files\", {\n            exit: 1,\n        });\n    }\n    else if (_.has(options, \"duration\") && options.duration <= 0) {\n        return utils.reject(\"Must specify a positive number of seconds\", {\n            exit: 1,\n        });\n    }\n    return profiler_1.profiler(options);\n});\n"]},"metadata":{},"sourceType":"script"}