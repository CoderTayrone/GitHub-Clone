{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nconst lodash_1 = __importDefault(require(\"lodash\"));\n\nconst json_schema_resolve_ref_1 = require(\"../utils/json-schema-resolve-ref\");\n\nclass SecuritySchemes {\n  constructor(openApiDoc) {\n    const securitySchemes = openApiDoc.components && openApiDoc.components.securitySchemes || {};\n    this._securitySchemes = securitySchemes.ref ? json_schema_resolve_ref_1.resolveRef(openApiDoc, securitySchemes) : securitySchemes;\n    this._challenges = lodash_1.default.mapValues(this._securitySchemes, scheme => {\n      if (scheme.type === 'http') {\n        return scheme.scheme || 'Basic';\n      }\n\n      if (scheme.type === 'oauth2' || scheme.type === 'openIdConnect') {\n        return 'Bearer';\n      }\n\n      return undefined;\n    });\n    this._infos = lodash_1.default.mapValues(this._securitySchemes, scheme => {\n      if (scheme.type === 'apiKey') {\n        return {\n          in: scheme.in,\n          name: scheme.name\n        };\n      } else if (scheme.type === 'http') {\n        return {\n          scheme: scheme.scheme\n        };\n      } else {\n        return {};\n      }\n    });\n  }\n\n  getChallenge(schemeName) {\n    return this._challenges[schemeName];\n  }\n\n  getInfo(schemeName) {\n    return this._infos[schemeName];\n  }\n\n}\n\nexports.default = SecuritySchemes;","map":{"version":3,"sources":["../../src/oas3/SecuritySchemes.ts"],"names":[],"mappings":";;;;;;;;;;;;AAAA,MAAA,QAAA,GAAA,eAAA,CAAA,OAAA,CAAA,QAAA,CAAA,CAAA;;AAGA,MAAA,yBAAA,GAAA,OAAA,CAAA,kCAAA,CAAA;;AAEA,MAAqB,eAArB,CAAoC;AAKhC,EAAA,WAAA,CAAY,UAAZ,EAA0C;AACtC,UAAM,eAAe,GAChB,UAAU,CAAC,UAAX,IAAyB,UAAU,CAAC,UAAX,CAAsB,eAAhD,IAAoE,EADxE;AAEA,SAAK,gBAAL,GAAwB,eAAe,CAAC,GAAhB,GAClB,yBAAA,CAAA,UAAA,CAAW,UAAX,EAAuB,eAAvB,CADkB,GAElB,eAFN;AAIA,SAAK,WAAL,GAAmB,QAAA,CAAA,OAAA,CAAG,SAAH,CAAa,KAAK,gBAAlB,EAAqC,MAAD,IAAW;AAC9D,UAAI,MAAM,CAAC,IAAP,KAAgB,MAApB,EAA4B;AACxB,eAAO,MAAM,CAAC,MAAP,IAAiB,OAAxB;AACH;;AACD,UAAI,MAAM,CAAC,IAAP,KAAgB,QAAhB,IAA4B,MAAM,CAAC,IAAP,KAAgB,eAAhD,EAAiE;AAC7D,eAAO,QAAP;AACH;;AACD,aAAO,SAAP;AACH,KARkB,CAAnB;AAUA,SAAK,MAAL,GAAc,QAAA,CAAA,OAAA,CAAG,SAAH,CAAa,KAAK,gBAAlB,EAAqC,MAAD,IAAW;AACzD,UAAI,MAAM,CAAC,IAAP,KAAgB,QAApB,EAA8B;AAC1B,eAAO;AACH,UAAA,EAAE,EAAE,MAAM,CAAC,EADR;AAEH,UAAA,IAAI,EAAE,MAAM,CAAC;AAFV,SAAP;AAIH,OALD,MAKO,IAAI,MAAM,CAAC,IAAP,KAAgB,MAApB,EAA4B;AAC/B,eAAO;AACH,UAAA,MAAM,EAAE,MAAM,CAAC;AADZ,SAAP;AAGH,OAJM,MAIA;AACH,eAAO,EAAP;AACH;AACJ,KAba,CAAd;AAcH;;AAED,EAAA,YAAY,CAAC,UAAD,EAAmB;AAC3B,WAAO,KAAK,WAAL,CAAiB,UAAjB,CAAP;AACH;;AAED,EAAA,OAAO,CAAC,UAAD,EAAmB;AACtB,WAAO,KAAK,MAAL,CAAY,UAAZ,CAAP;AACH;;AA5C+B;;AAApC,OAAA,CAAA,OAAA,GAAA,eAAA","sourceRoot":"","sourcesContent":["\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst lodash_1 = __importDefault(require(\"lodash\"));\nconst json_schema_resolve_ref_1 = require(\"../utils/json-schema-resolve-ref\");\nclass SecuritySchemes {\n    constructor(openApiDoc) {\n        const securitySchemes = (openApiDoc.components && openApiDoc.components.securitySchemes) || {};\n        this._securitySchemes = securitySchemes.ref\n            ? json_schema_resolve_ref_1.resolveRef(openApiDoc, securitySchemes)\n            : securitySchemes;\n        this._challenges = lodash_1.default.mapValues(this._securitySchemes, (scheme) => {\n            if (scheme.type === 'http') {\n                return scheme.scheme || 'Basic';\n            }\n            if (scheme.type === 'oauth2' || scheme.type === 'openIdConnect') {\n                return 'Bearer';\n            }\n            return undefined;\n        });\n        this._infos = lodash_1.default.mapValues(this._securitySchemes, (scheme) => {\n            if (scheme.type === 'apiKey') {\n                return {\n                    in: scheme.in,\n                    name: scheme.name,\n                };\n            }\n            else if (scheme.type === 'http') {\n                return {\n                    scheme: scheme.scheme,\n                };\n            }\n            else {\n                return {};\n            }\n        });\n    }\n    getChallenge(schemeName) {\n        return this._challenges[schemeName];\n    }\n    getInfo(schemeName) {\n        return this._infos[schemeName];\n    }\n}\nexports.default = SecuritySchemes;\n//# sourceMappingURL=SecuritySchemes.js.map"]},"metadata":{},"sourceType":"script"}