{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.StorageRulesRuntime = exports.StorageRulesIssues = exports.StorageRulesetInstance = void 0;\n\nconst cross_spawn_1 = require(\"cross-spawn\");\n\nconst error_1 = require(\"../../../error\");\n\nconst types_1 = require(\"./types\");\n\nconst jwt = require(\"jsonwebtoken\");\n\nconst emulatorLogger_1 = require(\"../../emulatorLogger\");\n\nconst types_2 = require(\"../../types\");\n\nconst metadata_1 = require(\"../metadata\");\n\nconst utils = require(\"../../../utils\");\n\nconst constants_1 = require(\"../../constants\");\n\nconst download_1 = require(\"../../download\");\n\nconst fs = require(\"fs-extra\");\n\nconst downloadableEmulators_1 = require(\"../../downloadableEmulators\");\n\nclass StorageRulesetInstance {\n  constructor(runtime, rulesVersion, rulesetName) {\n    this.runtime = runtime;\n    this.rulesVersion = rulesVersion;\n    this.rulesetName = rulesetName;\n  }\n\n  async verify(opts, runtimeVariableOverrides = {}) {\n    if (opts.method == types_1.RulesetOperationMethod.LIST && this.rulesVersion < 2) {\n      const issues = new StorageRulesIssues();\n      issues.warnings.push(\"Permission denied. List operations are only allowed for rules_version='2'.\");\n      return {\n        permitted: false,\n        issues\n      };\n    }\n\n    return this.runtime.verifyWithRuleset(this.rulesetName, opts, runtimeVariableOverrides);\n  }\n\n  unload() {\n    throw new Error(\"NOT_IMPLEMENTED\");\n  }\n\n}\n\nexports.StorageRulesetInstance = StorageRulesetInstance;\n\nclass StorageRulesIssues {\n  constructor(errors = [], warnings = []) {\n    this.errors = errors;\n    this.warnings = warnings;\n  }\n\n  static fromResponse(resp) {\n    return new StorageRulesIssues(resp.errors || [], resp.warnings || []);\n  }\n\n  get all() {\n    return [...this.errors, ...this.warnings];\n  }\n\n  exist() {\n    return !!(this.errors.length || this.warnings.length);\n  }\n\n}\n\nexports.StorageRulesIssues = StorageRulesIssues;\n\nclass StorageRulesRuntime {\n  constructor() {\n    this._rulesetCount = 0;\n    this._requestCount = 0;\n    this._requests = {};\n    this._alive = false;\n  }\n\n  get alive() {\n    return this._alive;\n  }\n\n  async start(auto_download = true) {\n    const downloadDetails = downloadableEmulators_1.DownloadDetails[types_2.Emulators.STORAGE];\n    const hasEmulator = fs.existsSync(downloadDetails.downloadPath);\n\n    if (!hasEmulator) {\n      if (auto_download) {\n        if (process.env.CI) {\n          utils.logWarning(`It appears you are running in a CI environment. You can avoid downloading the ${constants_1.Constants.description(types_2.Emulators.STORAGE)} repeatedly by caching the ${downloadDetails.opts.cacheDir} directory.`);\n        }\n\n        await download_1.downloadEmulator(types_2.Emulators.STORAGE);\n      } else {\n        utils.logWarning(\"Setup required, please run: firebase setup:emulators:storage\");\n        throw new error_1.FirebaseError(\"emulator not found\");\n      }\n    }\n\n    this._alive = true;\n\n    const command = downloadableEmulators_1._getCommand(types_2.Emulators.STORAGE, {});\n\n    this._childprocess = cross_spawn_1.spawn(command.binary, command.args, {\n      stdio: [\"pipe\", \"pipe\", \"pipe\"]\n    });\n\n    this._childprocess.on(\"exit\", code => {\n      this._alive = false;\n\n      if (code !== 130) {\n        throw new error_1.FirebaseError(\"Storage Emulator Rules runtime exited unexpectedly.\");\n      }\n    });\n\n    const startPromise = new Promise(resolve => {\n      this._requests[-1] = {\n        handler: resolve,\n        request: {\n          action: \"\",\n          id: -1\n        }\n      };\n    });\n\n    this._childprocess.on(\"error\", err => {\n      downloadableEmulators_1.handleEmulatorProcessError(types_2.Emulators.STORAGE, err);\n    });\n\n    this._childprocess.stderr.on(\"data\", buf => {\n      const error = buf.toString();\n\n      if (error.includes(\"jarfile\")) {\n        throw new error_1.FirebaseError(\"There was an issue starting the rules emulator, please run 'firebase setup:emulators:storage` again\");\n      } else {\n        emulatorLogger_1.EmulatorLogger.forEmulator(types_2.Emulators.STORAGE).log(\"WARN\", `Unexpected rules runtime error: ${buf.toString()}`);\n      }\n    });\n\n    this._childprocess.stdout.on(\"data\", buf => {\n      const serializedRuntimeActionResponse = buf.toString(\"UTF8\").trim();\n\n      if (serializedRuntimeActionResponse != \"\") {\n        let rap;\n\n        try {\n          rap = JSON.parse(serializedRuntimeActionResponse);\n        } catch (err) {\n          emulatorLogger_1.EmulatorLogger.forEmulator(types_2.Emulators.STORAGE).log(\"INFO\", serializedRuntimeActionResponse);\n          return;\n        }\n\n        const request = this._requests[rap.id];\n\n        if (rap.status !== \"ok\") {\n          console.warn(`[RULES] ${rap.status}: ${rap.message}`);\n          rap.errors.forEach(console.warn.bind(console));\n          return;\n        }\n\n        if (request) {\n          request.handler(rap);\n        } else {\n          console.log(`No handler for event ${serializedRuntimeActionResponse}`);\n        }\n      }\n    });\n\n    return startPromise;\n  }\n\n  stop() {\n    var _a;\n\n    (_a = this._childprocess) === null || _a === void 0 ? void 0 : _a.kill(\"SIGINT\");\n  }\n\n  async _sendRequest(rab) {\n    if (!this._childprocess) {\n      throw new error_1.FirebaseError(\"Attempted to send Cloud Storage rules request before child was ready\");\n    }\n\n    const runtimeActionRequest = Object.assign(Object.assign({}, rab), {\n      id: this._requestCount++\n    });\n\n    if (this._requests[runtimeActionRequest.id]) {\n      throw new error_1.FirebaseError(\"Attempted to send Cloud Storage rules request with stale id\");\n    }\n\n    return new Promise(resolve => {\n      var _a;\n\n      this._requests[runtimeActionRequest.id] = {\n        request: runtimeActionRequest,\n        handler: resolve\n      };\n      const serializedRequest = JSON.stringify(runtimeActionRequest);\n      (_a = this._childprocess) === null || _a === void 0 ? void 0 : _a.stdin.write(serializedRequest + \"\\n\");\n    });\n  }\n\n  async loadRuleset(source) {\n    const runtimeActionRequest = {\n      action: \"load_ruleset\",\n      context: {\n        rulesetName: (this._rulesetCount++).toString(),\n        source\n      }\n    };\n    const response = await this._sendRequest(runtimeActionRequest);\n\n    if (response.errors.length || response.warnings.length) {\n      return {\n        issues: StorageRulesIssues.fromResponse(response)\n      };\n    } else {\n      return {\n        issues: StorageRulesIssues.fromResponse(response),\n        ruleset: new StorageRulesetInstance(this, response.result.rulesVersion, runtimeActionRequest.context.rulesetName)\n      };\n    }\n  }\n\n  async verifyWithRuleset(rulesetName, opts, runtimeVariableOverrides = {}) {\n    if (!opts.path.startsWith(\"/\")) {\n      opts.path = `/${opts.path}`;\n    }\n\n    if (opts.path.endsWith(\"/\")) {\n      opts.path = opts.path.slice(0, -1);\n    }\n\n    const runtimeVariables = Object.assign({\n      resource: toExpressionValue(opts.file.before || null),\n      request: createRequestExpressionValue(opts)\n    }, runtimeVariableOverrides);\n    const runtimeActionRequest = {\n      action: \"verify\",\n      context: {\n        rulesetName: rulesetName,\n        service: \"firebase.storage\",\n        path: opts.path,\n        method: opts.method,\n        variables: runtimeVariables\n      }\n    };\n    const response = await this._sendRequest(runtimeActionRequest);\n    if (!response.errors) response.errors = [];\n    if (!response.warnings) response.warnings = [];\n\n    if (response.errors.length) {\n      return {\n        issues: StorageRulesIssues.fromResponse(response)\n      };\n    } else {\n      return {\n        issues: StorageRulesIssues.fromResponse(response),\n        permitted: response.result.permit\n      };\n    }\n  }\n\n}\n\nexports.StorageRulesRuntime = StorageRulesRuntime;\n\nfunction toExpressionValue(obj) {\n  if (typeof obj == \"string\") {\n    return {\n      string_value: obj\n    };\n  }\n\n  if (typeof obj == \"boolean\") {\n    return {\n      bool_value: obj\n    };\n  }\n\n  if (typeof obj == \"number\") {\n    if (Math.floor(obj) == obj) {\n      return {\n        int_value: obj\n      };\n    } else {\n      return {\n        float_value: obj\n      };\n    }\n  }\n\n  if (obj instanceof Date) {\n    return {\n      timestamp_value: metadata_1.toSerializedDate(obj)\n    };\n  }\n\n  if (Array.isArray(obj)) {\n    return {\n      list_value: {\n        values: obj.map(toExpressionValue)\n      }\n    };\n  }\n\n  if (obj instanceof Set) {\n    return {\n      set_value: {\n        values: [...obj].map(toExpressionValue)\n      }\n    };\n  }\n\n  if (obj == null) {\n    return {\n      null_value: 0\n    };\n  }\n\n  if (typeof obj == \"object\") {\n    const fields = {};\n    Object.keys(obj).forEach(key => {\n      fields[key] = toExpressionValue(obj[key]);\n    });\n    return {\n      map_value: {\n        fields\n      }\n    };\n  }\n\n  throw new error_1.FirebaseError(`Cannot convert \"${obj}\" of type ${typeof obj} for Firebase Storage rules runtime`);\n}\n\nfunction createAuthExpressionValue(opts) {\n  if (!opts.token) {\n    return toExpressionValue(null);\n  } else {\n    const tokenPayload = jwt.decode(opts.token);\n    const jsonValue = {\n      uid: tokenPayload.user_id,\n      token: tokenPayload\n    };\n    return toExpressionValue(jsonValue);\n  }\n}\n\nfunction createRequestExpressionValue(opts) {\n  const fields = {\n    path: {\n      path_value: {\n        segments: opts.path.split(\"/\").filter(s => s).slice(3).map(simple => ({\n          simple\n        }))\n      }\n    },\n    time: toExpressionValue(new Date()),\n    resource: toExpressionValue(opts.file.after ? opts.file.after : null),\n    auth: opts.token ? createAuthExpressionValue(opts) : {\n      null_value: 0\n    }\n  };\n  return {\n    map_value: {\n      fields\n    }\n  };\n}","map":{"version":3,"sources":["/home/dev/Documentos/Projects/github-clone/node_modules/firebase-tools/lib/emulator/storage/rules/runtime.js"],"names":["Object","defineProperty","exports","value","StorageRulesRuntime","StorageRulesIssues","StorageRulesetInstance","cross_spawn_1","require","error_1","types_1","jwt","emulatorLogger_1","types_2","metadata_1","utils","constants_1","download_1","fs","downloadableEmulators_1","constructor","runtime","rulesVersion","rulesetName","verify","opts","runtimeVariableOverrides","method","RulesetOperationMethod","LIST","issues","warnings","push","permitted","verifyWithRuleset","unload","Error","errors","fromResponse","resp","all","exist","length","_rulesetCount","_requestCount","_requests","_alive","alive","start","auto_download","downloadDetails","DownloadDetails","Emulators","STORAGE","hasEmulator","existsSync","downloadPath","process","env","CI","logWarning","Constants","description","cacheDir","downloadEmulator","FirebaseError","command","_getCommand","_childprocess","spawn","binary","args","stdio","on","code","startPromise","Promise","resolve","handler","request","action","id","err","handleEmulatorProcessError","stderr","buf","error","toString","includes","EmulatorLogger","forEmulator","log","stdout","serializedRuntimeActionResponse","trim","rap","JSON","parse","status","console","warn","message","forEach","bind","stop","_a","kill","_sendRequest","rab","runtimeActionRequest","assign","serializedRequest","stringify","stdin","write","loadRuleset","source","context","response","ruleset","result","path","startsWith","endsWith","slice","runtimeVariables","resource","toExpressionValue","file","before","createRequestExpressionValue","service","variables","permit","obj","string_value","bool_value","Math","floor","int_value","float_value","Date","timestamp_value","toSerializedDate","Array","isArray","list_value","values","map","Set","set_value","null_value","fields","keys","key","map_value","createAuthExpressionValue","token","tokenPayload","decode","jsonValue","uid","user_id","path_value","segments","split","filter","s","simple","time","after","auth"],"mappings":"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","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.StorageRulesRuntime = exports.StorageRulesIssues = exports.StorageRulesetInstance = void 0;\nconst cross_spawn_1 = require(\"cross-spawn\");\nconst error_1 = require(\"../../../error\");\nconst types_1 = require(\"./types\");\nconst jwt = require(\"jsonwebtoken\");\nconst emulatorLogger_1 = require(\"../../emulatorLogger\");\nconst types_2 = require(\"../../types\");\nconst metadata_1 = require(\"../metadata\");\nconst utils = require(\"../../../utils\");\nconst constants_1 = require(\"../../constants\");\nconst download_1 = require(\"../../download\");\nconst fs = require(\"fs-extra\");\nconst downloadableEmulators_1 = require(\"../../downloadableEmulators\");\nclass StorageRulesetInstance {\n    constructor(runtime, rulesVersion, rulesetName) {\n        this.runtime = runtime;\n        this.rulesVersion = rulesVersion;\n        this.rulesetName = rulesetName;\n    }\n    async verify(opts, runtimeVariableOverrides = {}) {\n        if (opts.method == types_1.RulesetOperationMethod.LIST && this.rulesVersion < 2) {\n            const issues = new StorageRulesIssues();\n            issues.warnings.push(\"Permission denied. List operations are only allowed for rules_version='2'.\");\n            return {\n                permitted: false,\n                issues,\n            };\n        }\n        return this.runtime.verifyWithRuleset(this.rulesetName, opts, runtimeVariableOverrides);\n    }\n    unload() {\n        throw new Error(\"NOT_IMPLEMENTED\");\n    }\n}\nexports.StorageRulesetInstance = StorageRulesetInstance;\nclass StorageRulesIssues {\n    constructor(errors = [], warnings = []) {\n        this.errors = errors;\n        this.warnings = warnings;\n    }\n    static fromResponse(resp) {\n        return new StorageRulesIssues(resp.errors || [], resp.warnings || []);\n    }\n    get all() {\n        return [...this.errors, ...this.warnings];\n    }\n    exist() {\n        return !!(this.errors.length || this.warnings.length);\n    }\n}\nexports.StorageRulesIssues = StorageRulesIssues;\nclass StorageRulesRuntime {\n    constructor() {\n        this._rulesetCount = 0;\n        this._requestCount = 0;\n        this._requests = {};\n        this._alive = false;\n    }\n    get alive() {\n        return this._alive;\n    }\n    async start(auto_download = true) {\n        const downloadDetails = downloadableEmulators_1.DownloadDetails[types_2.Emulators.STORAGE];\n        const hasEmulator = fs.existsSync(downloadDetails.downloadPath);\n        if (!hasEmulator) {\n            if (auto_download) {\n                if (process.env.CI) {\n                    utils.logWarning(`It appears you are running in a CI environment. You can avoid downloading the ${constants_1.Constants.description(types_2.Emulators.STORAGE)} repeatedly by caching the ${downloadDetails.opts.cacheDir} directory.`);\n                }\n                await download_1.downloadEmulator(types_2.Emulators.STORAGE);\n            }\n            else {\n                utils.logWarning(\"Setup required, please run: firebase setup:emulators:storage\");\n                throw new error_1.FirebaseError(\"emulator not found\");\n            }\n        }\n        this._alive = true;\n        const command = downloadableEmulators_1._getCommand(types_2.Emulators.STORAGE, {});\n        this._childprocess = cross_spawn_1.spawn(command.binary, command.args, {\n            stdio: [\"pipe\", \"pipe\", \"pipe\"],\n        });\n        this._childprocess.on(\"exit\", (code) => {\n            this._alive = false;\n            if (code !== 130) {\n                throw new error_1.FirebaseError(\"Storage Emulator Rules runtime exited unexpectedly.\");\n            }\n        });\n        const startPromise = new Promise((resolve) => {\n            this._requests[-1] = {\n                handler: resolve,\n                request: {\n                    action: \"\",\n                    id: -1,\n                },\n            };\n        });\n        this._childprocess.on(\"error\", (err) => {\n            downloadableEmulators_1.handleEmulatorProcessError(types_2.Emulators.STORAGE, err);\n        });\n        this._childprocess.stderr.on(\"data\", (buf) => {\n            const error = buf.toString();\n            if (error.includes(\"jarfile\")) {\n                throw new error_1.FirebaseError(\"There was an issue starting the rules emulator, please run 'firebase setup:emulators:storage` again\");\n            }\n            else {\n                emulatorLogger_1.EmulatorLogger.forEmulator(types_2.Emulators.STORAGE).log(\"WARN\", `Unexpected rules runtime error: ${buf.toString()}`);\n            }\n        });\n        this._childprocess.stdout.on(\"data\", (buf) => {\n            const serializedRuntimeActionResponse = buf.toString(\"UTF8\").trim();\n            if (serializedRuntimeActionResponse != \"\") {\n                let rap;\n                try {\n                    rap = JSON.parse(serializedRuntimeActionResponse);\n                }\n                catch (err) {\n                    emulatorLogger_1.EmulatorLogger.forEmulator(types_2.Emulators.STORAGE).log(\"INFO\", serializedRuntimeActionResponse);\n                    return;\n                }\n                const request = this._requests[rap.id];\n                if (rap.status !== \"ok\") {\n                    console.warn(`[RULES] ${rap.status}: ${rap.message}`);\n                    rap.errors.forEach(console.warn.bind(console));\n                    return;\n                }\n                if (request) {\n                    request.handler(rap);\n                }\n                else {\n                    console.log(`No handler for event ${serializedRuntimeActionResponse}`);\n                }\n            }\n        });\n        return startPromise;\n    }\n    stop() {\n        var _a;\n        (_a = this._childprocess) === null || _a === void 0 ? void 0 : _a.kill(\"SIGINT\");\n    }\n    async _sendRequest(rab) {\n        if (!this._childprocess) {\n            throw new error_1.FirebaseError(\"Attempted to send Cloud Storage rules request before child was ready\");\n        }\n        const runtimeActionRequest = Object.assign(Object.assign({}, rab), { id: this._requestCount++ });\n        if (this._requests[runtimeActionRequest.id]) {\n            throw new error_1.FirebaseError(\"Attempted to send Cloud Storage rules request with stale id\");\n        }\n        return new Promise((resolve) => {\n            var _a;\n            this._requests[runtimeActionRequest.id] = {\n                request: runtimeActionRequest,\n                handler: resolve,\n            };\n            const serializedRequest = JSON.stringify(runtimeActionRequest);\n            (_a = this._childprocess) === null || _a === void 0 ? void 0 : _a.stdin.write(serializedRequest + \"\\n\");\n        });\n    }\n    async loadRuleset(source) {\n        const runtimeActionRequest = {\n            action: \"load_ruleset\",\n            context: {\n                rulesetName: (this._rulesetCount++).toString(),\n                source,\n            },\n        };\n        const response = (await this._sendRequest(runtimeActionRequest));\n        if (response.errors.length || response.warnings.length) {\n            return {\n                issues: StorageRulesIssues.fromResponse(response),\n            };\n        }\n        else {\n            return {\n                issues: StorageRulesIssues.fromResponse(response),\n                ruleset: new StorageRulesetInstance(this, response.result.rulesVersion, runtimeActionRequest.context.rulesetName),\n            };\n        }\n    }\n    async verifyWithRuleset(rulesetName, opts, runtimeVariableOverrides = {}) {\n        if (!opts.path.startsWith(\"/\")) {\n            opts.path = `/${opts.path}`;\n        }\n        if (opts.path.endsWith(\"/\")) {\n            opts.path = opts.path.slice(0, -1);\n        }\n        const runtimeVariables = Object.assign({ resource: toExpressionValue(opts.file.before || null), request: createRequestExpressionValue(opts) }, runtimeVariableOverrides);\n        const runtimeActionRequest = {\n            action: \"verify\",\n            context: {\n                rulesetName: rulesetName,\n                service: \"firebase.storage\",\n                path: opts.path,\n                method: opts.method,\n                variables: runtimeVariables,\n            },\n        };\n        const response = (await this._sendRequest(runtimeActionRequest));\n        if (!response.errors)\n            response.errors = [];\n        if (!response.warnings)\n            response.warnings = [];\n        if (response.errors.length) {\n            return {\n                issues: StorageRulesIssues.fromResponse(response),\n            };\n        }\n        else {\n            return {\n                issues: StorageRulesIssues.fromResponse(response),\n                permitted: response.result.permit,\n            };\n        }\n    }\n}\nexports.StorageRulesRuntime = StorageRulesRuntime;\nfunction toExpressionValue(obj) {\n    if (typeof obj == \"string\") {\n        return { string_value: obj };\n    }\n    if (typeof obj == \"boolean\") {\n        return { bool_value: obj };\n    }\n    if (typeof obj == \"number\") {\n        if (Math.floor(obj) == obj) {\n            return { int_value: obj };\n        }\n        else {\n            return { float_value: obj };\n        }\n    }\n    if (obj instanceof Date) {\n        return {\n            timestamp_value: metadata_1.toSerializedDate(obj),\n        };\n    }\n    if (Array.isArray(obj)) {\n        return {\n            list_value: {\n                values: obj.map(toExpressionValue),\n            },\n        };\n    }\n    if (obj instanceof Set) {\n        return {\n            set_value: {\n                values: [...obj].map(toExpressionValue),\n            },\n        };\n    }\n    if (obj == null) {\n        return {\n            null_value: 0,\n        };\n    }\n    if (typeof obj == \"object\") {\n        const fields = {};\n        Object.keys(obj).forEach((key) => {\n            fields[key] = toExpressionValue(obj[key]);\n        });\n        return {\n            map_value: {\n                fields,\n            },\n        };\n    }\n    throw new error_1.FirebaseError(`Cannot convert \"${obj}\" of type ${typeof obj} for Firebase Storage rules runtime`);\n}\nfunction createAuthExpressionValue(opts) {\n    if (!opts.token) {\n        return toExpressionValue(null);\n    }\n    else {\n        const tokenPayload = jwt.decode(opts.token);\n        const jsonValue = {\n            uid: tokenPayload.user_id,\n            token: tokenPayload,\n        };\n        return toExpressionValue(jsonValue);\n    }\n}\nfunction createRequestExpressionValue(opts) {\n    const fields = {\n        path: {\n            path_value: {\n                segments: opts.path\n                    .split(\"/\")\n                    .filter((s) => s)\n                    .slice(3)\n                    .map((simple) => ({\n                    simple,\n                })),\n            },\n        },\n        time: toExpressionValue(new Date()),\n        resource: toExpressionValue(opts.file.after ? opts.file.after : null),\n        auth: opts.token ? createAuthExpressionValue(opts) : { null_value: 0 },\n    };\n    return {\n        map_value: {\n            fields,\n        },\n    };\n}\n"]},"metadata":{},"sourceType":"script"}