{"ast":null,"code":"\"use strict\";\n\nvar _ = require(\"lodash\");\n\nvar fs = require(\"fs\");\n\nvar path = require(\"path\");\n\nvar npmDependencies = require(\"./npm-dependencies\");\n\nvar {\n  prompt\n} = require(\"../../../prompt\");\n\nvar TEMPLATE_ROOT = path.resolve(__dirname, \"../../../../templates/init/functions/javascript/\");\nvar INDEX_TEMPLATE = fs.readFileSync(path.join(TEMPLATE_ROOT, \"index.js\"), \"utf8\");\nvar PACKAGE_LINTING_TEMPLATE = fs.readFileSync(path.join(TEMPLATE_ROOT, \"package.lint.json\"), \"utf8\");\nvar PACKAGE_NO_LINTING_TEMPLATE = fs.readFileSync(path.join(TEMPLATE_ROOT, \"package.nolint.json\"), \"utf8\");\nvar ESLINT_TEMPLATE = fs.readFileSync(path.join(TEMPLATE_ROOT, \"_eslintrc\"), \"utf8\");\nvar GITIGNORE_TEMPLATE = fs.readFileSync(path.join(TEMPLATE_ROOT, \"_gitignore\"), \"utf8\");\n\nmodule.exports = function (setup, config) {\n  return prompt(setup.functions, [{\n    name: \"lint\",\n    type: \"confirm\",\n    message: \"Do you want to use ESLint to catch probable bugs and enforce style?\",\n    default: false\n  }]).then(function () {\n    if (setup.functions.lint) {\n      _.set(setup, \"config.functions.predeploy\", ['npm --prefix \"$RESOURCE_DIR\" run lint']);\n\n      return config.askWriteProjectFile(\"functions/package.json\", PACKAGE_LINTING_TEMPLATE).then(function () {\n        config.askWriteProjectFile(\"functions/.eslintrc.js\", ESLINT_TEMPLATE);\n      });\n    }\n\n    return config.askWriteProjectFile(\"functions/package.json\", PACKAGE_NO_LINTING_TEMPLATE);\n  }).then(function () {\n    return config.askWriteProjectFile(\"functions/index.js\", INDEX_TEMPLATE);\n  }).then(function () {\n    return config.askWriteProjectFile(\"functions/.gitignore\", GITIGNORE_TEMPLATE);\n  }).then(function () {\n    return npmDependencies.askInstallDependencies(setup.functions, config);\n  });\n};","map":{"version":3,"sources":["/home/dev/Documentos/Projects/github-clone/node_modules/firebase-tools/lib/init/features/functions/javascript.js"],"names":["_","require","fs","path","npmDependencies","prompt","TEMPLATE_ROOT","resolve","__dirname","INDEX_TEMPLATE","readFileSync","join","PACKAGE_LINTING_TEMPLATE","PACKAGE_NO_LINTING_TEMPLATE","ESLINT_TEMPLATE","GITIGNORE_TEMPLATE","module","exports","setup","config","functions","name","type","message","default","then","lint","set","askWriteProjectFile","askInstallDependencies"],"mappings":"AAAA;;AACA,IAAIA,CAAC,GAAGC,OAAO,CAAC,QAAD,CAAf;;AACA,IAAIC,EAAE,GAAGD,OAAO,CAAC,IAAD,CAAhB;;AACA,IAAIE,IAAI,GAAGF,OAAO,CAAC,MAAD,CAAlB;;AACA,IAAIG,eAAe,GAAGH,OAAO,CAAC,oBAAD,CAA7B;;AACA,IAAI;AAAEI,EAAAA;AAAF,IAAaJ,OAAO,CAAC,iBAAD,CAAxB;;AACA,IAAIK,aAAa,GAAGH,IAAI,CAACI,OAAL,CAAaC,SAAb,EAAwB,kDAAxB,CAApB;AACA,IAAIC,cAAc,GAAGP,EAAE,CAACQ,YAAH,CAAgBP,IAAI,CAACQ,IAAL,CAAUL,aAAV,EAAyB,UAAzB,CAAhB,EAAsD,MAAtD,CAArB;AACA,IAAIM,wBAAwB,GAAGV,EAAE,CAACQ,YAAH,CAAgBP,IAAI,CAACQ,IAAL,CAAUL,aAAV,EAAyB,mBAAzB,CAAhB,EAA+D,MAA/D,CAA/B;AACA,IAAIO,2BAA2B,GAAGX,EAAE,CAACQ,YAAH,CAAgBP,IAAI,CAACQ,IAAL,CAAUL,aAAV,EAAyB,qBAAzB,CAAhB,EAAiE,MAAjE,CAAlC;AACA,IAAIQ,eAAe,GAAGZ,EAAE,CAACQ,YAAH,CAAgBP,IAAI,CAACQ,IAAL,CAAUL,aAAV,EAAyB,WAAzB,CAAhB,EAAuD,MAAvD,CAAtB;AACA,IAAIS,kBAAkB,GAAGb,EAAE,CAACQ,YAAH,CAAgBP,IAAI,CAACQ,IAAL,CAAUL,aAAV,EAAyB,YAAzB,CAAhB,EAAwD,MAAxD,CAAzB;;AACAU,MAAM,CAACC,OAAP,GAAiB,UAAUC,KAAV,EAAiBC,MAAjB,EAAyB;AACtC,SAAOd,MAAM,CAACa,KAAK,CAACE,SAAP,EAAkB,CAC3B;AACIC,IAAAA,IAAI,EAAE,MADV;AAEIC,IAAAA,IAAI,EAAE,SAFV;AAGIC,IAAAA,OAAO,EAAE,qEAHb;AAIIC,IAAAA,OAAO,EAAE;AAJb,GAD2B,CAAlB,CAAN,CAQFC,IARE,CAQG,YAAY;AAClB,QAAIP,KAAK,CAACE,SAAN,CAAgBM,IAApB,EAA0B;AACtB1B,MAAAA,CAAC,CAAC2B,GAAF,CAAMT,KAAN,EAAa,4BAAb,EAA2C,CAAC,uCAAD,CAA3C;;AACA,aAAOC,MAAM,CACRS,mBADE,CACkB,wBADlB,EAC4ChB,wBAD5C,EAEFa,IAFE,CAEG,YAAY;AAClBN,QAAAA,MAAM,CAACS,mBAAP,CAA2B,wBAA3B,EAAqDd,eAArD;AACH,OAJM,CAAP;AAKH;;AACD,WAAOK,MAAM,CAACS,mBAAP,CAA2B,wBAA3B,EAAqDf,2BAArD,CAAP;AACH,GAlBM,EAmBFY,IAnBE,CAmBG,YAAY;AAClB,WAAON,MAAM,CAACS,mBAAP,CAA2B,oBAA3B,EAAiDnB,cAAjD,CAAP;AACH,GArBM,EAsBFgB,IAtBE,CAsBG,YAAY;AAClB,WAAON,MAAM,CAACS,mBAAP,CAA2B,sBAA3B,EAAmDb,kBAAnD,CAAP;AACH,GAxBM,EAyBFU,IAzBE,CAyBG,YAAY;AAClB,WAAOrB,eAAe,CAACyB,sBAAhB,CAAuCX,KAAK,CAACE,SAA7C,EAAwDD,MAAxD,CAAP;AACH,GA3BM,CAAP;AA4BH,CA7BD","sourcesContent":["\"use strict\";\nvar _ = require(\"lodash\");\nvar fs = require(\"fs\");\nvar path = require(\"path\");\nvar npmDependencies = require(\"./npm-dependencies\");\nvar { prompt } = require(\"../../../prompt\");\nvar TEMPLATE_ROOT = path.resolve(__dirname, \"../../../../templates/init/functions/javascript/\");\nvar INDEX_TEMPLATE = fs.readFileSync(path.join(TEMPLATE_ROOT, \"index.js\"), \"utf8\");\nvar PACKAGE_LINTING_TEMPLATE = fs.readFileSync(path.join(TEMPLATE_ROOT, \"package.lint.json\"), \"utf8\");\nvar PACKAGE_NO_LINTING_TEMPLATE = fs.readFileSync(path.join(TEMPLATE_ROOT, \"package.nolint.json\"), \"utf8\");\nvar ESLINT_TEMPLATE = fs.readFileSync(path.join(TEMPLATE_ROOT, \"_eslintrc\"), \"utf8\");\nvar GITIGNORE_TEMPLATE = fs.readFileSync(path.join(TEMPLATE_ROOT, \"_gitignore\"), \"utf8\");\nmodule.exports = function (setup, config) {\n    return prompt(setup.functions, [\n        {\n            name: \"lint\",\n            type: \"confirm\",\n            message: \"Do you want to use ESLint to catch probable bugs and enforce style?\",\n            default: false,\n        },\n    ])\n        .then(function () {\n        if (setup.functions.lint) {\n            _.set(setup, \"config.functions.predeploy\", ['npm --prefix \"$RESOURCE_DIR\" run lint']);\n            return config\n                .askWriteProjectFile(\"functions/package.json\", PACKAGE_LINTING_TEMPLATE)\n                .then(function () {\n                config.askWriteProjectFile(\"functions/.eslintrc.js\", ESLINT_TEMPLATE);\n            });\n        }\n        return config.askWriteProjectFile(\"functions/package.json\", PACKAGE_NO_LINTING_TEMPLATE);\n    })\n        .then(function () {\n        return config.askWriteProjectFile(\"functions/index.js\", INDEX_TEMPLATE);\n    })\n        .then(function () {\n        return config.askWriteProjectFile(\"functions/.gitignore\", GITIGNORE_TEMPLATE);\n    })\n        .then(function () {\n        return npmDependencies.askInstallDependencies(setup.functions, config);\n    });\n};\n"]},"metadata":{},"sourceType":"script"}