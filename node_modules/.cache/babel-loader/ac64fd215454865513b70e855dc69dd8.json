{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nconst get_uri_1 = __importDefault(require(\"get-uri\"));\n\nconst url_1 = require(\"url\");\n\nconst agent_1 = __importDefault(require(\"./agent\"));\n\nfunction createPacProxyAgent(uri, opts) {\n  // was an options object passed in first?\n  if (typeof uri === 'object') {\n    opts = uri; // result of a url.parse() call?\n\n    if (opts.href) {\n      if (opts.path && !opts.pathname) {\n        opts.pathname = opts.path;\n      }\n\n      opts.slashes = true;\n      uri = url_1.format(opts);\n    } else {\n      uri = opts.uri;\n    }\n  }\n\n  if (!opts) {\n    opts = {};\n  }\n\n  if (typeof uri !== 'string') {\n    throw new TypeError('a PAC file URI must be specified!');\n  }\n\n  return new agent_1.default(uri, opts);\n}\n\n(function (createPacProxyAgent) {\n  createPacProxyAgent.PacProxyAgent = agent_1.default;\n  /**\n   * Supported \"protocols\". Delegates out to the `get-uri` module.\n   */\n\n  createPacProxyAgent.protocols = Object.keys(get_uri_1.default.protocols);\n  createPacProxyAgent.prototype = agent_1.default.prototype;\n})(createPacProxyAgent || (createPacProxyAgent = {}));\n\nmodule.exports = createPacProxyAgent;","map":{"version":3,"sources":["../src/index.ts"],"names":[],"mappings":";;;;;;;;AAAA,MAAA,SAAA,GAAA,eAAA,CAAA,OAAA,CAAA,SAAA,CAAA,CAAA;;AACA,MAAA,KAAA,GAAA,OAAA,CAAA,KAAA,CAAA;;AAMA,MAAA,OAAA,GAAA,eAAA,CAAA,OAAA,CAAA,SAAA,CAAA,CAAA;;AASA,SAAS,mBAAT,CACC,GADD,EAEC,IAFD,EAEgD;AAE/C;AACA,MAAI,OAAO,GAAP,KAAe,QAAnB,EAA6B;AAC5B,IAAA,IAAI,GAAG,GAAP,CAD4B,CAG5B;;AACA,QAAI,IAAI,CAAC,IAAT,EAAe;AACd,UAAI,IAAI,CAAC,IAAL,IAAa,CAAC,IAAI,CAAC,QAAvB,EAAiC;AAChC,QAAA,IAAI,CAAC,QAAL,GAAgB,IAAI,CAAC,IAArB;AACA;;AACD,MAAA,IAAI,CAAC,OAAL,GAAe,IAAf;AACA,MAAA,GAAG,GAAG,KAAA,CAAA,MAAA,CAAO,IAAP,CAAN;AACA,KAND,MAMO;AACN,MAAA,GAAG,GAAG,IAAI,CAAC,GAAX;AACA;AACD;;AACD,MAAI,CAAC,IAAL,EAAW;AACV,IAAA,IAAI,GAAG,EAAP;AACA;;AAED,MAAI,OAAO,GAAP,KAAe,QAAnB,EAA6B;AAC5B,UAAM,IAAI,SAAJ,CAAc,mCAAd,CAAN;AACA;;AAED,SAAO,IAAI,OAAA,CAAA,OAAJ,CAAmB,GAAnB,EAAwB,IAAxB,CAAP;AACA;;AAED,CAAA,UAAU,mBAAV,EAA6B;AAYf,EAAA,mBAAA,CAAA,aAAA,GAAgB,OAAA,CAAA,OAAhB;AAEb;;AAEG;;AACU,EAAA,mBAAA,CAAA,SAAA,GAAY,MAAM,CAAC,IAAP,CAAY,SAAA,CAAA,OAAA,CAAO,SAAnB,CAAZ;AAEb,EAAA,mBAAmB,CAAC,SAApB,GAAgC,OAAA,CAAA,OAAA,CAAe,SAA/C;AACA,CApBD,EAAU,mBAAmB,KAAnB,mBAAmB,GAAA,EAAA,CAA7B;;AAsBA,MAAA,CAAA,OAAA,GAAS,mBAAT","sourceRoot":"","sourcesContent":["\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nconst get_uri_1 = __importDefault(require(\"get-uri\"));\nconst url_1 = require(\"url\");\nconst agent_1 = __importDefault(require(\"./agent\"));\nfunction createPacProxyAgent(uri, opts) {\n    // was an options object passed in first?\n    if (typeof uri === 'object') {\n        opts = uri;\n        // result of a url.parse() call?\n        if (opts.href) {\n            if (opts.path && !opts.pathname) {\n                opts.pathname = opts.path;\n            }\n            opts.slashes = true;\n            uri = url_1.format(opts);\n        }\n        else {\n            uri = opts.uri;\n        }\n    }\n    if (!opts) {\n        opts = {};\n    }\n    if (typeof uri !== 'string') {\n        throw new TypeError('a PAC file URI must be specified!');\n    }\n    return new agent_1.default(uri, opts);\n}\n(function (createPacProxyAgent) {\n    createPacProxyAgent.PacProxyAgent = agent_1.default;\n    /**\n     * Supported \"protocols\". Delegates out to the `get-uri` module.\n     */\n    createPacProxyAgent.protocols = Object.keys(get_uri_1.default.protocols);\n    createPacProxyAgent.prototype = agent_1.default.prototype;\n})(createPacProxyAgent || (createPacProxyAgent = {}));\nmodule.exports = createPacProxyAgent;\n//# sourceMappingURL=index.js.map"]},"metadata":{},"sourceType":"script"}