{"ast":null,"code":"var Traverse = require('traverse');\n\nvar EventEmitter = require('events').EventEmitter;\n\nmodule.exports = Chainsaw;\n\nfunction Chainsaw(builder) {\n  var saw = Chainsaw.saw(builder, {});\n  var r = builder.call(saw.handlers, saw);\n  if (r !== undefined) saw.handlers = r;\n  saw.record();\n  return saw.chain();\n}\n\n;\n\nChainsaw.light = function ChainsawLight(builder) {\n  var saw = Chainsaw.saw(builder, {});\n  var r = builder.call(saw.handlers, saw);\n  if (r !== undefined) saw.handlers = r;\n  return saw.chain();\n};\n\nChainsaw.saw = function (builder, handlers) {\n  var saw = new EventEmitter();\n  saw.handlers = handlers;\n  saw.actions = [];\n\n  saw.chain = function () {\n    var ch = Traverse(saw.handlers).map(function (node) {\n      if (this.isRoot) return node;\n      var ps = this.path;\n\n      if (typeof node === 'function') {\n        this.update(function () {\n          saw.actions.push({\n            path: ps,\n            args: [].slice.call(arguments)\n          });\n          return ch;\n        });\n      }\n    });\n    process.nextTick(function () {\n      saw.emit('begin');\n      saw.next();\n    });\n    return ch;\n  };\n\n  saw.pop = function () {\n    return saw.actions.shift();\n  };\n\n  saw.next = function () {\n    var action = saw.pop();\n\n    if (!action) {\n      saw.emit('end');\n    } else if (!action.trap) {\n      var node = saw.handlers;\n      action.path.forEach(function (key) {\n        node = node[key];\n      });\n      node.apply(saw.handlers, action.args);\n    }\n  };\n\n  saw.nest = function (cb) {\n    var args = [].slice.call(arguments, 1);\n    var autonext = true;\n\n    if (typeof cb === 'boolean') {\n      var autonext = cb;\n      cb = args.shift();\n    }\n\n    var s = Chainsaw.saw(builder, {});\n    var r = builder.call(s.handlers, s);\n    if (r !== undefined) s.handlers = r; // If we are recording...\n\n    if (\"undefined\" !== typeof saw.step) {\n      // ... our children should, too\n      s.record();\n    }\n\n    cb.apply(s.chain(), args);\n    if (autonext !== false) s.on('end', saw.next);\n  };\n\n  saw.record = function () {\n    upgradeChainsaw(saw);\n  };\n\n  ['trap', 'down', 'jump'].forEach(function (method) {\n    saw[method] = function () {\n      throw new Error(\"To use the trap, down and jump features, please \" + \"call record() first to start recording actions.\");\n    };\n  });\n  return saw;\n};\n\nfunction upgradeChainsaw(saw) {\n  saw.step = 0; // override pop\n\n  saw.pop = function () {\n    return saw.actions[saw.step++];\n  };\n\n  saw.trap = function (name, cb) {\n    var ps = Array.isArray(name) ? name : [name];\n    saw.actions.push({\n      path: ps,\n      step: saw.step,\n      cb: cb,\n      trap: true\n    });\n  };\n\n  saw.down = function (name) {\n    var ps = (Array.isArray(name) ? name : [name]).join('/');\n    var i = saw.actions.slice(saw.step).map(function (x) {\n      if (x.trap && x.step <= saw.step) return false;\n      return x.path.join('/') == ps;\n    }).indexOf(true);\n    if (i >= 0) saw.step += i;else saw.step = saw.actions.length;\n    var act = saw.actions[saw.step - 1];\n\n    if (act && act.trap) {\n      // It's a trap!\n      saw.step = act.step;\n      act.cb();\n    } else saw.next();\n  };\n\n  saw.jump = function (step) {\n    saw.step = step;\n    saw.next();\n  };\n}\n\n;","map":{"version":3,"sources":["/home/dev/Documentos/Projects/github-clone/node_modules/chainsaw/index.js"],"names":["Traverse","require","EventEmitter","module","exports","Chainsaw","builder","saw","r","call","handlers","undefined","record","chain","light","ChainsawLight","actions","ch","map","node","isRoot","ps","path","update","push","args","slice","arguments","process","nextTick","emit","next","pop","shift","action","trap","forEach","key","apply","nest","cb","autonext","s","step","on","upgradeChainsaw","method","Error","name","Array","isArray","down","join","i","x","indexOf","length","act","jump"],"mappings":"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","sourcesContent":["var Traverse = require('traverse');\nvar EventEmitter = require('events').EventEmitter;\n\nmodule.exports = Chainsaw;\nfunction Chainsaw (builder) {\n    var saw = Chainsaw.saw(builder, {});\n    var r = builder.call(saw.handlers, saw);\n    if (r !== undefined) saw.handlers = r;\n    saw.record();\n    return saw.chain();\n};\n\nChainsaw.light = function ChainsawLight (builder) {\n    var saw = Chainsaw.saw(builder, {});\n    var r = builder.call(saw.handlers, saw);\n    if (r !== undefined) saw.handlers = r;\n    return saw.chain();\n};\n\nChainsaw.saw = function (builder, handlers) {\n    var saw = new EventEmitter;\n    saw.handlers = handlers;\n    saw.actions = [];\n\n    saw.chain = function () {\n        var ch = Traverse(saw.handlers).map(function (node) {\n            if (this.isRoot) return node;\n            var ps = this.path;\n\n            if (typeof node === 'function') {\n                this.update(function () {\n                    saw.actions.push({\n                        path : ps,\n                        args : [].slice.call(arguments)\n                    });\n                    return ch;\n                });\n            }\n        });\n\n        process.nextTick(function () {\n            saw.emit('begin');\n            saw.next();\n        });\n\n        return ch;\n    };\n\n    saw.pop = function () {\n        return saw.actions.shift();\n    };\n\n    saw.next = function () {\n        var action = saw.pop();\n\n        if (!action) {\n            saw.emit('end');\n        }\n        else if (!action.trap) {\n            var node = saw.handlers;\n            action.path.forEach(function (key) { node = node[key] });\n            node.apply(saw.handlers, action.args);\n        }\n    };\n\n    saw.nest = function (cb) {\n        var args = [].slice.call(arguments, 1);\n        var autonext = true;\n\n        if (typeof cb === 'boolean') {\n            var autonext = cb;\n            cb = args.shift();\n        }\n\n        var s = Chainsaw.saw(builder, {});\n        var r = builder.call(s.handlers, s);\n\n        if (r !== undefined) s.handlers = r;\n\n        // If we are recording...\n        if (\"undefined\" !== typeof saw.step) {\n            // ... our children should, too\n            s.record();\n        }\n\n        cb.apply(s.chain(), args);\n        if (autonext !== false) s.on('end', saw.next);\n    };\n\n    saw.record = function () {\n        upgradeChainsaw(saw);\n    };\n\n    ['trap', 'down', 'jump'].forEach(function (method) {\n        saw[method] = function () {\n            throw new Error(\"To use the trap, down and jump features, please \"+\n                            \"call record() first to start recording actions.\");\n        };\n    });\n\n    return saw;\n};\n\nfunction upgradeChainsaw(saw) {\n    saw.step = 0;\n\n    // override pop\n    saw.pop = function () {\n        return saw.actions[saw.step++];\n    };\n\n    saw.trap = function (name, cb) {\n        var ps = Array.isArray(name) ? name : [name];\n        saw.actions.push({\n            path : ps,\n            step : saw.step,\n            cb : cb,\n            trap : true\n        });\n    };\n\n    saw.down = function (name) {\n        var ps = (Array.isArray(name) ? name : [name]).join('/');\n        var i = saw.actions.slice(saw.step).map(function (x) {\n            if (x.trap && x.step <= saw.step) return false;\n            return x.path.join('/') == ps;\n        }).indexOf(true);\n\n        if (i >= 0) saw.step += i;\n        else saw.step = saw.actions.length;\n\n        var act = saw.actions[saw.step - 1];\n        if (act && act.trap) {\n            // It's a trap!\n            saw.step = act.step;\n            act.cb();\n        }\n        else saw.next();\n    };\n\n    saw.jump = function (step) {\n        saw.step = step;\n        saw.next();\n    };\n};\n"]},"metadata":{},"sourceType":"script"}