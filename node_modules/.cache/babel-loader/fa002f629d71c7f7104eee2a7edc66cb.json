{"ast":null,"code":"var Uni = require('./unicode'); // Fix Function#name on browsers that do not support it (IE)\n// http://stackoverflow.com/questions/6903762/function-name-not-supported-in-ie\n\n\nif (!function f() {}.name) {\n  Object.defineProperty(function () {}.constructor.prototype, 'name', {\n    get: function () {\n      var name = this.toString().match(/^\\s*function\\s*(\\S*)\\s*\\(/)[1]; // For better performance only parse once, and then cache the\n      // result through a new accessor for repeated access.\n\n      Object.defineProperty(this, 'name', {\n        value: name\n      });\n      return name;\n    }\n  });\n}\n\nvar special_chars = {\n  0: '\\\\0',\n  // this is not an octal literal\n  8: '\\\\b',\n  9: '\\\\t',\n  10: '\\\\n',\n  11: '\\\\v',\n  12: '\\\\f',\n  13: '\\\\r',\n  92: '\\\\\\\\'\n}; // for oddballs\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty; // some people escape those, so I'd copy this to be safe\n\nvar escapable = /[\\x00-\\x1f\\x7f-\\x9f\\u00ad\\u0600-\\u0604\\u070f\\u17b4\\u17b5\\u200c-\\u200f\\u2028-\\u202f\\u2060-\\u206f\\ufeff\\ufff0-\\uffff]/;\n\nfunction _stringify(object, options, recursiveLvl, currentKey) {\n  var json5 = options.mode === 'json5' || !options.mode;\n  /*\n   * Opinionated decision warning:\n   *\n   * Objects are serialized in the following form:\n   * { type: 'Class', data: DATA }\n   *\n   * Class is supposed to be a function, and new Class(DATA) is\n   * supposed to be equivalent to the original value\n   */\n\n  /*function custom_type() {\n    return stringify({\n      type: object.constructor.name,\n      data: object.toString()\n    })\n  }*/\n  // if add, it's an internal indentation, so we add 1 level and a eol\n  // if !add, it's an ending indentation, so we just indent\n\n  function indent(str, add) {\n    var prefix = options._prefix ? options._prefix : '';\n    if (!options.indent) return prefix + str;\n    var result = '';\n    var count = recursiveLvl + (add || 0);\n\n    for (var i = 0; i < count; i++) result += options.indent;\n\n    return prefix + result + str + (add ? '\\n' : '');\n  }\n\n  function _stringify_key(key) {\n    if (options.quote_keys) return _stringify_str(key);\n    if (String(Number(key)) == key && key[0] != '-') return key;\n    if (key == '') return _stringify_str(key);\n    var result = '';\n\n    for (var i = 0; i < key.length; i++) {\n      if (i > 0) {\n        if (!Uni.isIdentifierPart(key[i])) return _stringify_str(key);\n      } else {\n        if (!Uni.isIdentifierStart(key[i])) return _stringify_str(key);\n      }\n\n      var chr = key.charCodeAt(i);\n\n      if (options.ascii) {\n        if (chr < 0x80) {\n          result += key[i];\n        } else {\n          result += '\\\\u' + ('0000' + chr.toString(16)).slice(-4);\n        }\n      } else {\n        if (escapable.exec(key[i])) {\n          result += '\\\\u' + ('0000' + chr.toString(16)).slice(-4);\n        } else {\n          result += key[i];\n        }\n      }\n    }\n\n    return result;\n  }\n\n  function _stringify_str(key) {\n    var quote = options.quote;\n    var quoteChr = quote.charCodeAt(0);\n    var result = '';\n\n    for (var i = 0; i < key.length; i++) {\n      var chr = key.charCodeAt(i);\n\n      if (chr < 0x10) {\n        if (chr === 0 && json5) {\n          result += '\\\\0';\n        } else if (chr >= 8 && chr <= 13 && (json5 || chr !== 11)) {\n          result += special_chars[chr];\n        } else if (json5) {\n          result += '\\\\x0' + chr.toString(16);\n        } else {\n          result += '\\\\u000' + chr.toString(16);\n        }\n      } else if (chr < 0x20) {\n        if (json5) {\n          result += '\\\\x' + chr.toString(16);\n        } else {\n          result += '\\\\u00' + chr.toString(16);\n        }\n      } else if (chr >= 0x20 && chr < 0x80) {\n        // ascii range\n        if (chr === 47 && i && key[i - 1] === '<') {\n          // escaping slashes in </script>\n          result += '\\\\' + key[i];\n        } else if (chr === 92) {\n          result += '\\\\\\\\';\n        } else if (chr === quoteChr) {\n          result += '\\\\' + quote;\n        } else {\n          result += key[i];\n        }\n      } else if (options.ascii || Uni.isLineTerminator(key[i]) || escapable.exec(key[i])) {\n        if (chr < 0x100) {\n          if (json5) {\n            result += '\\\\x' + chr.toString(16);\n          } else {\n            result += '\\\\u00' + chr.toString(16);\n          }\n        } else if (chr < 0x1000) {\n          result += '\\\\u0' + chr.toString(16);\n        } else if (chr < 0x10000) {\n          result += '\\\\u' + chr.toString(16);\n        } else {\n          throw Error('weird codepoint');\n        }\n      } else {\n        result += key[i];\n      }\n    }\n\n    return quote + result + quote;\n  }\n\n  function _stringify_object() {\n    if (object === null) return 'null';\n    var result = [],\n        len = 0,\n        braces;\n\n    if (Array.isArray(object)) {\n      braces = '[]';\n\n      for (var i = 0; i < object.length; i++) {\n        var s = _stringify(object[i], options, recursiveLvl + 1, String(i));\n\n        if (s === undefined) s = 'null';\n        len += s.length + 2;\n        result.push(s + ',');\n      }\n    } else {\n      braces = '{}';\n\n      var fn = function (key) {\n        var t = _stringify(object[key], options, recursiveLvl + 1, key);\n\n        if (t !== undefined) {\n          t = _stringify_key(key) + ':' + (options.indent ? ' ' : '') + t + ',';\n          len += t.length + 1;\n          result.push(t);\n        }\n      };\n\n      if (Array.isArray(options.replacer)) {\n        for (var i = 0; i < options.replacer.length; i++) if (hasOwnProperty.call(object, options.replacer[i])) fn(options.replacer[i]);\n      } else {\n        var keys = Object.keys(object);\n        if (options.sort_keys) keys = keys.sort(typeof options.sort_keys === 'function' ? options.sort_keys : undefined);\n        keys.forEach(fn);\n      }\n    } // objects shorter than 30 characters are always inlined\n    // objects longer than 60 characters are always splitted to multiple lines\n    // anything in the middle depends on indentation level\n\n\n    len -= 2;\n\n    if (options.indent && (len > options._splitMax - recursiveLvl * options.indent.length || len > options._splitMin)) {\n      // remove trailing comma in multiline if asked to\n      if (options.no_trailing_comma && result.length) {\n        result[result.length - 1] = result[result.length - 1].substring(0, result[result.length - 1].length - 1);\n      }\n\n      var innerStuff = result.map(function (x) {\n        return indent(x, 1);\n      }).join('');\n      return braces[0] + (options.indent ? '\\n' : '') + innerStuff + indent(braces[1]);\n    } else {\n      // always remove trailing comma in one-lined arrays\n      if (result.length) {\n        result[result.length - 1] = result[result.length - 1].substring(0, result[result.length - 1].length - 1);\n      }\n\n      var innerStuff = result.join(options.indent ? ' ' : '');\n      return braces[0] + innerStuff + braces[1];\n    }\n  }\n\n  function _stringify_nonobject(object) {\n    if (typeof options.replacer === 'function') {\n      object = options.replacer.call(null, currentKey, object);\n    }\n\n    switch (typeof object) {\n      case 'string':\n        return _stringify_str(object);\n\n      case 'number':\n        if (object === 0 && 1 / object < 0) {\n          // Opinionated decision warning:\n          //\n          // I want cross-platform negative zero in all js engines\n          // I know they're equal, but why lose that tiny bit of\n          // information needlessly?\n          return '-0';\n        }\n\n        if (!json5 && !Number.isFinite(object)) {\n          // json don't support infinity (= sucks)\n          return 'null';\n        }\n\n        return object.toString();\n\n      case 'boolean':\n        return object.toString();\n\n      case 'undefined':\n        return undefined;\n\n      case 'function': //        return custom_type()\n\n      default:\n        // fallback for something weird\n        return JSON.stringify(object);\n    }\n  }\n\n  if (options._stringify_key) {\n    return _stringify_key(object);\n  }\n\n  if (typeof object === 'object') {\n    if (object === null) return 'null';\n    var str;\n\n    if (typeof (str = object.toJSON5) === 'function' && options.mode !== 'json') {\n      object = str.call(object, currentKey);\n    } else if (typeof (str = object.toJSON) === 'function') {\n      object = str.call(object, currentKey);\n    }\n\n    if (object === null) return 'null';\n    if (typeof object !== 'object') return _stringify_nonobject(object);\n\n    if (object.constructor === Number || object.constructor === Boolean || object.constructor === String) {\n      object = object.valueOf();\n      return _stringify_nonobject(object);\n    } else if (object.constructor === Date) {\n      // only until we can't do better\n      return _stringify_nonobject(object.toISOString());\n    } else {\n      if (typeof options.replacer === 'function') {\n        object = options.replacer.call(null, currentKey, object);\n        if (typeof object !== 'object') return _stringify_nonobject(object);\n      }\n\n      return _stringify_object(object);\n    }\n  } else {\n    return _stringify_nonobject(object);\n  }\n}\n/*\n * stringify(value, options)\n * or\n * stringify(value, replacer, space)\n *\n * where:\n * value - anything\n * options - object\n * replacer - function or array\n * space - boolean or number or string\n */\n\n\nmodule.exports.stringify = function stringifyJSON(object, options, _space) {\n  // support legacy syntax\n  if (typeof options === 'function' || Array.isArray(options)) {\n    options = {\n      replacer: options\n    };\n  } else if (typeof options === 'object' && options !== null) {// nothing to do\n  } else {\n    options = {};\n  }\n\n  if (_space != null) options.indent = _space;\n  if (options.indent == null) options.indent = '\\t';\n  if (options.quote == null) options.quote = \"'\";\n  if (options.ascii == null) options.ascii = false;\n  if (options.mode == null) options.mode = 'json5';\n\n  if (options.mode === 'json' || options.mode === 'cjson') {\n    // json only supports double quotes (= sucks)\n    options.quote = '\"'; // json don't support trailing commas (= sucks)\n\n    options.no_trailing_comma = true; // json don't support unquoted property names (= sucks)\n\n    options.quote_keys = true;\n  } // why would anyone use such objects?\n\n\n  if (typeof options.indent === 'object') {\n    if (options.indent.constructor === Number || options.indent.constructor === Boolean || options.indent.constructor === String) options.indent = options.indent.valueOf();\n  } // gap is capped at 10 characters\n\n\n  if (typeof options.indent === 'number') {\n    if (options.indent >= 0) {\n      options.indent = Array(Math.min(~~options.indent, 10) + 1).join(' ');\n    } else {\n      options.indent = false;\n    }\n  } else if (typeof options.indent === 'string') {\n    options.indent = options.indent.substr(0, 10);\n  }\n\n  if (options._splitMin == null) options._splitMin = 50;\n  if (options._splitMax == null) options._splitMax = 70;\n  return _stringify(object, options, 0, '');\n};","map":{"version":3,"sources":["/home/dev/Documentos/Projects/github-clone/node_modules/jju/lib/stringify.js"],"names":["Uni","require","f","name","Object","defineProperty","constructor","prototype","get","toString","match","value","special_chars","hasOwnProperty","escapable","_stringify","object","options","recursiveLvl","currentKey","json5","mode","indent","str","add","prefix","_prefix","result","count","i","_stringify_key","key","quote_keys","_stringify_str","String","Number","length","isIdentifierPart","isIdentifierStart","chr","charCodeAt","ascii","slice","exec","quote","quoteChr","isLineTerminator","Error","_stringify_object","len","braces","Array","isArray","s","undefined","push","fn","t","replacer","call","keys","sort_keys","sort","forEach","_splitMax","_splitMin","no_trailing_comma","substring","innerStuff","map","x","join","_stringify_nonobject","isFinite","JSON","stringify","toJSON5","toJSON","Boolean","valueOf","Date","toISOString","module","exports","stringifyJSON","_space","Math","min","substr"],"mappings":"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","sourcesContent":["\nvar Uni = require('./unicode')\n\n// Fix Function#name on browsers that do not support it (IE)\n// http://stackoverflow.com/questions/6903762/function-name-not-supported-in-ie\nif (!(function f(){}).name) {\n  Object.defineProperty((function(){}).constructor.prototype, 'name', {\n    get: function() {\n      var name = this.toString().match(/^\\s*function\\s*(\\S*)\\s*\\(/)[1]\n      // For better performance only parse once, and then cache the\n      // result through a new accessor for repeated access.\n      Object.defineProperty(this, 'name', { value: name })\n      return name\n    }\n  })\n}\n\nvar special_chars = {\n  0: '\\\\0', // this is not an octal literal\n  8: '\\\\b',\n  9: '\\\\t',\n  10: '\\\\n',\n  11: '\\\\v',\n  12: '\\\\f',\n  13: '\\\\r',\n  92: '\\\\\\\\',\n}\n\n// for oddballs\nvar hasOwnProperty = Object.prototype.hasOwnProperty\n\n// some people escape those, so I'd copy this to be safe\nvar escapable = /[\\x00-\\x1f\\x7f-\\x9f\\u00ad\\u0600-\\u0604\\u070f\\u17b4\\u17b5\\u200c-\\u200f\\u2028-\\u202f\\u2060-\\u206f\\ufeff\\ufff0-\\uffff]/\n\nfunction _stringify(object, options, recursiveLvl, currentKey) {\n  var json5 = (options.mode === 'json5' || !options.mode)\n  /*\n   * Opinionated decision warning:\n   *\n   * Objects are serialized in the following form:\n   * { type: 'Class', data: DATA }\n   *\n   * Class is supposed to be a function, and new Class(DATA) is\n   * supposed to be equivalent to the original value\n   */\n  /*function custom_type() {\n    return stringify({\n      type: object.constructor.name,\n      data: object.toString()\n    })\n  }*/\n\n  // if add, it's an internal indentation, so we add 1 level and a eol\n  // if !add, it's an ending indentation, so we just indent\n  function indent(str, add) {\n    var prefix = options._prefix ? options._prefix : ''\n    if (!options.indent) return prefix + str\n    var result = ''\n    var count = recursiveLvl + (add || 0)\n    for (var i=0; i<count; i++) result += options.indent\n    return prefix + result + str + (add ? '\\n' : '')\n  }\n\n  function _stringify_key(key) {\n    if (options.quote_keys) return _stringify_str(key)\n    if (String(Number(key)) == key && key[0] != '-') return key\n    if (key == '') return _stringify_str(key)\n\n    var result = ''\n    for (var i=0; i<key.length; i++) {\n      if (i > 0) {\n        if (!Uni.isIdentifierPart(key[i]))\n          return _stringify_str(key)\n\n      } else {\n        if (!Uni.isIdentifierStart(key[i]))\n          return _stringify_str(key)\n      }\n\n      var chr = key.charCodeAt(i)\n\n      if (options.ascii) {\n        if (chr < 0x80) {\n          result += key[i]\n\n        } else {\n          result += '\\\\u' + ('0000' + chr.toString(16)).slice(-4)\n        }\n\n      } else {\n        if (escapable.exec(key[i])) {\n          result += '\\\\u' + ('0000' + chr.toString(16)).slice(-4)\n\n        } else {\n          result += key[i]\n        }\n      }\n    }\n\n    return result\n  }\n\n  function _stringify_str(key) {\n    var quote = options.quote\n    var quoteChr = quote.charCodeAt(0)\n\n    var result = ''\n    for (var i=0; i<key.length; i++) {\n      var chr = key.charCodeAt(i)\n\n      if (chr < 0x10) {\n        if (chr === 0 && json5) {\n          result += '\\\\0'\n        } else if (chr >= 8 && chr <= 13 && (json5 || chr !== 11)) {\n          result += special_chars[chr]\n        } else if (json5) {\n          result += '\\\\x0' + chr.toString(16)\n        } else {\n          result += '\\\\u000' + chr.toString(16)\n        }\n\n      } else if (chr < 0x20) {\n        if (json5) {\n          result += '\\\\x' + chr.toString(16)\n        } else {\n          result += '\\\\u00' + chr.toString(16)\n        }\n\n      } else if (chr >= 0x20 && chr < 0x80) {\n        // ascii range\n        if (chr === 47 && i && key[i-1] === '<') {\n          // escaping slashes in </script>\n          result += '\\\\' + key[i]\n\n        } else if (chr === 92) {\n          result += '\\\\\\\\'\n\n        } else if (chr === quoteChr) {\n          result += '\\\\' + quote\n\n        } else {\n          result += key[i]\n        }\n\n      } else if (options.ascii || Uni.isLineTerminator(key[i]) || escapable.exec(key[i])) {\n        if (chr < 0x100) {\n          if (json5) {\n            result += '\\\\x' + chr.toString(16)\n          } else {\n            result += '\\\\u00' + chr.toString(16)\n          }\n\n        } else if (chr < 0x1000) {\n          result += '\\\\u0' + chr.toString(16)\n\n        } else if (chr < 0x10000) {\n          result += '\\\\u' + chr.toString(16)\n\n        } else {\n          throw Error('weird codepoint')\n        }\n      } else {\n        result += key[i]\n      }\n    }\n    return quote + result + quote\n  }\n\n  function _stringify_object() {\n    if (object === null) return 'null'\n    var result = []\n      , len = 0\n      , braces\n\n    if (Array.isArray(object)) {\n      braces = '[]'\n      for (var i=0; i<object.length; i++) {\n        var s = _stringify(object[i], options, recursiveLvl+1, String(i))\n        if (s === undefined) s = 'null'\n        len += s.length + 2\n        result.push(s + ',')\n      }\n\n    } else {\n      braces = '{}'\n      var fn = function(key) {\n        var t = _stringify(object[key], options, recursiveLvl+1, key)\n        if (t !== undefined) {\n          t = _stringify_key(key) + ':' + (options.indent ? ' ' : '') + t + ','\n          len += t.length + 1\n          result.push(t)\n        }\n      }\n\n      if (Array.isArray(options.replacer)) {\n        for (var i=0; i<options.replacer.length; i++)\n          if (hasOwnProperty.call(object, options.replacer[i]))\n            fn(options.replacer[i])\n      } else {\n        var keys = Object.keys(object)\n        if (options.sort_keys)\n          keys = keys.sort(typeof(options.sort_keys) === 'function'\n                           ? options.sort_keys : undefined)\n        keys.forEach(fn)\n      }\n    }\n\n    // objects shorter than 30 characters are always inlined\n    // objects longer than 60 characters are always splitted to multiple lines\n    // anything in the middle depends on indentation level\n    len -= 2\n    if (options.indent && (len > options._splitMax - recursiveLvl * options.indent.length || len > options._splitMin) ) {\n      // remove trailing comma in multiline if asked to\n      if (options.no_trailing_comma && result.length) {\n        result[result.length-1] = result[result.length-1].substring(0, result[result.length-1].length-1)\n      }\n\n      var innerStuff = result.map(function(x) {return indent(x, 1)}).join('')\n      return braces[0]\n          + (options.indent ? '\\n' : '')\n          + innerStuff\n          + indent(braces[1])\n    } else {\n      // always remove trailing comma in one-lined arrays\n      if (result.length) {\n        result[result.length-1] = result[result.length-1].substring(0, result[result.length-1].length-1)\n      }\n\n      var innerStuff = result.join(options.indent ? ' ' : '')\n      return braces[0]\n          + innerStuff\n          + braces[1]\n    }\n  }\n\n  function _stringify_nonobject(object) {\n    if (typeof(options.replacer) === 'function') {\n      object = options.replacer.call(null, currentKey, object)\n    }\n\n    switch(typeof(object)) {\n      case 'string':\n        return _stringify_str(object)\n\n      case 'number':\n        if (object === 0 && 1/object < 0) {\n          // Opinionated decision warning:\n          //\n          // I want cross-platform negative zero in all js engines\n          // I know they're equal, but why lose that tiny bit of\n          // information needlessly?\n          return '-0'\n        }\n        if (!json5 && !Number.isFinite(object)) {\n          // json don't support infinity (= sucks)\n          return 'null'\n        }\n        return object.toString()\n\n      case 'boolean':\n        return object.toString()\n\n      case 'undefined':\n        return undefined\n\n      case 'function':\n//        return custom_type()\n\n      default:\n        // fallback for something weird\n        return JSON.stringify(object)\n    }\n  }\n\n  if (options._stringify_key) {\n    return _stringify_key(object)\n  }\n\n  if (typeof(object) === 'object') {\n    if (object === null) return 'null'\n\n    var str\n    if (typeof(str = object.toJSON5) === 'function' && options.mode !== 'json') {\n      object = str.call(object, currentKey)\n\n    } else if (typeof(str = object.toJSON) === 'function') {\n      object = str.call(object, currentKey)\n    }\n\n    if (object === null) return 'null'\n    if (typeof(object) !== 'object') return _stringify_nonobject(object)\n\n    if (object.constructor === Number || object.constructor === Boolean || object.constructor === String) {\n      object = object.valueOf()\n      return _stringify_nonobject(object)\n\n    } else if (object.constructor === Date) {\n      // only until we can't do better\n      return _stringify_nonobject(object.toISOString())\n\n    } else {\n      if (typeof(options.replacer) === 'function') {\n        object = options.replacer.call(null, currentKey, object)\n        if (typeof(object) !== 'object') return _stringify_nonobject(object)\n      }\n\n      return _stringify_object(object)\n    }\n  } else {\n    return _stringify_nonobject(object)\n  }\n}\n\n/*\n * stringify(value, options)\n * or\n * stringify(value, replacer, space)\n *\n * where:\n * value - anything\n * options - object\n * replacer - function or array\n * space - boolean or number or string\n */\nmodule.exports.stringify = function stringifyJSON(object, options, _space) {\n  // support legacy syntax\n  if (typeof(options) === 'function' || Array.isArray(options)) {\n    options = {\n      replacer: options\n    }\n  } else if (typeof(options) === 'object' && options !== null) {\n    // nothing to do\n  } else {\n    options = {}\n  }\n  if (_space != null) options.indent = _space\n\n  if (options.indent == null) options.indent = '\\t'\n  if (options.quote == null) options.quote = \"'\"\n  if (options.ascii == null) options.ascii = false\n  if (options.mode == null) options.mode = 'json5'\n\n  if (options.mode === 'json' || options.mode === 'cjson') {\n    // json only supports double quotes (= sucks)\n    options.quote = '\"'\n\n    // json don't support trailing commas (= sucks)\n    options.no_trailing_comma = true\n\n    // json don't support unquoted property names (= sucks)\n    options.quote_keys = true\n  }\n\n  // why would anyone use such objects?\n  if (typeof(options.indent) === 'object') {\n    if (options.indent.constructor === Number\n    ||  options.indent.constructor === Boolean\n    ||  options.indent.constructor === String)\n      options.indent = options.indent.valueOf()\n  }\n\n  // gap is capped at 10 characters\n  if (typeof(options.indent) === 'number') {\n    if (options.indent >= 0) {\n      options.indent = Array(Math.min(~~options.indent, 10) + 1).join(' ')\n    } else {\n      options.indent = false\n    }\n  } else if (typeof(options.indent) === 'string') {\n    options.indent = options.indent.substr(0, 10)\n  }\n\n  if (options._splitMin == null) options._splitMin = 50\n  if (options._splitMax == null) options._splitMax = 70\n\n  return _stringify(object, options, 0, '')\n}\n\n"]},"metadata":{},"sourceType":"script"}