{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nconst cli_color_1 = require(\"cli-color\");\n\nconst Table = require(\"cli-table\");\n\nconst command_1 = require(\"../command\");\n\nconst api_1 = require(\"../hosting/api\");\n\nconst requirePermissions_1 = require(\"../requirePermissions\");\n\nconst projectUtils_1 = require(\"../projectUtils\");\n\nconst logger_1 = require(\"../logger\");\n\nconst TABLE_HEAD = [\"Site ID\", \"Default URL\", \"App ID (if set)\"];\nexports.default = new command_1.Command(\"hosting:sites:list\").description(\"list Firebase Hosting sites\").before(requirePermissions_1.requirePermissions, [\"firebasehosting.sites.get\"]).action(async options => {\n  const projectId = projectUtils_1.needProjectId(options);\n  const sites = await api_1.listSites(projectId);\n  const table = new Table({\n    head: TABLE_HEAD,\n    style: {\n      head: [\"green\"]\n    }\n  });\n\n  for (const site of sites) {\n    const siteId = site.name.split(\"/\").pop();\n    table.push([siteId, site.defaultUrl, site.appId || \"--\"]);\n  }\n\n  logger_1.logger.info();\n  logger_1.logger.info(`Sites for project ${cli_color_1.bold(projectId)}`);\n  logger_1.logger.info();\n  logger_1.logger.info(table.toString());\n  return {\n    sites\n  };\n});","map":{"version":3,"sources":["/home/dev/Documentos/Projects/github-clone/node_modules/firebase-tools/lib/commands/hosting-sites-list.js"],"names":["Object","defineProperty","exports","value","cli_color_1","require","Table","command_1","api_1","requirePermissions_1","projectUtils_1","logger_1","TABLE_HEAD","default","Command","description","before","requirePermissions","action","options","projectId","needProjectId","sites","listSites","table","head","style","site","siteId","name","split","pop","push","defaultUrl","appId","logger","info","bold","toString"],"mappings":"AAAA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;;AACA,MAAMC,WAAW,GAAGC,OAAO,CAAC,WAAD,CAA3B;;AACA,MAAMC,KAAK,GAAGD,OAAO,CAAC,WAAD,CAArB;;AACA,MAAME,SAAS,GAAGF,OAAO,CAAC,YAAD,CAAzB;;AACA,MAAMG,KAAK,GAAGH,OAAO,CAAC,gBAAD,CAArB;;AACA,MAAMI,oBAAoB,GAAGJ,OAAO,CAAC,uBAAD,CAApC;;AACA,MAAMK,cAAc,GAAGL,OAAO,CAAC,iBAAD,CAA9B;;AACA,MAAMM,QAAQ,GAAGN,OAAO,CAAC,WAAD,CAAxB;;AACA,MAAMO,UAAU,GAAG,CAAC,SAAD,EAAY,aAAZ,EAA2B,iBAA3B,CAAnB;AACAV,OAAO,CAACW,OAAR,GAAkB,IAAIN,SAAS,CAACO,OAAd,CAAsB,oBAAtB,EACbC,WADa,CACD,6BADC,EAEbC,MAFa,CAENP,oBAAoB,CAACQ,kBAFf,EAEmC,CAAC,2BAAD,CAFnC,EAGbC,MAHa,CAGN,MAAOC,OAAP,IAAmB;AAC3B,QAAMC,SAAS,GAAGV,cAAc,CAACW,aAAf,CAA6BF,OAA7B,CAAlB;AACA,QAAMG,KAAK,GAAG,MAAMd,KAAK,CAACe,SAAN,CAAgBH,SAAhB,CAApB;AACA,QAAMI,KAAK,GAAG,IAAIlB,KAAJ,CAAU;AAAEmB,IAAAA,IAAI,EAAEb,UAAR;AAAoBc,IAAAA,KAAK,EAAE;AAAED,MAAAA,IAAI,EAAE,CAAC,OAAD;AAAR;AAA3B,GAAV,CAAd;;AACA,OAAK,MAAME,IAAX,IAAmBL,KAAnB,EAA0B;AACtB,UAAMM,MAAM,GAAGD,IAAI,CAACE,IAAL,CAAUC,KAAV,CAAgB,GAAhB,EAAqBC,GAArB,EAAf;AACAP,IAAAA,KAAK,CAACQ,IAAN,CAAW,CAACJ,MAAD,EAASD,IAAI,CAACM,UAAd,EAA0BN,IAAI,CAACO,KAAL,IAAc,IAAxC,CAAX;AACH;;AACDvB,EAAAA,QAAQ,CAACwB,MAAT,CAAgBC,IAAhB;AACAzB,EAAAA,QAAQ,CAACwB,MAAT,CAAgBC,IAAhB,CAAsB,qBAAoBhC,WAAW,CAACiC,IAAZ,CAAiBjB,SAAjB,CAA4B,EAAtE;AACAT,EAAAA,QAAQ,CAACwB,MAAT,CAAgBC,IAAhB;AACAzB,EAAAA,QAAQ,CAACwB,MAAT,CAAgBC,IAAhB,CAAqBZ,KAAK,CAACc,QAAN,EAArB;AACA,SAAO;AAAEhB,IAAAA;AAAF,GAAP;AACH,CAhBiB,CAAlB","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst cli_color_1 = require(\"cli-color\");\nconst Table = require(\"cli-table\");\nconst command_1 = require(\"../command\");\nconst api_1 = require(\"../hosting/api\");\nconst requirePermissions_1 = require(\"../requirePermissions\");\nconst projectUtils_1 = require(\"../projectUtils\");\nconst logger_1 = require(\"../logger\");\nconst TABLE_HEAD = [\"Site ID\", \"Default URL\", \"App ID (if set)\"];\nexports.default = new command_1.Command(\"hosting:sites:list\")\n    .description(\"list Firebase Hosting sites\")\n    .before(requirePermissions_1.requirePermissions, [\"firebasehosting.sites.get\"])\n    .action(async (options) => {\n    const projectId = projectUtils_1.needProjectId(options);\n    const sites = await api_1.listSites(projectId);\n    const table = new Table({ head: TABLE_HEAD, style: { head: [\"green\"] } });\n    for (const site of sites) {\n        const siteId = site.name.split(\"/\").pop();\n        table.push([siteId, site.defaultUrl, site.appId || \"--\"]);\n    }\n    logger_1.logger.info();\n    logger_1.logger.info(`Sites for project ${cli_color_1.bold(projectId)}`);\n    logger_1.logger.info();\n    logger_1.logger.info(table.toString());\n    return { sites };\n});\n"]},"metadata":{},"sourceType":"script"}