{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.parseExtensionVersionName = exports.parseRef = exports.getExtension = exports.deleteExtension = exports.unpublishExtension = exports.publishExtensionVersion = exports.registerPublisherProfile = exports.listExtensionVersions = exports.listExtensions = exports.getExtensionVersion = exports.getSource = exports.createSource = exports.updateInstanceFromRegistry = exports.updateInstance = exports.configureInstance = exports.listInstances = exports.getInstance = exports.deleteInstance = exports.createInstanceFromExtensionVersion = exports.createInstanceFromSource = exports.createInstance = exports.ParamType = exports.Visibility = exports.RegistryLaunchStage = void 0;\n\nconst semver = require(\"semver\");\n\nconst yaml = require(\"js-yaml\");\n\nconst _ = require(\"lodash\");\n\nconst clc = require(\"cli-color\");\n\nconst marked = require(\"marked\");\n\nconst api = require(\"../api\");\n\nconst logger_1 = require(\"../logger\");\n\nconst operationPoller = require(\"../operation-poller\");\n\nconst error_1 = require(\"../error\");\n\nconst VERSION = \"v1beta\";\nconst PAGE_SIZE_MAX = 100;\nconst refRegex = new RegExp(/^([^/@\\n]+)\\/{1}([^/@\\n]+)(@{1}([a-z0-9.-]+)|)$/);\nvar RegistryLaunchStage;\n\n(function (RegistryLaunchStage) {\n  RegistryLaunchStage[\"EXPERIMENTAL\"] = \"EXPERIMENTAL\";\n  RegistryLaunchStage[\"BETA\"] = \"BETA\";\n  RegistryLaunchStage[\"GA\"] = \"GA\";\n  RegistryLaunchStage[\"DEPRECATED\"] = \"DEPRECATED\";\n  RegistryLaunchStage[\"REGISTRY_LAUNCH_STAGE_UNSPECIFIED\"] = \"REGISTRY_LAUNCH_STAGE_UNSPECIFIED\";\n})(RegistryLaunchStage = exports.RegistryLaunchStage || (exports.RegistryLaunchStage = {}));\n\nvar Visibility;\n\n(function (Visibility) {\n  Visibility[\"UNLISTED\"] = \"unlisted\";\n  Visibility[\"PUBLIC\"] = \"public\";\n})(Visibility = exports.Visibility || (exports.Visibility = {}));\n\nvar ParamType;\n\n(function (ParamType) {\n  ParamType[\"STRING\"] = \"STRING\";\n  ParamType[\"SELECT\"] = \"SELECT\";\n  ParamType[\"MULTISELECT\"] = \"MULTISELECT\";\n})(ParamType = exports.ParamType || (exports.ParamType = {}));\n\nasync function createInstance(projectId, instanceId, config) {\n  const createRes = await api.request(\"POST\", `/${VERSION}/projects/${projectId}/instances/`, {\n    auth: true,\n    origin: api.extensionsOrigin,\n    data: {\n      name: `projects/${projectId}/instances/${instanceId}`,\n      config: config\n    }\n  });\n  const pollRes = await operationPoller.pollOperation({\n    apiOrigin: api.extensionsOrigin,\n    apiVersion: VERSION,\n    operationResourceName: createRes.body.name,\n    masterTimeout: 600000\n  });\n  return pollRes;\n}\n\nexports.createInstance = createInstance;\n\nasync function createInstanceFromSource(projectId, instanceId, extensionSource, params) {\n  const config = {\n    source: {\n      name: extensionSource.name\n    },\n    params\n  };\n  return createInstance(projectId, instanceId, config);\n}\n\nexports.createInstanceFromSource = createInstanceFromSource;\n\nasync function createInstanceFromExtensionVersion(projectId, instanceId, extensionVersion, params) {\n  const {\n    publisherId,\n    extensionId,\n    version\n  } = parseRef(extensionVersion.ref);\n  const config = {\n    extensionRef: `${publisherId}/${extensionId}`,\n    extensionVersion: version || \"\",\n    params\n  };\n  return createInstance(projectId, instanceId, config);\n}\n\nexports.createInstanceFromExtensionVersion = createInstanceFromExtensionVersion;\n\nasync function deleteInstance(projectId, instanceId) {\n  const deleteRes = await api.request(\"DELETE\", `/${VERSION}/projects/${projectId}/instances/${instanceId}`, {\n    auth: true,\n    origin: api.extensionsOrigin\n  });\n  const pollRes = await operationPoller.pollOperation({\n    apiOrigin: api.extensionsOrigin,\n    apiVersion: VERSION,\n    operationResourceName: deleteRes.body.name,\n    masterTimeout: 600000\n  });\n  return pollRes;\n}\n\nexports.deleteInstance = deleteInstance;\n\nasync function getInstance(projectId, instanceId, options = {}) {\n  const res = await api.request(\"GET\", `/${VERSION}/projects/${projectId}/instances/${instanceId}`, _.assign({\n    auth: true,\n    origin: api.extensionsOrigin\n  }, options));\n  return res.body;\n}\n\nexports.getInstance = getInstance;\n\nasync function listInstances(projectId) {\n  const instances = [];\n\n  const getNextPage = async pageToken => {\n    const res = await api.request(\"GET\", `/${VERSION}/projects/${projectId}/instances`, {\n      auth: true,\n      origin: api.extensionsOrigin,\n      query: {\n        pageSize: PAGE_SIZE_MAX,\n        pageToken\n      }\n    });\n\n    if (Array.isArray(res.body.instances)) {\n      instances.push(...res.body.instances);\n    }\n\n    if (res.body.nextPageToken) {\n      await getNextPage(res.body.nextPageToken);\n    }\n  };\n\n  await getNextPage();\n  return instances;\n}\n\nexports.listInstances = listInstances;\n\nasync function configureInstance(projectId, instanceId, params) {\n  const res = await patchInstance(projectId, instanceId, \"config.params\", {\n    config: {\n      params\n    }\n  });\n  return res;\n}\n\nexports.configureInstance = configureInstance;\n\nasync function updateInstance(projectId, instanceId, extensionSource, params) {\n  const body = {\n    config: {\n      source: {\n        name: extensionSource.name\n      }\n    }\n  };\n  let updateMask = \"config.source.name\";\n\n  if (params) {\n    body.params = params;\n    updateMask += \",config.params\";\n  }\n\n  return await patchInstance(projectId, instanceId, updateMask, body);\n}\n\nexports.updateInstance = updateInstance;\n\nasync function updateInstanceFromRegistry(projectId, instanceId, extRef, params) {\n  const {\n    publisherId,\n    extensionId,\n    version\n  } = parseRef(extRef);\n  const body = {\n    config: {\n      extensionRef: `${publisherId}/${extensionId}`,\n      extensionVersion: version\n    }\n  };\n  let updateMask = \"config.extension_ref,config.extension_version\";\n\n  if (params) {\n    body.params = params;\n    updateMask += \",config.params\";\n  }\n\n  return await patchInstance(projectId, instanceId, updateMask, body);\n}\n\nexports.updateInstanceFromRegistry = updateInstanceFromRegistry;\n\nasync function patchInstance(projectId, instanceId, updateMask, data) {\n  const updateRes = await api.request(\"PATCH\", `/${VERSION}/projects/${projectId}/instances/${instanceId}`, {\n    auth: true,\n    origin: api.extensionsOrigin,\n    query: {\n      updateMask\n    },\n    data\n  });\n  const pollRes = await operationPoller.pollOperation({\n    apiOrigin: api.extensionsOrigin,\n    apiVersion: VERSION,\n    operationResourceName: updateRes.body.name,\n    masterTimeout: 600000\n  });\n  return pollRes;\n}\n\nfunction populateResourceProperties(spec) {\n  if (spec) {\n    spec.resources.forEach(r => {\n      try {\n        if (r.propertiesYaml) {\n          r.properties = yaml.safeLoad(r.propertiesYaml);\n        }\n      } catch (err) {\n        logger_1.logger.debug(`[ext] failed to parse resource properties yaml: ${err}`);\n      }\n    });\n  }\n}\n\nasync function createSource(projectId, packageUri, extensionRoot) {\n  const createRes = await api.request(\"POST\", `/${VERSION}/projects/${projectId}/sources/`, {\n    auth: true,\n    origin: api.extensionsOrigin,\n    data: {\n      packageUri,\n      extensionRoot\n    }\n  });\n  const pollRes = await operationPoller.pollOperation({\n    apiOrigin: api.extensionsOrigin,\n    apiVersion: VERSION,\n    operationResourceName: createRes.body.name,\n    masterTimeout: 600000\n  });\n\n  if (pollRes.spec) {\n    populateResourceProperties(pollRes.spec);\n  }\n\n  return pollRes;\n}\n\nexports.createSource = createSource;\n\nfunction getSource(sourceName) {\n  return api.request(\"GET\", `/${VERSION}/${sourceName}`, {\n    auth: true,\n    origin: api.extensionsOrigin\n  }).then(res => {\n    if (res.body.spec) {\n      populateResourceProperties(res.body.spec);\n    }\n\n    return res.body;\n  });\n}\n\nexports.getSource = getSource;\n\nasync function getExtensionVersion(ref) {\n  const {\n    publisherId,\n    extensionId,\n    version\n  } = parseRef(ref);\n\n  if (!version) {\n    throw new error_1.FirebaseError(`ExtensionVersion ref \"${ref}\" must supply a version.`);\n  }\n\n  try {\n    const res = await api.request(\"GET\", `/${VERSION}/publishers/${publisherId}/extensions/${extensionId}/versions/${version}`, {\n      auth: true,\n      origin: api.extensionsOrigin\n    });\n\n    if (res.body.spec) {\n      populateResourceProperties(res.body.spec);\n    }\n\n    return res.body;\n  } catch (err) {\n    if (err.status === 404) {\n      throw refNotFoundError(publisherId, extensionId, version);\n    } else if (err instanceof error_1.FirebaseError) {\n      throw err;\n    }\n\n    throw new error_1.FirebaseError(`Failed to query the extension version '${clc.bold(ref)}': ${err}`);\n  }\n}\n\nexports.getExtensionVersion = getExtensionVersion;\n\nasync function listExtensions(publisherId) {\n  const extensions = [];\n\n  const getNextPage = async pageToken => {\n    const res = await api.request(\"GET\", `/${VERSION}/publishers/${publisherId}/extensions`, {\n      auth: true,\n      origin: api.extensionsOrigin,\n      showUnpublished: false,\n      query: {\n        pageSize: PAGE_SIZE_MAX,\n        pageToken\n      }\n    });\n\n    if (Array.isArray(res.body.extensions)) {\n      extensions.push(...res.body.extensions);\n    }\n\n    if (res.body.nextPageToken) {\n      await getNextPage(res.body.nextPageToken);\n    }\n  };\n\n  await getNextPage();\n  return extensions;\n}\n\nexports.listExtensions = listExtensions;\n\nasync function listExtensionVersions(ref, filter) {\n  const {\n    publisherId,\n    extensionId\n  } = parseRef(ref);\n  const extensionVersions = [];\n\n  const getNextPage = async pageToken => {\n    const res = await api.request(\"GET\", `/${VERSION}/publishers/${publisherId}/extensions/${extensionId}/versions`, {\n      auth: true,\n      origin: api.extensionsOrigin,\n      query: {\n        filter,\n        pageSize: PAGE_SIZE_MAX,\n        pageToken\n      }\n    });\n\n    if (Array.isArray(res.body.extensionVersions)) {\n      extensionVersions.push(...res.body.extensionVersions);\n    }\n\n    if (res.body.nextPageToken) {\n      await getNextPage(res.body.nextPageToken);\n    }\n  };\n\n  await getNextPage();\n  return extensionVersions;\n}\n\nexports.listExtensionVersions = listExtensionVersions;\n\nasync function registerPublisherProfile(projectId, publisherId) {\n  const res = await api.request(\"POST\", `/${VERSION}/projects/${projectId}/publisherProfile:register`, {\n    auth: true,\n    origin: api.extensionsOrigin,\n    data: {\n      publisherId\n    }\n  });\n  return res.body;\n}\n\nexports.registerPublisherProfile = registerPublisherProfile;\n\nasync function publishExtensionVersion(ref, packageUri, extensionRoot) {\n  const {\n    publisherId,\n    extensionId,\n    version\n  } = parseRef(ref);\n\n  if (!version) {\n    throw new error_1.FirebaseError(`ExtensionVersion ref \"${ref}\" must supply a version.`);\n  }\n\n  const publishRes = await api.request(\"POST\", `/${VERSION}/publishers/${publisherId}/extensions/${extensionId}/versions:publish`, {\n    auth: true,\n    origin: api.extensionsOrigin,\n    data: {\n      versionId: version,\n      packageUri,\n      extensionRoot: extensionRoot || \"/\"\n    }\n  });\n  const pollRes = await operationPoller.pollOperation({\n    apiOrigin: api.extensionsOrigin,\n    apiVersion: VERSION,\n    operationResourceName: publishRes.body.name,\n    masterTimeout: 600000\n  });\n  return pollRes;\n}\n\nexports.publishExtensionVersion = publishExtensionVersion;\n\nasync function unpublishExtension(ref) {\n  const {\n    publisherId,\n    extensionId,\n    version\n  } = parseRef(ref);\n\n  if (version) {\n    throw new error_1.FirebaseError(`Extension reference \"${ref}\" must not contain a version.`);\n  }\n\n  const url = `/${VERSION}/publishers/${publisherId}/extensions/${extensionId}:unpublish`;\n\n  try {\n    await api.request(\"POST\", url, {\n      auth: true,\n      origin: api.extensionsOrigin\n    });\n  } catch (err) {\n    if (err.status === 403) {\n      throw new error_1.FirebaseError(`You are not the owner of extension '${clc.bold(ref)}' and don’t have the correct permissions to unpublish this extension.`, {\n        status: err.status\n      });\n    } else if (err instanceof error_1.FirebaseError) {\n      throw err;\n    }\n\n    throw new error_1.FirebaseError(`Error occurred unpublishing extension '${ref}': ${err}`, {\n      status: err.status\n    });\n  }\n}\n\nexports.unpublishExtension = unpublishExtension;\n\nasync function deleteExtension(ref) {\n  const {\n    publisherId,\n    extensionId,\n    version\n  } = parseRef(ref);\n\n  if (version) {\n    throw new error_1.FirebaseError(`Extension reference \"${ref}\" must not contain a version.`);\n  }\n\n  const url = `/${VERSION}/publishers/${publisherId}/extensions/${extensionId}`;\n\n  try {\n    await api.request(\"DELETE\", url, {\n      auth: true,\n      origin: api.extensionsOrigin\n    });\n  } catch (err) {\n    if (err.status === 403) {\n      throw new error_1.FirebaseError(`You are not the owner of extension '${clc.bold(ref)}' and don’t have the correct permissions to delete this extension.`, {\n        status: err.status\n      });\n    } else if (err.status === 404) {\n      throw new error_1.FirebaseError(`Extension ${clc.bold(ref)} was not found.`);\n    } else if (err instanceof error_1.FirebaseError) {\n      throw err;\n    }\n\n    throw new error_1.FirebaseError(`Error occurred delete extension '${ref}': ${err}`, {\n      status: err.status\n    });\n  }\n}\n\nexports.deleteExtension = deleteExtension;\n\nasync function getExtension(ref) {\n  const {\n    publisherId,\n    extensionId\n  } = parseRef(ref);\n\n  try {\n    const res = await api.request(\"GET\", `/${VERSION}/publishers/${publisherId}/extensions/${extensionId}`, {\n      auth: true,\n      origin: api.extensionsOrigin\n    });\n    return res.body;\n  } catch (err) {\n    if (err.status === 404) {\n      throw refNotFoundError(publisherId, extensionId);\n    } else if (err instanceof error_1.FirebaseError) {\n      throw err;\n    }\n\n    throw new error_1.FirebaseError(`Failed to query the extension '${clc.bold(ref)}': ${err}`, {\n      status: err.status\n    });\n  }\n}\n\nexports.getExtension = getExtension;\n\nfunction refNotFoundError(publisherId, extensionId, versionId) {\n  const versionRef = `${publisherId}/${extensionId}@${versionId}`;\n  const extensionRef = `${publisherId}/${extensionId}`;\n  return new error_1.FirebaseError(`The extension reference '${clc.bold(versionId ? versionRef : extensionRef)}' doesn't exist. This could happen for two reasons:\\n` + `  -The publisher ID '${clc.bold(publisherId)}' doesn't exist or could be misspelled\\n` + `  -The name of the ${versionId ? \"extension version\" : \"extension\"} '${clc.bold(versionId ? `${extensionId}@${versionId}` : extensionId)}' doesn't exist or could be misspelled\\n\\n` + `Please correct the extension reference and try again. If you meant to install an extension from a local source, please provide a relative path prefixed with '${clc.bold(\"./\")}', '${clc.bold(\"../\")}', or '${clc.bold(\"~/\")}'. Learn more about local extension installation at ${marked(\"[https://firebase.google.com/docs/extensions/alpha/install-extensions_community#install](https://firebase.google.com/docs/extensions/alpha/install-extensions_community#install).\")}`, {\n    status: 404\n  });\n}\n\nfunction parseRef(ref) {\n  const parts = refRegex.exec(ref);\n\n  if (parts && (parts.length == 5 || parts.length == 7)) {\n    const publisherId = parts[1];\n    const extensionId = parts[2];\n    const version = parts[4];\n\n    if (version && !semver.valid(version) && version !== \"latest\") {\n      throw new error_1.FirebaseError(`Extension reference ${ref} contains an invalid version ${version}.`);\n    }\n\n    return {\n      publisherId,\n      extensionId,\n      version\n    };\n  }\n\n  throw new error_1.FirebaseError(\"Extension reference must be in format '{publisher}/{extension}(@{version})'.\");\n}\n\nexports.parseRef = parseRef;\n\nfunction parseExtensionVersionName(extensionVersionName) {\n  const parts = extensionVersionName.split(\"/\");\n\n  if (parts.length !== 6 || parts[0] !== \"publishers\" || parts[2] !== \"extensions\" || parts[4] !== \"versions\") {\n    throw new error_1.FirebaseError(\"Extension version name must be in the format `publishers/<publisherID>/extensions/<extensionID>/versions/<versionID>`.\");\n  }\n\n  const publisherId = parts[1];\n  const extensionId = parts[3];\n  const version = parts[5];\n  return {\n    publisherId,\n    extensionId,\n    version\n  };\n}\n\nexports.parseExtensionVersionName = parseExtensionVersionName;","map":{"version":3,"sources":["/home/dev/Documentos/Projects/github-clone/node_modules/firebase-tools/lib/extensions/extensionsApi.js"],"names":["Object","defineProperty","exports","value","parseExtensionVersionName","parseRef","getExtension","deleteExtension","unpublishExtension","publishExtensionVersion","registerPublisherProfile","listExtensionVersions","listExtensions","getExtensionVersion","getSource","createSource","updateInstanceFromRegistry","updateInstance","configureInstance","listInstances","getInstance","deleteInstance","createInstanceFromExtensionVersion","createInstanceFromSource","createInstance","ParamType","Visibility","RegistryLaunchStage","semver","require","yaml","_","clc","marked","api","logger_1","operationPoller","error_1","VERSION","PAGE_SIZE_MAX","refRegex","RegExp","projectId","instanceId","config","createRes","request","auth","origin","extensionsOrigin","data","name","pollRes","pollOperation","apiOrigin","apiVersion","operationResourceName","body","masterTimeout","extensionSource","params","source","extensionVersion","publisherId","extensionId","version","ref","extensionRef","deleteRes","options","res","assign","instances","getNextPage","pageToken","query","pageSize","Array","isArray","push","nextPageToken","patchInstance","updateMask","extRef","updateRes","populateResourceProperties","spec","resources","forEach","r","propertiesYaml","properties","safeLoad","err","logger","debug","packageUri","extensionRoot","sourceName","then","FirebaseError","status","refNotFoundError","bold","extensions","showUnpublished","filter","extensionVersions","publishRes","versionId","url","versionRef","parts","exec","length","valid","extensionVersionName","split"],"mappings":"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","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.parseExtensionVersionName = exports.parseRef = exports.getExtension = exports.deleteExtension = exports.unpublishExtension = exports.publishExtensionVersion = exports.registerPublisherProfile = exports.listExtensionVersions = exports.listExtensions = exports.getExtensionVersion = exports.getSource = exports.createSource = exports.updateInstanceFromRegistry = exports.updateInstance = exports.configureInstance = exports.listInstances = exports.getInstance = exports.deleteInstance = exports.createInstanceFromExtensionVersion = exports.createInstanceFromSource = exports.createInstance = exports.ParamType = exports.Visibility = exports.RegistryLaunchStage = void 0;\nconst semver = require(\"semver\");\nconst yaml = require(\"js-yaml\");\nconst _ = require(\"lodash\");\nconst clc = require(\"cli-color\");\nconst marked = require(\"marked\");\nconst api = require(\"../api\");\nconst logger_1 = require(\"../logger\");\nconst operationPoller = require(\"../operation-poller\");\nconst error_1 = require(\"../error\");\nconst VERSION = \"v1beta\";\nconst PAGE_SIZE_MAX = 100;\nconst refRegex = new RegExp(/^([^/@\\n]+)\\/{1}([^/@\\n]+)(@{1}([a-z0-9.-]+)|)$/);\nvar RegistryLaunchStage;\n(function (RegistryLaunchStage) {\n    RegistryLaunchStage[\"EXPERIMENTAL\"] = \"EXPERIMENTAL\";\n    RegistryLaunchStage[\"BETA\"] = \"BETA\";\n    RegistryLaunchStage[\"GA\"] = \"GA\";\n    RegistryLaunchStage[\"DEPRECATED\"] = \"DEPRECATED\";\n    RegistryLaunchStage[\"REGISTRY_LAUNCH_STAGE_UNSPECIFIED\"] = \"REGISTRY_LAUNCH_STAGE_UNSPECIFIED\";\n})(RegistryLaunchStage = exports.RegistryLaunchStage || (exports.RegistryLaunchStage = {}));\nvar Visibility;\n(function (Visibility) {\n    Visibility[\"UNLISTED\"] = \"unlisted\";\n    Visibility[\"PUBLIC\"] = \"public\";\n})(Visibility = exports.Visibility || (exports.Visibility = {}));\nvar ParamType;\n(function (ParamType) {\n    ParamType[\"STRING\"] = \"STRING\";\n    ParamType[\"SELECT\"] = \"SELECT\";\n    ParamType[\"MULTISELECT\"] = \"MULTISELECT\";\n})(ParamType = exports.ParamType || (exports.ParamType = {}));\nasync function createInstance(projectId, instanceId, config) {\n    const createRes = await api.request(\"POST\", `/${VERSION}/projects/${projectId}/instances/`, {\n        auth: true,\n        origin: api.extensionsOrigin,\n        data: {\n            name: `projects/${projectId}/instances/${instanceId}`,\n            config: config,\n        },\n    });\n    const pollRes = await operationPoller.pollOperation({\n        apiOrigin: api.extensionsOrigin,\n        apiVersion: VERSION,\n        operationResourceName: createRes.body.name,\n        masterTimeout: 600000,\n    });\n    return pollRes;\n}\nexports.createInstance = createInstance;\nasync function createInstanceFromSource(projectId, instanceId, extensionSource, params) {\n    const config = {\n        source: { name: extensionSource.name },\n        params,\n    };\n    return createInstance(projectId, instanceId, config);\n}\nexports.createInstanceFromSource = createInstanceFromSource;\nasync function createInstanceFromExtensionVersion(projectId, instanceId, extensionVersion, params) {\n    const { publisherId, extensionId, version } = parseRef(extensionVersion.ref);\n    const config = {\n        extensionRef: `${publisherId}/${extensionId}`,\n        extensionVersion: version || \"\",\n        params,\n    };\n    return createInstance(projectId, instanceId, config);\n}\nexports.createInstanceFromExtensionVersion = createInstanceFromExtensionVersion;\nasync function deleteInstance(projectId, instanceId) {\n    const deleteRes = await api.request(\"DELETE\", `/${VERSION}/projects/${projectId}/instances/${instanceId}`, {\n        auth: true,\n        origin: api.extensionsOrigin,\n    });\n    const pollRes = await operationPoller.pollOperation({\n        apiOrigin: api.extensionsOrigin,\n        apiVersion: VERSION,\n        operationResourceName: deleteRes.body.name,\n        masterTimeout: 600000,\n    });\n    return pollRes;\n}\nexports.deleteInstance = deleteInstance;\nasync function getInstance(projectId, instanceId, options = {}) {\n    const res = await api.request(\"GET\", `/${VERSION}/projects/${projectId}/instances/${instanceId}`, _.assign({\n        auth: true,\n        origin: api.extensionsOrigin,\n    }, options));\n    return res.body;\n}\nexports.getInstance = getInstance;\nasync function listInstances(projectId) {\n    const instances = [];\n    const getNextPage = async (pageToken) => {\n        const res = await api.request(\"GET\", `/${VERSION}/projects/${projectId}/instances`, {\n            auth: true,\n            origin: api.extensionsOrigin,\n            query: {\n                pageSize: PAGE_SIZE_MAX,\n                pageToken,\n            },\n        });\n        if (Array.isArray(res.body.instances)) {\n            instances.push(...res.body.instances);\n        }\n        if (res.body.nextPageToken) {\n            await getNextPage(res.body.nextPageToken);\n        }\n    };\n    await getNextPage();\n    return instances;\n}\nexports.listInstances = listInstances;\nasync function configureInstance(projectId, instanceId, params) {\n    const res = await patchInstance(projectId, instanceId, \"config.params\", {\n        config: {\n            params,\n        },\n    });\n    return res;\n}\nexports.configureInstance = configureInstance;\nasync function updateInstance(projectId, instanceId, extensionSource, params) {\n    const body = {\n        config: {\n            source: { name: extensionSource.name },\n        },\n    };\n    let updateMask = \"config.source.name\";\n    if (params) {\n        body.params = params;\n        updateMask += \",config.params\";\n    }\n    return await patchInstance(projectId, instanceId, updateMask, body);\n}\nexports.updateInstance = updateInstance;\nasync function updateInstanceFromRegistry(projectId, instanceId, extRef, params) {\n    const { publisherId, extensionId, version } = parseRef(extRef);\n    const body = {\n        config: {\n            extensionRef: `${publisherId}/${extensionId}`,\n            extensionVersion: version,\n        },\n    };\n    let updateMask = \"config.extension_ref,config.extension_version\";\n    if (params) {\n        body.params = params;\n        updateMask += \",config.params\";\n    }\n    return await patchInstance(projectId, instanceId, updateMask, body);\n}\nexports.updateInstanceFromRegistry = updateInstanceFromRegistry;\nasync function patchInstance(projectId, instanceId, updateMask, data) {\n    const updateRes = await api.request(\"PATCH\", `/${VERSION}/projects/${projectId}/instances/${instanceId}`, {\n        auth: true,\n        origin: api.extensionsOrigin,\n        query: {\n            updateMask,\n        },\n        data,\n    });\n    const pollRes = await operationPoller.pollOperation({\n        apiOrigin: api.extensionsOrigin,\n        apiVersion: VERSION,\n        operationResourceName: updateRes.body.name,\n        masterTimeout: 600000,\n    });\n    return pollRes;\n}\nfunction populateResourceProperties(spec) {\n    if (spec) {\n        spec.resources.forEach((r) => {\n            try {\n                if (r.propertiesYaml) {\n                    r.properties = yaml.safeLoad(r.propertiesYaml);\n                }\n            }\n            catch (err) {\n                logger_1.logger.debug(`[ext] failed to parse resource properties yaml: ${err}`);\n            }\n        });\n    }\n}\nasync function createSource(projectId, packageUri, extensionRoot) {\n    const createRes = await api.request(\"POST\", `/${VERSION}/projects/${projectId}/sources/`, {\n        auth: true,\n        origin: api.extensionsOrigin,\n        data: {\n            packageUri,\n            extensionRoot,\n        },\n    });\n    const pollRes = await operationPoller.pollOperation({\n        apiOrigin: api.extensionsOrigin,\n        apiVersion: VERSION,\n        operationResourceName: createRes.body.name,\n        masterTimeout: 600000,\n    });\n    if (pollRes.spec) {\n        populateResourceProperties(pollRes.spec);\n    }\n    return pollRes;\n}\nexports.createSource = createSource;\nfunction getSource(sourceName) {\n    return api\n        .request(\"GET\", `/${VERSION}/${sourceName}`, {\n        auth: true,\n        origin: api.extensionsOrigin,\n    })\n        .then((res) => {\n        if (res.body.spec) {\n            populateResourceProperties(res.body.spec);\n        }\n        return res.body;\n    });\n}\nexports.getSource = getSource;\nasync function getExtensionVersion(ref) {\n    const { publisherId, extensionId, version } = parseRef(ref);\n    if (!version) {\n        throw new error_1.FirebaseError(`ExtensionVersion ref \"${ref}\" must supply a version.`);\n    }\n    try {\n        const res = await api.request(\"GET\", `/${VERSION}/publishers/${publisherId}/extensions/${extensionId}/versions/${version}`, {\n            auth: true,\n            origin: api.extensionsOrigin,\n        });\n        if (res.body.spec) {\n            populateResourceProperties(res.body.spec);\n        }\n        return res.body;\n    }\n    catch (err) {\n        if (err.status === 404) {\n            throw refNotFoundError(publisherId, extensionId, version);\n        }\n        else if (err instanceof error_1.FirebaseError) {\n            throw err;\n        }\n        throw new error_1.FirebaseError(`Failed to query the extension version '${clc.bold(ref)}': ${err}`);\n    }\n}\nexports.getExtensionVersion = getExtensionVersion;\nasync function listExtensions(publisherId) {\n    const extensions = [];\n    const getNextPage = async (pageToken) => {\n        const res = await api.request(\"GET\", `/${VERSION}/publishers/${publisherId}/extensions`, {\n            auth: true,\n            origin: api.extensionsOrigin,\n            showUnpublished: false,\n            query: {\n                pageSize: PAGE_SIZE_MAX,\n                pageToken,\n            },\n        });\n        if (Array.isArray(res.body.extensions)) {\n            extensions.push(...res.body.extensions);\n        }\n        if (res.body.nextPageToken) {\n            await getNextPage(res.body.nextPageToken);\n        }\n    };\n    await getNextPage();\n    return extensions;\n}\nexports.listExtensions = listExtensions;\nasync function listExtensionVersions(ref, filter) {\n    const { publisherId, extensionId } = parseRef(ref);\n    const extensionVersions = [];\n    const getNextPage = async (pageToken) => {\n        const res = await api.request(\"GET\", `/${VERSION}/publishers/${publisherId}/extensions/${extensionId}/versions`, {\n            auth: true,\n            origin: api.extensionsOrigin,\n            query: {\n                filter,\n                pageSize: PAGE_SIZE_MAX,\n                pageToken,\n            },\n        });\n        if (Array.isArray(res.body.extensionVersions)) {\n            extensionVersions.push(...res.body.extensionVersions);\n        }\n        if (res.body.nextPageToken) {\n            await getNextPage(res.body.nextPageToken);\n        }\n    };\n    await getNextPage();\n    return extensionVersions;\n}\nexports.listExtensionVersions = listExtensionVersions;\nasync function registerPublisherProfile(projectId, publisherId) {\n    const res = await api.request(\"POST\", `/${VERSION}/projects/${projectId}/publisherProfile:register`, {\n        auth: true,\n        origin: api.extensionsOrigin,\n        data: { publisherId },\n    });\n    return res.body;\n}\nexports.registerPublisherProfile = registerPublisherProfile;\nasync function publishExtensionVersion(ref, packageUri, extensionRoot) {\n    const { publisherId, extensionId, version } = parseRef(ref);\n    if (!version) {\n        throw new error_1.FirebaseError(`ExtensionVersion ref \"${ref}\" must supply a version.`);\n    }\n    const publishRes = await api.request(\"POST\", `/${VERSION}/publishers/${publisherId}/extensions/${extensionId}/versions:publish`, {\n        auth: true,\n        origin: api.extensionsOrigin,\n        data: {\n            versionId: version,\n            packageUri,\n            extensionRoot: extensionRoot || \"/\",\n        },\n    });\n    const pollRes = await operationPoller.pollOperation({\n        apiOrigin: api.extensionsOrigin,\n        apiVersion: VERSION,\n        operationResourceName: publishRes.body.name,\n        masterTimeout: 600000,\n    });\n    return pollRes;\n}\nexports.publishExtensionVersion = publishExtensionVersion;\nasync function unpublishExtension(ref) {\n    const { publisherId, extensionId, version } = parseRef(ref);\n    if (version) {\n        throw new error_1.FirebaseError(`Extension reference \"${ref}\" must not contain a version.`);\n    }\n    const url = `/${VERSION}/publishers/${publisherId}/extensions/${extensionId}:unpublish`;\n    try {\n        await api.request(\"POST\", url, {\n            auth: true,\n            origin: api.extensionsOrigin,\n        });\n    }\n    catch (err) {\n        if (err.status === 403) {\n            throw new error_1.FirebaseError(`You are not the owner of extension '${clc.bold(ref)}' and don’t have the correct permissions to unpublish this extension.`, { status: err.status });\n        }\n        else if (err instanceof error_1.FirebaseError) {\n            throw err;\n        }\n        throw new error_1.FirebaseError(`Error occurred unpublishing extension '${ref}': ${err}`, {\n            status: err.status,\n        });\n    }\n}\nexports.unpublishExtension = unpublishExtension;\nasync function deleteExtension(ref) {\n    const { publisherId, extensionId, version } = parseRef(ref);\n    if (version) {\n        throw new error_1.FirebaseError(`Extension reference \"${ref}\" must not contain a version.`);\n    }\n    const url = `/${VERSION}/publishers/${publisherId}/extensions/${extensionId}`;\n    try {\n        await api.request(\"DELETE\", url, {\n            auth: true,\n            origin: api.extensionsOrigin,\n        });\n    }\n    catch (err) {\n        if (err.status === 403) {\n            throw new error_1.FirebaseError(`You are not the owner of extension '${clc.bold(ref)}' and don’t have the correct permissions to delete this extension.`, { status: err.status });\n        }\n        else if (err.status === 404) {\n            throw new error_1.FirebaseError(`Extension ${clc.bold(ref)} was not found.`);\n        }\n        else if (err instanceof error_1.FirebaseError) {\n            throw err;\n        }\n        throw new error_1.FirebaseError(`Error occurred delete extension '${ref}': ${err}`, {\n            status: err.status,\n        });\n    }\n}\nexports.deleteExtension = deleteExtension;\nasync function getExtension(ref) {\n    const { publisherId, extensionId } = parseRef(ref);\n    try {\n        const res = await api.request(\"GET\", `/${VERSION}/publishers/${publisherId}/extensions/${extensionId}`, {\n            auth: true,\n            origin: api.extensionsOrigin,\n        });\n        return res.body;\n    }\n    catch (err) {\n        if (err.status === 404) {\n            throw refNotFoundError(publisherId, extensionId);\n        }\n        else if (err instanceof error_1.FirebaseError) {\n            throw err;\n        }\n        throw new error_1.FirebaseError(`Failed to query the extension '${clc.bold(ref)}': ${err}`, {\n            status: err.status,\n        });\n    }\n}\nexports.getExtension = getExtension;\nfunction refNotFoundError(publisherId, extensionId, versionId) {\n    const versionRef = `${publisherId}/${extensionId}@${versionId}`;\n    const extensionRef = `${publisherId}/${extensionId}`;\n    return new error_1.FirebaseError(`The extension reference '${clc.bold(versionId ? versionRef : extensionRef)}' doesn't exist. This could happen for two reasons:\\n` +\n        `  -The publisher ID '${clc.bold(publisherId)}' doesn't exist or could be misspelled\\n` +\n        `  -The name of the ${versionId ? \"extension version\" : \"extension\"} '${clc.bold(versionId ? `${extensionId}@${versionId}` : extensionId)}' doesn't exist or could be misspelled\\n\\n` +\n        `Please correct the extension reference and try again. If you meant to install an extension from a local source, please provide a relative path prefixed with '${clc.bold(\"./\")}', '${clc.bold(\"../\")}', or '${clc.bold(\"~/\")}'. Learn more about local extension installation at ${marked(\"[https://firebase.google.com/docs/extensions/alpha/install-extensions_community#install](https://firebase.google.com/docs/extensions/alpha/install-extensions_community#install).\")}`, { status: 404 });\n}\nfunction parseRef(ref) {\n    const parts = refRegex.exec(ref);\n    if (parts && (parts.length == 5 || parts.length == 7)) {\n        const publisherId = parts[1];\n        const extensionId = parts[2];\n        const version = parts[4];\n        if (version && !semver.valid(version) && version !== \"latest\") {\n            throw new error_1.FirebaseError(`Extension reference ${ref} contains an invalid version ${version}.`);\n        }\n        return { publisherId, extensionId, version };\n    }\n    throw new error_1.FirebaseError(\"Extension reference must be in format '{publisher}/{extension}(@{version})'.\");\n}\nexports.parseRef = parseRef;\nfunction parseExtensionVersionName(extensionVersionName) {\n    const parts = extensionVersionName.split(\"/\");\n    if (parts.length !== 6 ||\n        parts[0] !== \"publishers\" ||\n        parts[2] !== \"extensions\" ||\n        parts[4] !== \"versions\") {\n        throw new error_1.FirebaseError(\"Extension version name must be in the format `publishers/<publisherID>/extensions/<extensionID>/versions/<versionID>`.\");\n    }\n    const publisherId = parts[1];\n    const extensionId = parts[3];\n    const version = parts[5];\n    return { publisherId, extensionId, version };\n}\nexports.parseExtensionVersionName = parseExtensionVersionName;\n"]},"metadata":{},"sourceType":"script"}