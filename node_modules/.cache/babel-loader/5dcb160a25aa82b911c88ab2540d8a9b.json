{"ast":null,"code":"const {\n  denodeify\n} = require(\"rsvp\");\n\nmodule.exports = function promiseback(userFn, argCount) {\n  // if no callback argument is provided, assume the promise form\n  if (userFn.length <= argCount) {\n    return userFn;\n  } // otherwise promise-ify the callback\n\n\n  return denodeify(userFn);\n};","map":{"version":3,"sources":["/home/dev/Documentos/Projects/github-clone/node_modules/superstatic/lib/utils/promiseback.js"],"names":["denodeify","require","module","exports","promiseback","userFn","argCount","length"],"mappings":"AAAA,MAAM;AAAEA,EAAAA;AAAF,IAAgBC,OAAO,CAAC,MAAD,CAA7B;;AAEAC,MAAM,CAACC,OAAP,GAAiB,SAASC,WAAT,CAAqBC,MAArB,EAA6BC,QAA7B,EAAuC;AACtD;AACA,MAAID,MAAM,CAACE,MAAP,IAAiBD,QAArB,EAA+B;AAC7B,WAAOD,MAAP;AACD,GAJqD,CAKtD;;;AACA,SAAOL,SAAS,CAACK,MAAD,CAAhB;AACD,CAPD","sourcesContent":["const { denodeify } = require(\"rsvp\");\n\nmodule.exports = function promiseback(userFn, argCount) {\n  // if no callback argument is provided, assume the promise form\n  if (userFn.length <= argCount) {\n    return userFn;\n  }\n  // otherwise promise-ify the callback\n  return denodeify(userFn);\n};\n"]},"metadata":{},"sourceType":"script"}