{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.assert = exports.NotImplementedError = exports.InternalError = exports.UnknownError = exports.NotFoundError = exports.PermissionDeniedError = exports.UnauthenticatedError = exports.InvalidArgumentError = exports.BadRequestError = exports.ApiError = void 0;\n\nconst errors_1 = require(\"exegesis/lib/errors\");\n\nclass ApiError extends errors_1.ExtendableError {\n  constructor(code, status, message, reasonOrErrors) {\n    super(message);\n    this.code = code;\n    this.status = status;\n    this.code = code;\n    this.status = status;\n\n    if (typeof reasonOrErrors === \"string\") {\n      this.errors = [{\n        message,\n        reason: reasonOrErrors\n      }];\n    } else {\n      this.errors = reasonOrErrors;\n    }\n  }\n\n  toJSON() {\n    return {\n      code: this.code,\n      message: this.message,\n      errors: this.errors,\n      status: this.status\n    };\n  }\n\n}\n\nexports.ApiError = ApiError;\n\nclass BadRequestError extends ApiError {\n  constructor(message, reasonOrErrors = [{\n    message,\n    reason: \"invalid\",\n    domain: \"global\"\n  }]) {\n    super(400, undefined, message, reasonOrErrors);\n  }\n\n}\n\nexports.BadRequestError = BadRequestError;\n\nclass InvalidArgumentError extends ApiError {\n  constructor(message, reasonOrErrors = [{\n    message,\n    reason: \"invalid\",\n    domain: \"global\"\n  }]) {\n    super(400, \"INVALID_ARGUMENT\", message, reasonOrErrors);\n  }\n\n}\n\nexports.InvalidArgumentError = InvalidArgumentError;\n\nclass UnauthenticatedError extends ApiError {\n  constructor(message, reasonOrErrors) {\n    super(401, \"UNAUTHENTICATED\", message, reasonOrErrors);\n  }\n\n}\n\nexports.UnauthenticatedError = UnauthenticatedError;\n\nclass PermissionDeniedError extends ApiError {\n  constructor(message, reasonOrErrors = [{\n    message,\n    reason: \"forbidden\",\n    domain: \"global\"\n  }]) {\n    super(403, \"PERMISSION_DENIED\", message, reasonOrErrors);\n  }\n\n}\n\nexports.PermissionDeniedError = PermissionDeniedError;\n\nclass NotFoundError extends ApiError {\n  constructor(message = \"Not Found\", reasonOrErrors = \"notFound\") {\n    super(404, \"NOT_FOUND\", message, reasonOrErrors);\n  }\n\n}\n\nexports.NotFoundError = NotFoundError;\n\nclass UnknownError extends ApiError {\n  constructor(message, reason) {\n    super(500, \"UNKNOWN\", message, reason);\n  }\n\n}\n\nexports.UnknownError = UnknownError;\n\nclass InternalError extends ApiError {\n  constructor(message, reason) {\n    super(500, \"INTERNAL\", message, reason);\n  }\n\n}\n\nexports.InternalError = InternalError;\n\nclass NotImplementedError extends ApiError {\n  constructor(message, reason = \"unimplemented\") {\n    super(501, \"NOT_IMPLEMENTED\", message, reason);\n  }\n\n}\n\nexports.NotImplementedError = NotImplementedError;\n\nfunction assert(assertion, error) {\n  if (!assertion) {\n    throw new BadRequestError(error);\n  }\n}\n\nexports.assert = assert;","map":{"version":3,"sources":["/home/dev/Documentos/Projects/github-clone/node_modules/firebase-tools/lib/emulator/auth/errors.js"],"names":["Object","defineProperty","exports","value","assert","NotImplementedError","InternalError","UnknownError","NotFoundError","PermissionDeniedError","UnauthenticatedError","InvalidArgumentError","BadRequestError","ApiError","errors_1","require","ExtendableError","constructor","code","status","message","reasonOrErrors","errors","reason","toJSON","domain","undefined","assertion","error"],"mappings":"AAAA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;AACAD,OAAO,CAACE,MAAR,GAAiBF,OAAO,CAACG,mBAAR,GAA8BH,OAAO,CAACI,aAAR,GAAwBJ,OAAO,CAACK,YAAR,GAAuBL,OAAO,CAACM,aAAR,GAAwBN,OAAO,CAACO,qBAAR,GAAgCP,OAAO,CAACQ,oBAAR,GAA+BR,OAAO,CAACS,oBAAR,GAA+BT,OAAO,CAACU,eAAR,GAA0BV,OAAO,CAACW,QAAR,GAAmB,KAAK,CAAtQ;;AACA,MAAMC,QAAQ,GAAGC,OAAO,CAAC,qBAAD,CAAxB;;AACA,MAAMF,QAAN,SAAuBC,QAAQ,CAACE,eAAhC,CAAgD;AAC5CC,EAAAA,WAAW,CAACC,IAAD,EAAOC,MAAP,EAAeC,OAAf,EAAwBC,cAAxB,EAAwC;AAC/C,UAAMD,OAAN;AACA,SAAKF,IAAL,GAAYA,IAAZ;AACA,SAAKC,MAAL,GAAcA,MAAd;AACA,SAAKD,IAAL,GAAYA,IAAZ;AACA,SAAKC,MAAL,GAAcA,MAAd;;AACA,QAAI,OAAOE,cAAP,KAA0B,QAA9B,EAAwC;AACpC,WAAKC,MAAL,GAAc,CAAC;AAAEF,QAAAA,OAAF;AAAWG,QAAAA,MAAM,EAAEF;AAAnB,OAAD,CAAd;AACH,KAFD,MAGK;AACD,WAAKC,MAAL,GAAcD,cAAd;AACH;AACJ;;AACDG,EAAAA,MAAM,GAAG;AACL,WAAO;AAAEN,MAAAA,IAAI,EAAE,KAAKA,IAAb;AAAmBE,MAAAA,OAAO,EAAE,KAAKA,OAAjC;AAA0CE,MAAAA,MAAM,EAAE,KAAKA,MAAvD;AAA+DH,MAAAA,MAAM,EAAE,KAAKA;AAA5E,KAAP;AACH;;AAhB2C;;AAkBhDjB,OAAO,CAACW,QAAR,GAAmBA,QAAnB;;AACA,MAAMD,eAAN,SAA8BC,QAA9B,CAAuC;AACnCI,EAAAA,WAAW,CAACG,OAAD,EAAUC,cAAc,GAAG,CAAC;AAAED,IAAAA,OAAF;AAAWG,IAAAA,MAAM,EAAE,SAAnB;AAA8BE,IAAAA,MAAM,EAAE;AAAtC,GAAD,CAA3B,EAA+E;AACtF,UAAM,GAAN,EAAWC,SAAX,EAAsBN,OAAtB,EAA+BC,cAA/B;AACH;;AAHkC;;AAKvCnB,OAAO,CAACU,eAAR,GAA0BA,eAA1B;;AACA,MAAMD,oBAAN,SAAmCE,QAAnC,CAA4C;AACxCI,EAAAA,WAAW,CAACG,OAAD,EAAUC,cAAc,GAAG,CAAC;AAAED,IAAAA,OAAF;AAAWG,IAAAA,MAAM,EAAE,SAAnB;AAA8BE,IAAAA,MAAM,EAAE;AAAtC,GAAD,CAA3B,EAA+E;AACtF,UAAM,GAAN,EAAW,kBAAX,EAA+BL,OAA/B,EAAwCC,cAAxC;AACH;;AAHuC;;AAK5CnB,OAAO,CAACS,oBAAR,GAA+BA,oBAA/B;;AACA,MAAMD,oBAAN,SAAmCG,QAAnC,CAA4C;AACxCI,EAAAA,WAAW,CAACG,OAAD,EAAUC,cAAV,EAA0B;AACjC,UAAM,GAAN,EAAW,iBAAX,EAA8BD,OAA9B,EAAuCC,cAAvC;AACH;;AAHuC;;AAK5CnB,OAAO,CAACQ,oBAAR,GAA+BA,oBAA/B;;AACA,MAAMD,qBAAN,SAAoCI,QAApC,CAA6C;AACzCI,EAAAA,WAAW,CAACG,OAAD,EAAUC,cAAc,GAAG,CAAC;AAAED,IAAAA,OAAF;AAAWG,IAAAA,MAAM,EAAE,WAAnB;AAAgCE,IAAAA,MAAM,EAAE;AAAxC,GAAD,CAA3B,EAAiF;AACxF,UAAM,GAAN,EAAW,mBAAX,EAAgCL,OAAhC,EAAyCC,cAAzC;AACH;;AAHwC;;AAK7CnB,OAAO,CAACO,qBAAR,GAAgCA,qBAAhC;;AACA,MAAMD,aAAN,SAA4BK,QAA5B,CAAqC;AACjCI,EAAAA,WAAW,CAACG,OAAO,GAAG,WAAX,EAAwBC,cAAc,GAAG,UAAzC,EAAqD;AAC5D,UAAM,GAAN,EAAW,WAAX,EAAwBD,OAAxB,EAAiCC,cAAjC;AACH;;AAHgC;;AAKrCnB,OAAO,CAACM,aAAR,GAAwBA,aAAxB;;AACA,MAAMD,YAAN,SAA2BM,QAA3B,CAAoC;AAChCI,EAAAA,WAAW,CAACG,OAAD,EAAUG,MAAV,EAAkB;AACzB,UAAM,GAAN,EAAW,SAAX,EAAsBH,OAAtB,EAA+BG,MAA/B;AACH;;AAH+B;;AAKpCrB,OAAO,CAACK,YAAR,GAAuBA,YAAvB;;AACA,MAAMD,aAAN,SAA4BO,QAA5B,CAAqC;AACjCI,EAAAA,WAAW,CAACG,OAAD,EAAUG,MAAV,EAAkB;AACzB,UAAM,GAAN,EAAW,UAAX,EAAuBH,OAAvB,EAAgCG,MAAhC;AACH;;AAHgC;;AAKrCrB,OAAO,CAACI,aAAR,GAAwBA,aAAxB;;AACA,MAAMD,mBAAN,SAAkCQ,QAAlC,CAA2C;AACvCI,EAAAA,WAAW,CAACG,OAAD,EAAUG,MAAM,GAAG,eAAnB,EAAoC;AAC3C,UAAM,GAAN,EAAW,iBAAX,EAA8BH,OAA9B,EAAuCG,MAAvC;AACH;;AAHsC;;AAK3CrB,OAAO,CAACG,mBAAR,GAA8BA,mBAA9B;;AACA,SAASD,MAAT,CAAgBuB,SAAhB,EAA2BC,KAA3B,EAAkC;AAC9B,MAAI,CAACD,SAAL,EAAgB;AACZ,UAAM,IAAIf,eAAJ,CAAoBgB,KAApB,CAAN;AACH;AACJ;;AACD1B,OAAO,CAACE,MAAR,GAAiBA,MAAjB","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.assert = exports.NotImplementedError = exports.InternalError = exports.UnknownError = exports.NotFoundError = exports.PermissionDeniedError = exports.UnauthenticatedError = exports.InvalidArgumentError = exports.BadRequestError = exports.ApiError = void 0;\nconst errors_1 = require(\"exegesis/lib/errors\");\nclass ApiError extends errors_1.ExtendableError {\n    constructor(code, status, message, reasonOrErrors) {\n        super(message);\n        this.code = code;\n        this.status = status;\n        this.code = code;\n        this.status = status;\n        if (typeof reasonOrErrors === \"string\") {\n            this.errors = [{ message, reason: reasonOrErrors }];\n        }\n        else {\n            this.errors = reasonOrErrors;\n        }\n    }\n    toJSON() {\n        return { code: this.code, message: this.message, errors: this.errors, status: this.status };\n    }\n}\nexports.ApiError = ApiError;\nclass BadRequestError extends ApiError {\n    constructor(message, reasonOrErrors = [{ message, reason: \"invalid\", domain: \"global\" }]) {\n        super(400, undefined, message, reasonOrErrors);\n    }\n}\nexports.BadRequestError = BadRequestError;\nclass InvalidArgumentError extends ApiError {\n    constructor(message, reasonOrErrors = [{ message, reason: \"invalid\", domain: \"global\" }]) {\n        super(400, \"INVALID_ARGUMENT\", message, reasonOrErrors);\n    }\n}\nexports.InvalidArgumentError = InvalidArgumentError;\nclass UnauthenticatedError extends ApiError {\n    constructor(message, reasonOrErrors) {\n        super(401, \"UNAUTHENTICATED\", message, reasonOrErrors);\n    }\n}\nexports.UnauthenticatedError = UnauthenticatedError;\nclass PermissionDeniedError extends ApiError {\n    constructor(message, reasonOrErrors = [{ message, reason: \"forbidden\", domain: \"global\" }]) {\n        super(403, \"PERMISSION_DENIED\", message, reasonOrErrors);\n    }\n}\nexports.PermissionDeniedError = PermissionDeniedError;\nclass NotFoundError extends ApiError {\n    constructor(message = \"Not Found\", reasonOrErrors = \"notFound\") {\n        super(404, \"NOT_FOUND\", message, reasonOrErrors);\n    }\n}\nexports.NotFoundError = NotFoundError;\nclass UnknownError extends ApiError {\n    constructor(message, reason) {\n        super(500, \"UNKNOWN\", message, reason);\n    }\n}\nexports.UnknownError = UnknownError;\nclass InternalError extends ApiError {\n    constructor(message, reason) {\n        super(500, \"INTERNAL\", message, reason);\n    }\n}\nexports.InternalError = InternalError;\nclass NotImplementedError extends ApiError {\n    constructor(message, reason = \"unimplemented\") {\n        super(501, \"NOT_IMPLEMENTED\", message, reason);\n    }\n}\nexports.NotImplementedError = NotImplementedError;\nfunction assert(assertion, error) {\n    if (!assertion) {\n        throw new BadRequestError(error);\n    }\n}\nexports.assert = assert;\n"]},"metadata":{},"sourceType":"script"}