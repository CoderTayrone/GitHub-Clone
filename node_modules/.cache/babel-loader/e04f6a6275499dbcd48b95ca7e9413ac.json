{"ast":null,"code":"\"use strict\";\n\nvar clc = require(\"cli-color\");\n\nvar Table = require(\"cli-table\");\n\nvar fs = require(\"fs\");\n\nvar _ = require(\"lodash\");\n\nvar readline = require(\"readline\");\n\nvar {\n  FirebaseError\n} = require(\"./error\");\n\nconst {\n  logger\n} = require(\"./logger\");\n\nvar DATA_LINE_REGEX = /^data: /;\nvar BANDWIDTH_NOTE = \"NOTE: The numbers reported here are only estimates of the data\" + \" payloads from read operations. They are NOT a valid measure of your bandwidth bill.\";\nvar SPEED_NOTE = \"NOTE: Speeds are reported at millisecond resolution and\" + \" are not the latencies that clients will see. Pending times\" + \" are also reported at millisecond resolution. They approximate\" + \" the interval of time between the instant a request is received\" + \" and the instant it executes.\";\nvar COLLAPSE_THRESHOLD = 25;\nvar COLLAPSE_WILDCARD = [\"$wildcard\"];\n\nvar ProfileReport = function (tmpFile, outStream, options) {\n  this.tempFile = tmpFile;\n  this.output = outStream;\n  this.options = options;\n  this.state = {\n    outband: {},\n    inband: {},\n    writeSpeed: {},\n    broadcastSpeed: {},\n    readSpeed: {},\n    connectSpeed: {},\n    disconnectSpeed: {},\n    unlistenSpeed: {},\n    unindexed: {},\n    startTime: 0,\n    endTime: 0,\n    opCount: 0\n  };\n};\n\nProfileReport.extractJSON = function (line, input) {\n  if (!input && !DATA_LINE_REGEX.test(line)) {\n    return null;\n  } else if (!input) {\n    line = line.substring(5);\n  }\n\n  try {\n    return JSON.parse(line);\n  } catch (e) {\n    return null;\n  }\n};\n\nProfileReport.pathString = function (path) {\n  return \"/\" + (path ? path.join(\"/\") : \"\");\n};\n\nProfileReport.formatNumber = function (num) {\n  var parts = num.toFixed(2).split(\".\");\n  parts[0] = parts[0].replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n\n  if (+parts[1] === 0) {\n    return parts[0];\n  }\n\n  return parts.join(\".\");\n};\n\nProfileReport.formatBytes = function (bytes) {\n  var threshold = 1000;\n\n  if (Math.round(bytes) < threshold) {\n    return bytes + \" B\";\n  }\n\n  var units = [\"kB\", \"MB\", \"GB\", \"TB\", \"PB\", \"EB\", \"ZB\", \"YB\"];\n  var u = -1;\n  var formattedBytes = bytes;\n\n  do {\n    formattedBytes /= threshold;\n    u++;\n  } while (Math.abs(formattedBytes) >= threshold && u < units.length - 1);\n\n  return ProfileReport.formatNumber(formattedBytes) + \" \" + units[u];\n};\n\nProfileReport.extractReadableIndex = function (query) {\n  if (_.has(query, \"orderBy\")) {\n    return query.orderBy;\n  }\n\n  var indexPath = _.get(query, \"index.path\");\n\n  if (indexPath) {\n    return ProfileReport.pathString(indexPath);\n  }\n\n  return \".value\";\n};\n\nProfileReport.prototype.collectUnindexed = function (data, path) {\n  if (!data.unIndexed) {\n    return;\n  }\n\n  if (!_.has(this.state.unindexed, path)) {\n    this.state.unindexed[path] = {};\n  }\n\n  var pathNode = this.state.unindexed[path];\n  var query = data.querySet[0];\n  var index = JSON.stringify(query.index);\n\n  if (!_.has(pathNode, index)) {\n    pathNode[index] = {\n      times: 0,\n      query: query\n    };\n  }\n\n  var indexNode = pathNode[index];\n  indexNode.times += 1;\n};\n\nProfileReport.prototype.collectSpeedUnpathed = function (data, opStats) {\n  if (Object.keys(opStats).length === 0) {\n    opStats.times = 0;\n    opStats.millis = 0;\n    opStats.pendingCount = 0;\n    opStats.pendingTime = 0;\n    opStats.rejected = 0;\n  }\n\n  opStats.times += 1;\n\n  if (data.hasOwnProperty(\"millis\")) {\n    opStats.millis += data.millis;\n  }\n\n  if (data.hasOwnProperty(\"pendingTime\")) {\n    opStats.pendingCount++;\n    opStats.pendingTime += data.pendingTime;\n  }\n\n  if (data.allowed === false) {\n    opStats.rejected += 1;\n  }\n};\n\nProfileReport.prototype.collectSpeed = function (data, path, opType) {\n  if (!_.has(opType, path)) {\n    opType[path] = {\n      times: 0,\n      millis: 0,\n      pendingCount: 0,\n      pendingTime: 0,\n      rejected: 0\n    };\n  }\n\n  var node = opType[path];\n  node.times += 1;\n\n  if (data.hasOwnProperty(\"millis\")) {\n    node.millis += data.millis;\n  }\n\n  if (data.hasOwnProperty(\"pendingTime\")) {\n    node.pendingCount++;\n    node.pendingTime += data.pendingTime;\n  }\n\n  if (data.allowed === false) {\n    node.rejected += 1;\n  }\n};\n\nProfileReport.prototype.collectBandwidth = function (bytes, path, direction) {\n  if (!_.has(direction, path)) {\n    direction[path] = {\n      times: 0,\n      bytes: 0\n    };\n  }\n\n  var node = direction[path];\n  node.times += 1;\n  node.bytes += bytes;\n};\n\nProfileReport.prototype.collectRead = function (data, path, bytes) {\n  this.collectSpeed(data, path, this.state.readSpeed);\n  this.collectBandwidth(bytes, path, this.state.outband);\n};\n\nProfileReport.prototype.collectBroadcast = function (data, path, bytes) {\n  this.collectSpeed(data, path, this.state.broadcastSpeed);\n  this.collectBandwidth(bytes, path, this.state.outband);\n};\n\nProfileReport.prototype.collectUnlisten = function (data, path) {\n  this.collectSpeed(data, path, this.state.unlistenSpeed);\n};\n\nProfileReport.prototype.collectConnect = function (data) {\n  this.collectSpeedUnpathed(data, this.state.connectSpeed);\n};\n\nProfileReport.prototype.collectDisconnect = function (data) {\n  this.collectSpeedUnpathed(data, this.state.disconnectSpeed);\n};\n\nProfileReport.prototype.collectWrite = function (data, path, bytes) {\n  this.collectSpeed(data, path, this.state.writeSpeed);\n  this.collectBandwidth(bytes, path, this.state.inband);\n};\n\nProfileReport.prototype.processOperation = function (data) {\n  if (!this.state.startTime) {\n    this.state.startTime = data.timestamp;\n  }\n\n  this.state.endTime = data.timestamp;\n  var path = ProfileReport.pathString(data.path);\n  this.state.opCount++;\n\n  switch (data.name) {\n    case \"concurrent-connect\":\n      this.collectConnect(data);\n      break;\n\n    case \"concurrent-disconnect\":\n      this.collectDisconnect(data);\n      break;\n\n    case \"realtime-read\":\n      this.collectRead(data, path, data.bytes);\n      break;\n\n    case \"realtime-write\":\n      this.collectWrite(data, path, data.bytes);\n      break;\n\n    case \"realtime-transaction\":\n      this.collectWrite(data, path, data.bytes);\n      break;\n\n    case \"realtime-update\":\n      this.collectWrite(data, path, data.bytes);\n      break;\n\n    case \"listener-listen\":\n      this.collectRead(data, path, data.bytes);\n      this.collectUnindexed(data, path);\n      break;\n\n    case \"listener-broadcast\":\n      this.collectBroadcast(data, path, data.bytes);\n      break;\n\n    case \"listener-unlisten\":\n      this.collectUnlisten(data, path);\n      break;\n\n    case \"rest-read\":\n      this.collectRead(data, path, data.bytes);\n      break;\n\n    case \"rest-write\":\n      this.collectWrite(data, path, data.bytes);\n      break;\n\n    case \"rest-update\":\n      this.collectWrite(data, path, data.bytes);\n      break;\n\n    default:\n      break;\n  }\n};\n\nProfileReport.prototype.collapsePaths = function (pathedObject, combiner, pathIndex) {\n  if (!this.options.collapse) {\n    return pathedObject;\n  }\n\n  if (_.isUndefined(pathIndex)) {\n    pathIndex = 1;\n  }\n\n  var allSegments = _.keys(pathedObject).map(function (path) {\n    return path.split(\"/\").filter(function (s) {\n      return s !== \"\";\n    });\n  });\n\n  var pathSegments = allSegments.filter(function (segments) {\n    return segments.length > pathIndex;\n  });\n  var otherSegments = allSegments.filter(function (segments) {\n    return segments.length <= pathIndex;\n  });\n\n  if (pathSegments.length === 0) {\n    return pathedObject;\n  }\n\n  var prefixes = {};\n  pathSegments.forEach(function (segments) {\n    var prefixPath = ProfileReport.pathString(segments.slice(0, pathIndex));\n\n    var prefixCount = _.get(prefixes, prefixPath, new Set());\n\n    prefixes[prefixPath] = prefixCount.add(segments[pathIndex]);\n  });\n  var collapsedObject = {};\n  pathSegments.forEach(function (segments) {\n    var prefix = segments.slice(0, pathIndex);\n    var prefixPath = ProfileReport.pathString(prefix);\n\n    var prefixCount = _.get(prefixes, prefixPath);\n\n    var originalPath = ProfileReport.pathString(segments);\n\n    if (prefixCount.size >= COLLAPSE_THRESHOLD) {\n      var tail = segments.slice(pathIndex + 1);\n      var collapsedPath = ProfileReport.pathString(prefix.concat(COLLAPSE_WILDCARD).concat(tail));\n      var currentValue = collapsedObject[collapsedPath];\n\n      if (currentValue) {\n        collapsedObject[collapsedPath] = combiner(currentValue, pathedObject[originalPath]);\n      } else {\n        collapsedObject[collapsedPath] = pathedObject[originalPath];\n      }\n    } else {\n      collapsedObject[originalPath] = pathedObject[originalPath];\n    }\n  });\n  otherSegments.forEach(function (segments) {\n    var originalPath = ProfileReport.pathString(segments);\n    collapsedObject[originalPath] = pathedObject[originalPath];\n  });\n  return this.collapsePaths(collapsedObject, combiner, pathIndex + 1);\n};\n\nProfileReport.prototype.renderUnindexedData = function () {\n  var table = new Table({\n    head: [\"Path\", \"Index\", \"Count\"],\n    style: {\n      head: this.options.isFile ? [] : [\"yellow\"],\n      border: this.options.isFile ? [] : [\"grey\"]\n    }\n  });\n  var unindexed = this.collapsePaths(this.state.unindexed, function (u1, u2) {\n    _.mergeWith(u1, u2, function (p1, p2) {\n      return {\n        times: p1.times + p2.times,\n        query: p1.query\n      };\n    });\n  });\n\n  var paths = _.keys(unindexed);\n\n  paths.forEach(function (path) {\n    var indices = _.keys(unindexed[path]);\n\n    indices.forEach(function (index) {\n      var data = unindexed[path][index];\n      var row = [path, ProfileReport.extractReadableIndex(data.query), ProfileReport.formatNumber(data.times)];\n      table.push(row);\n    });\n  });\n  return table;\n};\n\nProfileReport.prototype.renderBandwidth = function (pureData) {\n  var table = new Table({\n    head: [\"Path\", \"Total\", \"Count\", \"Average\"],\n    style: {\n      head: this.options.isFile ? [] : [\"yellow\"],\n      border: this.options.isFile ? [] : [\"grey\"]\n    }\n  });\n  var data = this.collapsePaths(pureData, function (b1, b2) {\n    return {\n      bytes: b1.bytes + b2.bytes,\n      times: b1.times + b2.times\n    };\n  });\n\n  var paths = _.keys(data);\n\n  paths = _.orderBy(paths, function (path) {\n    var bandwidth = data[path];\n    return bandwidth.bytes;\n  }, [\"desc\"]);\n  paths.forEach(function (path) {\n    var bandwidth = data[path];\n    var row = [path, ProfileReport.formatBytes(bandwidth.bytes), ProfileReport.formatNumber(bandwidth.times), ProfileReport.formatBytes(bandwidth.bytes / bandwidth.times)];\n    table.push(row);\n  });\n  return table;\n};\n\nProfileReport.prototype.renderOutgoingBandwidth = function () {\n  return this.renderBandwidth(this.state.outband);\n};\n\nProfileReport.prototype.renderIncomingBandwidth = function () {\n  return this.renderBandwidth(this.state.inband);\n};\n\nProfileReport.prototype.renderUnpathedOperationSpeed = function (speedData, hasSecurity) {\n  var head = [\"Count\", \"Average Execution Speed\", \"Average Pending Time\"];\n\n  if (hasSecurity) {\n    head.push(\"Permission Denied\");\n  }\n\n  var table = new Table({\n    head: head,\n    style: {\n      head: this.options.isFile ? [] : [\"yellow\"],\n      border: this.options.isFile ? [] : [\"grey\"]\n    }\n  });\n\n  if (Object.keys(speedData).length > 0) {\n    var row = [speedData.times, ProfileReport.formatNumber(speedData.millis / speedData.times) + \" ms\", ProfileReport.formatNumber(speedData.pendingCount === 0 ? 0 : speedData.pendingTime / speedData.pendingCount) + \" ms\"];\n\n    if (hasSecurity) {\n      row.push(ProfileReport.formatNumber(speedData.rejected));\n    }\n\n    table.push(row);\n  }\n\n  return table;\n};\n\nProfileReport.prototype.renderOperationSpeed = function (pureData, hasSecurity) {\n  var head = [\"Path\", \"Count\", \"Average Execution Speed\", \"Average Pending Time\"];\n\n  if (hasSecurity) {\n    head.push(\"Permission Denied\");\n  }\n\n  var table = new Table({\n    head: head,\n    style: {\n      head: this.options.isFile ? [] : [\"yellow\"],\n      border: this.options.isFile ? [] : [\"grey\"]\n    }\n  });\n  var data = this.collapsePaths(pureData, function (s1, s2) {\n    return {\n      times: s1.times + s2.times,\n      millis: s1.millis + s2.millis,\n      pendingCount: s1.pendingCount + s2.pendingCount,\n      pendingTime: s1.pendingTime + s2.pendingTime,\n      rejected: s1.rejected + s2.rejected\n    };\n  });\n\n  var paths = _.keys(data);\n\n  paths = _.orderBy(paths, function (path) {\n    var speed = data[path];\n    return speed.millis / speed.times;\n  }, [\"desc\"]);\n  paths.forEach(function (path) {\n    var speed = data[path];\n    var row = [path, speed.times, ProfileReport.formatNumber(speed.millis / speed.times) + \" ms\", ProfileReport.formatNumber(speed.pendingCount === 0 ? 0 : speed.pendingTime / speed.pendingCount) + \" ms\"];\n\n    if (hasSecurity) {\n      row.push(ProfileReport.formatNumber(speed.rejected));\n    }\n\n    table.push(row);\n  });\n  return table;\n};\n\nProfileReport.prototype.renderReadSpeed = function () {\n  return this.renderOperationSpeed(this.state.readSpeed, true);\n};\n\nProfileReport.prototype.renderWriteSpeed = function () {\n  return this.renderOperationSpeed(this.state.writeSpeed, true);\n};\n\nProfileReport.prototype.renderBroadcastSpeed = function () {\n  return this.renderOperationSpeed(this.state.broadcastSpeed, false);\n};\n\nProfileReport.prototype.renderConnectSpeed = function () {\n  return this.renderUnpathedOperationSpeed(this.state.connectSpeed, false);\n};\n\nProfileReport.prototype.renderDisconnectSpeed = function () {\n  return this.renderUnpathedOperationSpeed(this.state.disconnectSpeed, false);\n};\n\nProfileReport.prototype.renderUnlistenSpeed = function () {\n  return this.renderOperationSpeed(this.state.unlistenSpeed, false);\n};\n\nProfileReport.prototype.parse = function (onLine, onClose) {\n  var isFile = this.options.isFile;\n  var tmpFile = this.tempFile;\n  var outStream = this.output;\n  var isInput = this.options.isInput;\n  return new Promise(function (resolve, reject) {\n    var rl = readline.createInterface({\n      input: fs.createReadStream(tmpFile)\n    });\n    var errored = false;\n    rl.on(\"line\", function (line) {\n      var data = ProfileReport.extractJSON(line, isInput);\n\n      if (!data) {\n        return;\n      }\n\n      onLine(data);\n    });\n    rl.on(\"close\", function () {\n      if (errored) {\n        reject(new FirebaseError(\"There was an error creating the report.\"));\n      } else {\n        var result = onClose();\n\n        if (isFile) {\n          outStream.on(\"finish\", function () {\n            resolve(result);\n          });\n          outStream.end();\n        } else {\n          resolve(result);\n        }\n      }\n    });\n    rl.on(\"error\", function () {\n      reject();\n    });\n    outStream.on(\"error\", function () {\n      errored = true;\n      rl.close();\n    });\n  });\n};\n\nProfileReport.prototype.write = function (data) {\n  if (this.options.isFile) {\n    this.output.write(data);\n  } else {\n    logger.info(data);\n  }\n};\n\nProfileReport.prototype.generate = function () {\n  if (this.options.format === \"TXT\") {\n    return this.generateText();\n  } else if (this.options.format === \"RAW\") {\n    return this.generateRaw();\n  } else if (this.options.format === \"JSON\") {\n    return this.generateJson();\n  }\n\n  throw new FirebaseError('Invalid report format expected \"TXT\", \"JSON\", or \"RAW\"', {\n    exit: 1\n  });\n};\n\nProfileReport.prototype.generateRaw = function () {\n  return this.parse(this.writeRaw.bind(this), function () {\n    return null;\n  });\n};\n\nProfileReport.prototype.writeRaw = function (data) {\n  this.write(JSON.stringify(data) + \"\\n\");\n};\n\nProfileReport.prototype.generateText = function () {\n  return this.parse(this.processOperation.bind(this), this.outputText.bind(this));\n};\n\nProfileReport.prototype.outputText = function () {\n  var totalTime = this.state.endTime - this.state.startTime;\n  var isFile = this.options.isFile;\n  var write = this.write.bind(this);\n\n  var writeTitle = function (title) {\n    if (isFile) {\n      write(title + \"\\n\");\n    } else {\n      write(clc.bold.yellow(title) + \"\\n\");\n    }\n  };\n\n  var writeTable = function (title, table) {\n    writeTitle(title);\n    write(table.toString() + \"\\n\");\n  };\n\n  writeTitle(\"Report operations collected from \" + new Date(this.state.startTime).toISOString() + \" over \" + totalTime + \" ms.\");\n  writeTitle(\"Speed Report\\n\");\n  write(SPEED_NOTE + \"\\n\\n\");\n  writeTable(\"Read Speed\", this.renderReadSpeed());\n  writeTable(\"Write Speed\", this.renderWriteSpeed());\n  writeTable(\"Broadcast Speed\", this.renderBroadcastSpeed());\n  writeTable(\"Connect Speed\", this.renderConnectSpeed());\n  writeTable(\"Disconnect Speed\", this.renderDisconnectSpeed());\n  writeTable(\"Unlisten Speed\", this.renderUnlistenSpeed());\n  writeTitle(\"Bandwidth Report\\n\");\n  write(BANDWIDTH_NOTE + \"\\n\\n\");\n  writeTable(\"Downloaded Bytes\", this.renderOutgoingBandwidth());\n  writeTable(\"Uploaded Bytes\", this.renderIncomingBandwidth());\n  writeTable(\"Unindexed Queries\", this.renderUnindexedData());\n};\n\nProfileReport.prototype.generateJson = function () {\n  return this.parse(this.processOperation.bind(this), this.outputJson.bind(this));\n};\n\nProfileReport.prototype.outputJson = function () {\n  var totalTime = this.state.endTime - this.state.startTime;\n\n  var tableToJson = function (table, note) {\n    var json = {\n      legend: table.options.head,\n      data: []\n    };\n\n    if (note) {\n      json.note = note;\n    }\n\n    table.forEach(function (row) {\n      json.data.push(row);\n    });\n    return json;\n  };\n\n  var json = {\n    totalTime: totalTime,\n    readSpeed: tableToJson(this.renderReadSpeed(), SPEED_NOTE),\n    writeSpeed: tableToJson(this.renderWriteSpeed(), SPEED_NOTE),\n    broadcastSpeed: tableToJson(this.renderBroadcastSpeed(), SPEED_NOTE),\n    connectSpeed: tableToJson(this.renderConnectSpeed(), SPEED_NOTE),\n    disconnectSpeed: tableToJson(this.renderDisconnectSpeed(), SPEED_NOTE),\n    unlistenSpeed: tableToJson(this.renderUnlistenSpeed(), SPEED_NOTE),\n    downloadedBytes: tableToJson(this.renderOutgoingBandwidth(), BANDWIDTH_NOTE),\n    uploadedBytes: tableToJson(this.renderIncomingBandwidth(), BANDWIDTH_NOTE),\n    unindexedQueries: tableToJson(this.renderUnindexedData())\n  };\n  this.write(JSON.stringify(json, null, 2));\n\n  if (this.options.isFile) {\n    return this.output.path;\n  }\n\n  return json;\n};\n\nmodule.exports = ProfileReport;","map":{"version":3,"sources":["/home/dev/Documentos/Projects/github-clone/node_modules/firebase-tools/lib/profileReport.js"],"names":["clc","require","Table","fs","_","readline","FirebaseError","logger","DATA_LINE_REGEX","BANDWIDTH_NOTE","SPEED_NOTE","COLLAPSE_THRESHOLD","COLLAPSE_WILDCARD","ProfileReport","tmpFile","outStream","options","tempFile","output","state","outband","inband","writeSpeed","broadcastSpeed","readSpeed","connectSpeed","disconnectSpeed","unlistenSpeed","unindexed","startTime","endTime","opCount","extractJSON","line","input","test","substring","JSON","parse","e","pathString","path","join","formatNumber","num","parts","toFixed","split","replace","formatBytes","bytes","threshold","Math","round","units","u","formattedBytes","abs","length","extractReadableIndex","query","has","orderBy","indexPath","get","prototype","collectUnindexed","data","unIndexed","pathNode","querySet","index","stringify","times","indexNode","collectSpeedUnpathed","opStats","Object","keys","millis","pendingCount","pendingTime","rejected","hasOwnProperty","allowed","collectSpeed","opType","node","collectBandwidth","direction","collectRead","collectBroadcast","collectUnlisten","collectConnect","collectDisconnect","collectWrite","processOperation","timestamp","name","collapsePaths","pathedObject","combiner","pathIndex","collapse","isUndefined","allSegments","map","filter","s","pathSegments","segments","otherSegments","prefixes","forEach","prefixPath","slice","prefixCount","Set","add","collapsedObject","prefix","originalPath","size","tail","collapsedPath","concat","currentValue","renderUnindexedData","table","head","style","isFile","border","u1","u2","mergeWith","p1","p2","paths","indices","row","push","renderBandwidth","pureData","b1","b2","bandwidth","renderOutgoingBandwidth","renderIncomingBandwidth","renderUnpathedOperationSpeed","speedData","hasSecurity","renderOperationSpeed","s1","s2","speed","renderReadSpeed","renderWriteSpeed","renderBroadcastSpeed","renderConnectSpeed","renderDisconnectSpeed","renderUnlistenSpeed","onLine","onClose","isInput","Promise","resolve","reject","rl","createInterface","createReadStream","errored","on","result","end","close","write","info","generate","format","generateText","generateRaw","generateJson","exit","writeRaw","bind","outputText","totalTime","writeTitle","title","bold","yellow","writeTable","toString","Date","toISOString","outputJson","tableToJson","note","json","legend","downloadedBytes","uploadedBytes","unindexedQueries","module","exports"],"mappings":"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","sourcesContent":["\"use strict\";\nvar clc = require(\"cli-color\");\nvar Table = require(\"cli-table\");\nvar fs = require(\"fs\");\nvar _ = require(\"lodash\");\nvar readline = require(\"readline\");\nvar { FirebaseError } = require(\"./error\");\nconst { logger } = require(\"./logger\");\nvar DATA_LINE_REGEX = /^data: /;\nvar BANDWIDTH_NOTE = \"NOTE: The numbers reported here are only estimates of the data\" +\n    \" payloads from read operations. They are NOT a valid measure of your bandwidth bill.\";\nvar SPEED_NOTE = \"NOTE: Speeds are reported at millisecond resolution and\" +\n    \" are not the latencies that clients will see. Pending times\" +\n    \" are also reported at millisecond resolution. They approximate\" +\n    \" the interval of time between the instant a request is received\" +\n    \" and the instant it executes.\";\nvar COLLAPSE_THRESHOLD = 25;\nvar COLLAPSE_WILDCARD = [\"$wildcard\"];\nvar ProfileReport = function (tmpFile, outStream, options) {\n    this.tempFile = tmpFile;\n    this.output = outStream;\n    this.options = options;\n    this.state = {\n        outband: {},\n        inband: {},\n        writeSpeed: {},\n        broadcastSpeed: {},\n        readSpeed: {},\n        connectSpeed: {},\n        disconnectSpeed: {},\n        unlistenSpeed: {},\n        unindexed: {},\n        startTime: 0,\n        endTime: 0,\n        opCount: 0,\n    };\n};\nProfileReport.extractJSON = function (line, input) {\n    if (!input && !DATA_LINE_REGEX.test(line)) {\n        return null;\n    }\n    else if (!input) {\n        line = line.substring(5);\n    }\n    try {\n        return JSON.parse(line);\n    }\n    catch (e) {\n        return null;\n    }\n};\nProfileReport.pathString = function (path) {\n    return \"/\" + (path ? path.join(\"/\") : \"\");\n};\nProfileReport.formatNumber = function (num) {\n    var parts = num.toFixed(2).split(\".\");\n    parts[0] = parts[0].replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n    if (+parts[1] === 0) {\n        return parts[0];\n    }\n    return parts.join(\".\");\n};\nProfileReport.formatBytes = function (bytes) {\n    var threshold = 1000;\n    if (Math.round(bytes) < threshold) {\n        return bytes + \" B\";\n    }\n    var units = [\"kB\", \"MB\", \"GB\", \"TB\", \"PB\", \"EB\", \"ZB\", \"YB\"];\n    var u = -1;\n    var formattedBytes = bytes;\n    do {\n        formattedBytes /= threshold;\n        u++;\n    } while (Math.abs(formattedBytes) >= threshold && u < units.length - 1);\n    return ProfileReport.formatNumber(formattedBytes) + \" \" + units[u];\n};\nProfileReport.extractReadableIndex = function (query) {\n    if (_.has(query, \"orderBy\")) {\n        return query.orderBy;\n    }\n    var indexPath = _.get(query, \"index.path\");\n    if (indexPath) {\n        return ProfileReport.pathString(indexPath);\n    }\n    return \".value\";\n};\nProfileReport.prototype.collectUnindexed = function (data, path) {\n    if (!data.unIndexed) {\n        return;\n    }\n    if (!_.has(this.state.unindexed, path)) {\n        this.state.unindexed[path] = {};\n    }\n    var pathNode = this.state.unindexed[path];\n    var query = data.querySet[0];\n    var index = JSON.stringify(query.index);\n    if (!_.has(pathNode, index)) {\n        pathNode[index] = {\n            times: 0,\n            query: query,\n        };\n    }\n    var indexNode = pathNode[index];\n    indexNode.times += 1;\n};\nProfileReport.prototype.collectSpeedUnpathed = function (data, opStats) {\n    if (Object.keys(opStats).length === 0) {\n        opStats.times = 0;\n        opStats.millis = 0;\n        opStats.pendingCount = 0;\n        opStats.pendingTime = 0;\n        opStats.rejected = 0;\n    }\n    opStats.times += 1;\n    if (data.hasOwnProperty(\"millis\")) {\n        opStats.millis += data.millis;\n    }\n    if (data.hasOwnProperty(\"pendingTime\")) {\n        opStats.pendingCount++;\n        opStats.pendingTime += data.pendingTime;\n    }\n    if (data.allowed === false) {\n        opStats.rejected += 1;\n    }\n};\nProfileReport.prototype.collectSpeed = function (data, path, opType) {\n    if (!_.has(opType, path)) {\n        opType[path] = {\n            times: 0,\n            millis: 0,\n            pendingCount: 0,\n            pendingTime: 0,\n            rejected: 0,\n        };\n    }\n    var node = opType[path];\n    node.times += 1;\n    if (data.hasOwnProperty(\"millis\")) {\n        node.millis += data.millis;\n    }\n    if (data.hasOwnProperty(\"pendingTime\")) {\n        node.pendingCount++;\n        node.pendingTime += data.pendingTime;\n    }\n    if (data.allowed === false) {\n        node.rejected += 1;\n    }\n};\nProfileReport.prototype.collectBandwidth = function (bytes, path, direction) {\n    if (!_.has(direction, path)) {\n        direction[path] = {\n            times: 0,\n            bytes: 0,\n        };\n    }\n    var node = direction[path];\n    node.times += 1;\n    node.bytes += bytes;\n};\nProfileReport.prototype.collectRead = function (data, path, bytes) {\n    this.collectSpeed(data, path, this.state.readSpeed);\n    this.collectBandwidth(bytes, path, this.state.outband);\n};\nProfileReport.prototype.collectBroadcast = function (data, path, bytes) {\n    this.collectSpeed(data, path, this.state.broadcastSpeed);\n    this.collectBandwidth(bytes, path, this.state.outband);\n};\nProfileReport.prototype.collectUnlisten = function (data, path) {\n    this.collectSpeed(data, path, this.state.unlistenSpeed);\n};\nProfileReport.prototype.collectConnect = function (data) {\n    this.collectSpeedUnpathed(data, this.state.connectSpeed);\n};\nProfileReport.prototype.collectDisconnect = function (data) {\n    this.collectSpeedUnpathed(data, this.state.disconnectSpeed);\n};\nProfileReport.prototype.collectWrite = function (data, path, bytes) {\n    this.collectSpeed(data, path, this.state.writeSpeed);\n    this.collectBandwidth(bytes, path, this.state.inband);\n};\nProfileReport.prototype.processOperation = function (data) {\n    if (!this.state.startTime) {\n        this.state.startTime = data.timestamp;\n    }\n    this.state.endTime = data.timestamp;\n    var path = ProfileReport.pathString(data.path);\n    this.state.opCount++;\n    switch (data.name) {\n        case \"concurrent-connect\":\n            this.collectConnect(data);\n            break;\n        case \"concurrent-disconnect\":\n            this.collectDisconnect(data);\n            break;\n        case \"realtime-read\":\n            this.collectRead(data, path, data.bytes);\n            break;\n        case \"realtime-write\":\n            this.collectWrite(data, path, data.bytes);\n            break;\n        case \"realtime-transaction\":\n            this.collectWrite(data, path, data.bytes);\n            break;\n        case \"realtime-update\":\n            this.collectWrite(data, path, data.bytes);\n            break;\n        case \"listener-listen\":\n            this.collectRead(data, path, data.bytes);\n            this.collectUnindexed(data, path);\n            break;\n        case \"listener-broadcast\":\n            this.collectBroadcast(data, path, data.bytes);\n            break;\n        case \"listener-unlisten\":\n            this.collectUnlisten(data, path);\n            break;\n        case \"rest-read\":\n            this.collectRead(data, path, data.bytes);\n            break;\n        case \"rest-write\":\n            this.collectWrite(data, path, data.bytes);\n            break;\n        case \"rest-update\":\n            this.collectWrite(data, path, data.bytes);\n            break;\n        default:\n            break;\n    }\n};\nProfileReport.prototype.collapsePaths = function (pathedObject, combiner, pathIndex) {\n    if (!this.options.collapse) {\n        return pathedObject;\n    }\n    if (_.isUndefined(pathIndex)) {\n        pathIndex = 1;\n    }\n    var allSegments = _.keys(pathedObject).map(function (path) {\n        return path.split(\"/\").filter(function (s) {\n            return s !== \"\";\n        });\n    });\n    var pathSegments = allSegments.filter(function (segments) {\n        return segments.length > pathIndex;\n    });\n    var otherSegments = allSegments.filter(function (segments) {\n        return segments.length <= pathIndex;\n    });\n    if (pathSegments.length === 0) {\n        return pathedObject;\n    }\n    var prefixes = {};\n    pathSegments.forEach(function (segments) {\n        var prefixPath = ProfileReport.pathString(segments.slice(0, pathIndex));\n        var prefixCount = _.get(prefixes, prefixPath, new Set());\n        prefixes[prefixPath] = prefixCount.add(segments[pathIndex]);\n    });\n    var collapsedObject = {};\n    pathSegments.forEach(function (segments) {\n        var prefix = segments.slice(0, pathIndex);\n        var prefixPath = ProfileReport.pathString(prefix);\n        var prefixCount = _.get(prefixes, prefixPath);\n        var originalPath = ProfileReport.pathString(segments);\n        if (prefixCount.size >= COLLAPSE_THRESHOLD) {\n            var tail = segments.slice(pathIndex + 1);\n            var collapsedPath = ProfileReport.pathString(prefix.concat(COLLAPSE_WILDCARD).concat(tail));\n            var currentValue = collapsedObject[collapsedPath];\n            if (currentValue) {\n                collapsedObject[collapsedPath] = combiner(currentValue, pathedObject[originalPath]);\n            }\n            else {\n                collapsedObject[collapsedPath] = pathedObject[originalPath];\n            }\n        }\n        else {\n            collapsedObject[originalPath] = pathedObject[originalPath];\n        }\n    });\n    otherSegments.forEach(function (segments) {\n        var originalPath = ProfileReport.pathString(segments);\n        collapsedObject[originalPath] = pathedObject[originalPath];\n    });\n    return this.collapsePaths(collapsedObject, combiner, pathIndex + 1);\n};\nProfileReport.prototype.renderUnindexedData = function () {\n    var table = new Table({\n        head: [\"Path\", \"Index\", \"Count\"],\n        style: {\n            head: this.options.isFile ? [] : [\"yellow\"],\n            border: this.options.isFile ? [] : [\"grey\"],\n        },\n    });\n    var unindexed = this.collapsePaths(this.state.unindexed, function (u1, u2) {\n        _.mergeWith(u1, u2, function (p1, p2) {\n            return {\n                times: p1.times + p2.times,\n                query: p1.query,\n            };\n        });\n    });\n    var paths = _.keys(unindexed);\n    paths.forEach(function (path) {\n        var indices = _.keys(unindexed[path]);\n        indices.forEach(function (index) {\n            var data = unindexed[path][index];\n            var row = [\n                path,\n                ProfileReport.extractReadableIndex(data.query),\n                ProfileReport.formatNumber(data.times),\n            ];\n            table.push(row);\n        });\n    });\n    return table;\n};\nProfileReport.prototype.renderBandwidth = function (pureData) {\n    var table = new Table({\n        head: [\"Path\", \"Total\", \"Count\", \"Average\"],\n        style: {\n            head: this.options.isFile ? [] : [\"yellow\"],\n            border: this.options.isFile ? [] : [\"grey\"],\n        },\n    });\n    var data = this.collapsePaths(pureData, function (b1, b2) {\n        return {\n            bytes: b1.bytes + b2.bytes,\n            times: b1.times + b2.times,\n        };\n    });\n    var paths = _.keys(data);\n    paths = _.orderBy(paths, function (path) {\n        var bandwidth = data[path];\n        return bandwidth.bytes;\n    }, [\"desc\"]);\n    paths.forEach(function (path) {\n        var bandwidth = data[path];\n        var row = [\n            path,\n            ProfileReport.formatBytes(bandwidth.bytes),\n            ProfileReport.formatNumber(bandwidth.times),\n            ProfileReport.formatBytes(bandwidth.bytes / bandwidth.times),\n        ];\n        table.push(row);\n    });\n    return table;\n};\nProfileReport.prototype.renderOutgoingBandwidth = function () {\n    return this.renderBandwidth(this.state.outband);\n};\nProfileReport.prototype.renderIncomingBandwidth = function () {\n    return this.renderBandwidth(this.state.inband);\n};\nProfileReport.prototype.renderUnpathedOperationSpeed = function (speedData, hasSecurity) {\n    var head = [\"Count\", \"Average Execution Speed\", \"Average Pending Time\"];\n    if (hasSecurity) {\n        head.push(\"Permission Denied\");\n    }\n    var table = new Table({\n        head: head,\n        style: {\n            head: this.options.isFile ? [] : [\"yellow\"],\n            border: this.options.isFile ? [] : [\"grey\"],\n        },\n    });\n    if (Object.keys(speedData).length > 0) {\n        var row = [\n            speedData.times,\n            ProfileReport.formatNumber(speedData.millis / speedData.times) + \" ms\",\n            ProfileReport.formatNumber(speedData.pendingCount === 0 ? 0 : speedData.pendingTime / speedData.pendingCount) + \" ms\",\n        ];\n        if (hasSecurity) {\n            row.push(ProfileReport.formatNumber(speedData.rejected));\n        }\n        table.push(row);\n    }\n    return table;\n};\nProfileReport.prototype.renderOperationSpeed = function (pureData, hasSecurity) {\n    var head = [\"Path\", \"Count\", \"Average Execution Speed\", \"Average Pending Time\"];\n    if (hasSecurity) {\n        head.push(\"Permission Denied\");\n    }\n    var table = new Table({\n        head: head,\n        style: {\n            head: this.options.isFile ? [] : [\"yellow\"],\n            border: this.options.isFile ? [] : [\"grey\"],\n        },\n    });\n    var data = this.collapsePaths(pureData, function (s1, s2) {\n        return {\n            times: s1.times + s2.times,\n            millis: s1.millis + s2.millis,\n            pendingCount: s1.pendingCount + s2.pendingCount,\n            pendingTime: s1.pendingTime + s2.pendingTime,\n            rejected: s1.rejected + s2.rejected,\n        };\n    });\n    var paths = _.keys(data);\n    paths = _.orderBy(paths, function (path) {\n        var speed = data[path];\n        return speed.millis / speed.times;\n    }, [\"desc\"]);\n    paths.forEach(function (path) {\n        var speed = data[path];\n        var row = [\n            path,\n            speed.times,\n            ProfileReport.formatNumber(speed.millis / speed.times) + \" ms\",\n            ProfileReport.formatNumber(speed.pendingCount === 0 ? 0 : speed.pendingTime / speed.pendingCount) + \" ms\",\n        ];\n        if (hasSecurity) {\n            row.push(ProfileReport.formatNumber(speed.rejected));\n        }\n        table.push(row);\n    });\n    return table;\n};\nProfileReport.prototype.renderReadSpeed = function () {\n    return this.renderOperationSpeed(this.state.readSpeed, true);\n};\nProfileReport.prototype.renderWriteSpeed = function () {\n    return this.renderOperationSpeed(this.state.writeSpeed, true);\n};\nProfileReport.prototype.renderBroadcastSpeed = function () {\n    return this.renderOperationSpeed(this.state.broadcastSpeed, false);\n};\nProfileReport.prototype.renderConnectSpeed = function () {\n    return this.renderUnpathedOperationSpeed(this.state.connectSpeed, false);\n};\nProfileReport.prototype.renderDisconnectSpeed = function () {\n    return this.renderUnpathedOperationSpeed(this.state.disconnectSpeed, false);\n};\nProfileReport.prototype.renderUnlistenSpeed = function () {\n    return this.renderOperationSpeed(this.state.unlistenSpeed, false);\n};\nProfileReport.prototype.parse = function (onLine, onClose) {\n    var isFile = this.options.isFile;\n    var tmpFile = this.tempFile;\n    var outStream = this.output;\n    var isInput = this.options.isInput;\n    return new Promise(function (resolve, reject) {\n        var rl = readline.createInterface({\n            input: fs.createReadStream(tmpFile),\n        });\n        var errored = false;\n        rl.on(\"line\", function (line) {\n            var data = ProfileReport.extractJSON(line, isInput);\n            if (!data) {\n                return;\n            }\n            onLine(data);\n        });\n        rl.on(\"close\", function () {\n            if (errored) {\n                reject(new FirebaseError(\"There was an error creating the report.\"));\n            }\n            else {\n                var result = onClose();\n                if (isFile) {\n                    outStream.on(\"finish\", function () {\n                        resolve(result);\n                    });\n                    outStream.end();\n                }\n                else {\n                    resolve(result);\n                }\n            }\n        });\n        rl.on(\"error\", function () {\n            reject();\n        });\n        outStream.on(\"error\", function () {\n            errored = true;\n            rl.close();\n        });\n    });\n};\nProfileReport.prototype.write = function (data) {\n    if (this.options.isFile) {\n        this.output.write(data);\n    }\n    else {\n        logger.info(data);\n    }\n};\nProfileReport.prototype.generate = function () {\n    if (this.options.format === \"TXT\") {\n        return this.generateText();\n    }\n    else if (this.options.format === \"RAW\") {\n        return this.generateRaw();\n    }\n    else if (this.options.format === \"JSON\") {\n        return this.generateJson();\n    }\n    throw new FirebaseError('Invalid report format expected \"TXT\", \"JSON\", or \"RAW\"', {\n        exit: 1,\n    });\n};\nProfileReport.prototype.generateRaw = function () {\n    return this.parse(this.writeRaw.bind(this), function () {\n        return null;\n    });\n};\nProfileReport.prototype.writeRaw = function (data) {\n    this.write(JSON.stringify(data) + \"\\n\");\n};\nProfileReport.prototype.generateText = function () {\n    return this.parse(this.processOperation.bind(this), this.outputText.bind(this));\n};\nProfileReport.prototype.outputText = function () {\n    var totalTime = this.state.endTime - this.state.startTime;\n    var isFile = this.options.isFile;\n    var write = this.write.bind(this);\n    var writeTitle = function (title) {\n        if (isFile) {\n            write(title + \"\\n\");\n        }\n        else {\n            write(clc.bold.yellow(title) + \"\\n\");\n        }\n    };\n    var writeTable = function (title, table) {\n        writeTitle(title);\n        write(table.toString() + \"\\n\");\n    };\n    writeTitle(\"Report operations collected from \" +\n        new Date(this.state.startTime).toISOString() +\n        \" over \" +\n        totalTime +\n        \" ms.\");\n    writeTitle(\"Speed Report\\n\");\n    write(SPEED_NOTE + \"\\n\\n\");\n    writeTable(\"Read Speed\", this.renderReadSpeed());\n    writeTable(\"Write Speed\", this.renderWriteSpeed());\n    writeTable(\"Broadcast Speed\", this.renderBroadcastSpeed());\n    writeTable(\"Connect Speed\", this.renderConnectSpeed());\n    writeTable(\"Disconnect Speed\", this.renderDisconnectSpeed());\n    writeTable(\"Unlisten Speed\", this.renderUnlistenSpeed());\n    writeTitle(\"Bandwidth Report\\n\");\n    write(BANDWIDTH_NOTE + \"\\n\\n\");\n    writeTable(\"Downloaded Bytes\", this.renderOutgoingBandwidth());\n    writeTable(\"Uploaded Bytes\", this.renderIncomingBandwidth());\n    writeTable(\"Unindexed Queries\", this.renderUnindexedData());\n};\nProfileReport.prototype.generateJson = function () {\n    return this.parse(this.processOperation.bind(this), this.outputJson.bind(this));\n};\nProfileReport.prototype.outputJson = function () {\n    var totalTime = this.state.endTime - this.state.startTime;\n    var tableToJson = function (table, note) {\n        var json = {\n            legend: table.options.head,\n            data: [],\n        };\n        if (note) {\n            json.note = note;\n        }\n        table.forEach(function (row) {\n            json.data.push(row);\n        });\n        return json;\n    };\n    var json = {\n        totalTime: totalTime,\n        readSpeed: tableToJson(this.renderReadSpeed(), SPEED_NOTE),\n        writeSpeed: tableToJson(this.renderWriteSpeed(), SPEED_NOTE),\n        broadcastSpeed: tableToJson(this.renderBroadcastSpeed(), SPEED_NOTE),\n        connectSpeed: tableToJson(this.renderConnectSpeed(), SPEED_NOTE),\n        disconnectSpeed: tableToJson(this.renderDisconnectSpeed(), SPEED_NOTE),\n        unlistenSpeed: tableToJson(this.renderUnlistenSpeed(), SPEED_NOTE),\n        downloadedBytes: tableToJson(this.renderOutgoingBandwidth(), BANDWIDTH_NOTE),\n        uploadedBytes: tableToJson(this.renderIncomingBandwidth(), BANDWIDTH_NOTE),\n        unindexedQueries: tableToJson(this.renderUnindexedData()),\n    };\n    this.write(JSON.stringify(json, null, 2));\n    if (this.options.isFile) {\n        return this.output.path;\n    }\n    return json;\n};\nmodule.exports = ProfileReport;\n"]},"metadata":{},"sourceType":"script"}