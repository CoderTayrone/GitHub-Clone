{"ast":null,"code":"/**\n * Copyright 2015 Google Inc. All Rights Reserved.\n * Use of this source code is governed by a BSD-style\n * license that can be found in the LICENSE file or at\n * https://github.com/firebase/superstatic/blob/master/LICENSE\n */\nconst RSVP = require(\"rsvp\");\n\nconst _ = require(\"lodash\");\n\nconst mime = require(\"mime-types\");\n\nconst path = require(\"path\");\n\nconst awaitFinished = RSVP.denodeify(require(\"on-finished\"));\n\nconst destroy = require(\"destroy\");\n\nconst Responder = function (req, res, options) {\n  this.req = req;\n  this.res = res;\n  this.provider = options.provider;\n  this.config = options.config || {};\n  this.rewriters = options.rewriters || {};\n  this.compressor = options.compressor;\n};\n\nResponder.prototype.isNotModified = function (stats) {\n  if (stats.etag && stats.etag === this.req.headers[\"if-none-match\"]) {\n    return true;\n  }\n\n  let reqModified = this.req.headers[\"if-modified-since\"];\n\n  if (reqModified) {\n    reqModified = new Date(reqModified).getTime();\n  }\n\n  if (stats.modified && reqModified && stats.modified < reqModified) {\n    return true;\n  }\n\n  return false;\n};\n\nResponder.prototype.handle = function (item, next) {\n  const self = this;\n  return this._handle(item).then(responded => {\n    if (!responded && next) {\n      next();\n    }\n\n    return responded;\n  }).catch(err => {\n    return self.handleError(err);\n  });\n};\n\nResponder.prototype._handle = function (item) {\n  if (_.isArray(item)) {\n    return this.handleStack(item);\n  } else if (_.isString(item)) {\n    return this.handleFile({\n      file: item\n    });\n  } else if (_.isPlainObject(item)) {\n    if (item.file) {\n      return this.handleFile(item);\n    } else if (item.redirect) {\n      return this.handleRedirect(item);\n    } else if (item.rewrite) {\n      return this.handleRewrite(item);\n    } else if (item.data) {\n      return this.handleData(item);\n    }\n  } else if (_.isFunction(item)) {\n    return this.handleMiddleware(item);\n  }\n\n  return RSVP.reject(new Error(JSON.stringify(item) + \" is not a recognized responder directive\"));\n};\n\nResponder.prototype.handleError = function (err) {\n  this.res.statusCode = 500;\n  console.log(err.stack);\n  this.res.end(\"Unexpected error occurred.\");\n};\n\nResponder.prototype.handleStack = function (stack) {\n  const self = this;\n\n  if (stack.length) {\n    return this._handle(stack.shift()).then(responded => {\n      return responded ? true : self.handleStack(stack);\n    });\n  }\n\n  return RSVP.resolve(false);\n};\n\nResponder.prototype.handleFile = function (file) {\n  const self = this;\n  return this.provider(this.req, file.file).then(result => {\n    if (!result) {\n      return false;\n    }\n\n    if (self.isNotModified(result)) {\n      return self.handleNotModified(result);\n    }\n\n    return self.handleFileStream(file, result);\n  });\n};\n\nResponder.prototype.handleFileStream = function (file, result) {\n  const self = this;\n  this.streamedFile = file;\n  this.res.statusCode = file.status || 200;\n\n  if (this.res.statusCode === 200 && file.file === this.config.errorPage) {\n    this.res.statusCode = 404;\n  }\n\n  this.res.setHeader(\"Content-Type\", result.contentType || mime.contentType(path.extname(file.file)));\n\n  if (result.size) {\n    this.res.setHeader(\"Content-Length\", result.size);\n  }\n\n  if (result.etag) {\n    this.res.setHeader(\"ETag\", result.etag);\n  }\n\n  if (result.modified) {\n    this.res.setHeader(\"Last-Modified\", new Date(result.modified).toUTCString());\n  }\n\n  if (this.compressor) {\n    this.compressor(this.req, this.res, () => {\n      result.stream.pipe(self.res);\n    });\n  } else {\n    result.stream.pipe(self.res);\n  }\n\n  return awaitFinished(this.res).then(() => {\n    destroy(result.stream);\n    return true;\n  });\n};\n\nResponder.prototype.handleNotModified = function () {\n  this.res.statusCode = 304;\n  this.res.removeHeader(\"Content-Type\");\n  this.res.removeHeader(\"Content-Length\");\n  this.res.removeHeader(\"Transfer-Encoding\");\n  this.res.end();\n  return true;\n};\n\nResponder.prototype.handleRedirect = function (redirect) {\n  this.res.statusCode = redirect.status || 301;\n  this.res.setHeader(\"Location\", redirect.redirect);\n  this.res.setHeader(\"Content-Type\", \"text/html; charset=utf-8\");\n  this.res.end(\"Redirecting to \" + redirect.redirect);\n  return RSVP.resolve(true);\n};\n\nResponder.prototype.handleMiddleware = function (middleware) {\n  const self = this;\n  return new RSVP.Promise(resolve => {\n    middleware(self.req, self.res, () => {\n      resolve(false);\n    });\n  });\n};\n\nResponder.prototype.handleRewrite = function (item) {\n  const self = this;\n\n  if (item.rewrite.destination) {\n    return self.handleFile({\n      file: item.rewrite.destination\n    });\n  }\n\n  for (const key in this.rewriters) {\n    if (item.rewrite[key]) {\n      return this.rewriters[key](item.rewrite, this).then(result => {\n        return self._handle(result);\n      });\n    }\n  }\n\n  return RSVP.reject(new Error(\"Unable to find a matching rewriter for \" + JSON.stringify(item.rewrite)));\n};\n\nResponder.prototype.handleData = function (data) {\n  this.res.statusCode = data.status || 200;\n  this.res.setHeader(\"Content-Type\", data.contentType || \"text/html; charset=utf-8\");\n  this.res.end(data.data);\n  return RSVP.resolve(true);\n};\n\nmodule.exports = Responder;","map":{"version":3,"sources":["/home/dev/Documentos/Projects/github-clone/node_modules/superstatic/lib/responder.js"],"names":["RSVP","require","_","mime","path","awaitFinished","denodeify","destroy","Responder","req","res","options","provider","config","rewriters","compressor","prototype","isNotModified","stats","etag","headers","reqModified","Date","getTime","modified","handle","item","next","self","_handle","then","responded","catch","err","handleError","isArray","handleStack","isString","handleFile","file","isPlainObject","redirect","handleRedirect","rewrite","handleRewrite","data","handleData","isFunction","handleMiddleware","reject","Error","JSON","stringify","statusCode","console","log","stack","end","length","shift","resolve","result","handleNotModified","handleFileStream","streamedFile","status","errorPage","setHeader","contentType","extname","size","toUTCString","stream","pipe","removeHeader","middleware","Promise","destination","key","module","exports"],"mappings":"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","sourcesContent":["/**\n * Copyright 2015 Google Inc. All Rights Reserved.\n * Use of this source code is governed by a BSD-style\n * license that can be found in the LICENSE file or at\n * https://github.com/firebase/superstatic/blob/master/LICENSE\n */\n\nconst RSVP = require(\"rsvp\");\nconst _ = require(\"lodash\");\nconst mime = require(\"mime-types\");\nconst path = require(\"path\");\nconst awaitFinished = RSVP.denodeify(require(\"on-finished\"));\nconst destroy = require(\"destroy\");\n\nconst Responder = function(req, res, options) {\n  this.req = req;\n  this.res = res;\n  this.provider = options.provider;\n  this.config = options.config || {};\n  this.rewriters = options.rewriters || {};\n  this.compressor = options.compressor;\n};\n\nResponder.prototype.isNotModified = function(stats) {\n  if (stats.etag && stats.etag === this.req.headers[\"if-none-match\"]) {\n    return true;\n  }\n\n  let reqModified = this.req.headers[\"if-modified-since\"];\n  if (reqModified) {\n    reqModified = new Date(reqModified).getTime();\n  }\n  if (stats.modified && reqModified && stats.modified < reqModified) {\n    return true;\n  }\n\n  return false;\n};\n\nResponder.prototype.handle = function(item, next) {\n  const self = this;\n  return this._handle(item)\n    .then((responded) => {\n      if (!responded && next) {\n        next();\n      }\n      return responded;\n    })\n    .catch((err) => {\n      return self.handleError(err);\n    });\n};\n\nResponder.prototype._handle = function(item) {\n  if (_.isArray(item)) {\n    return this.handleStack(item);\n  } else if (_.isString(item)) {\n    return this.handleFile({ file: item });\n  } else if (_.isPlainObject(item)) {\n    if (item.file) {\n      return this.handleFile(item);\n    } else if (item.redirect) {\n      return this.handleRedirect(item);\n    } else if (item.rewrite) {\n      return this.handleRewrite(item);\n    } else if (item.data) {\n      return this.handleData(item);\n    }\n  } else if (_.isFunction(item)) {\n    return this.handleMiddleware(item);\n  }\n\n  return RSVP.reject(\n    new Error(JSON.stringify(item) + \" is not a recognized responder directive\")\n  );\n};\n\nResponder.prototype.handleError = function(err) {\n  this.res.statusCode = 500;\n  console.log(err.stack);\n  this.res.end(\"Unexpected error occurred.\");\n};\n\nResponder.prototype.handleStack = function(stack) {\n  const self = this;\n  if (stack.length) {\n    return this._handle(stack.shift()).then((responded) => {\n      return responded ? true : self.handleStack(stack);\n    });\n  }\n\n  return RSVP.resolve(false);\n};\n\nResponder.prototype.handleFile = function(file) {\n  const self = this;\n  return this.provider(this.req, file.file).then((result) => {\n    if (!result) {\n      return false;\n    }\n\n    if (self.isNotModified(result)) {\n      return self.handleNotModified(result);\n    }\n\n    return self.handleFileStream(file, result);\n  });\n};\n\nResponder.prototype.handleFileStream = function(file, result) {\n  const self = this;\n\n  this.streamedFile = file;\n  this.res.statusCode = file.status || 200;\n  if (this.res.statusCode === 200 && file.file === this.config.errorPage) {\n    this.res.statusCode = 404;\n  }\n  this.res.setHeader(\n    \"Content-Type\",\n    result.contentType || mime.contentType(path.extname(file.file))\n  );\n  if (result.size) {\n    this.res.setHeader(\"Content-Length\", result.size);\n  }\n  if (result.etag) {\n    this.res.setHeader(\"ETag\", result.etag);\n  }\n  if (result.modified) {\n    this.res.setHeader(\n      \"Last-Modified\",\n      new Date(result.modified).toUTCString()\n    );\n  }\n\n  if (this.compressor) {\n    this.compressor(this.req, this.res, () => {\n      result.stream.pipe(self.res);\n    });\n  } else {\n    result.stream.pipe(self.res);\n  }\n\n  return awaitFinished(this.res).then(() => {\n    destroy(result.stream);\n    return true;\n  });\n};\n\nResponder.prototype.handleNotModified = function() {\n  this.res.statusCode = 304;\n  this.res.removeHeader(\"Content-Type\");\n  this.res.removeHeader(\"Content-Length\");\n  this.res.removeHeader(\"Transfer-Encoding\");\n  this.res.end();\n  return true;\n};\n\nResponder.prototype.handleRedirect = function(redirect) {\n  this.res.statusCode = redirect.status || 301;\n  this.res.setHeader(\"Location\", redirect.redirect);\n  this.res.setHeader(\"Content-Type\", \"text/html; charset=utf-8\");\n  this.res.end(\"Redirecting to \" + redirect.redirect);\n  return RSVP.resolve(true);\n};\n\nResponder.prototype.handleMiddleware = function(middleware) {\n  const self = this;\n  return new RSVP.Promise((resolve) => {\n    middleware(self.req, self.res, () => {\n      resolve(false);\n    });\n  });\n};\n\nResponder.prototype.handleRewrite = function(item) {\n  const self = this;\n  if (item.rewrite.destination) {\n    return self.handleFile({ file: item.rewrite.destination });\n  }\n\n  for (const key in this.rewriters) {\n    if (item.rewrite[key]) {\n      return this.rewriters[key](item.rewrite, this).then((result) => {\n        return self._handle(result);\n      });\n    }\n  }\n  return RSVP.reject(\n    new Error(\n      \"Unable to find a matching rewriter for \" + JSON.stringify(item.rewrite)\n    )\n  );\n};\n\nResponder.prototype.handleData = function(data) {\n  this.res.statusCode = data.status || 200;\n  this.res.setHeader(\n    \"Content-Type\",\n    data.contentType || \"text/html; charset=utf-8\"\n  );\n  this.res.end(data.data);\n  return RSVP.resolve(true);\n};\n\nmodule.exports = Responder;\n"]},"metadata":{},"sourceType":"script"}