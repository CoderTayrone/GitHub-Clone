{"ast":null,"code":"\"use strict\";\n\nvar path = require(\"path\");\n\nvar api = require(\"../api\");\n\nconst {\n  logger\n} = require(\"../logger\");\n\nvar {\n  FirebaseError\n} = require(\"../error\");\n\nfunction _getDefaultBucket(projectId) {\n  return api.request(\"GET\", \"/v1/apps/\" + projectId, {\n    auth: true,\n    origin: api.appengineOrigin\n  }).then(function (resp) {\n    if (resp.body.defaultBucket === \"undefined\") {\n      logger.debug(\"Default storage bucket is undefined.\");\n      return Promise.reject(new FirebaseError(\"Your project is being set up. Please wait a minute before deploying again.\"));\n    }\n\n    return Promise.resolve(resp.body.defaultBucket);\n  }, function (err) {\n    logger.info(\"\\n\\nThere was an issue deploying your functions. Verify that your project has a Google App Engine instance setup at https://console.cloud.google.com/appengine and try again. If this issue persists, please contact support.\");\n    return Promise.reject(err);\n  });\n}\n\nasync function _uploadSource(source, uploadUrl, extraHeaders) {\n  const url = new URL(uploadUrl);\n  const result = await api.request(\"PUT\", url.pathname + url.search, {\n    data: source.stream,\n    headers: Object.assign({\n      \"Content-Type\": \"application/zip\"\n    }, extraHeaders),\n    json: false,\n    origin: url.origin,\n    logOptions: {\n      skipRequestBody: true\n    }\n  });\n  return {\n    generation: result.response.headers[\"x-goog-generation\"]\n  };\n}\n\nasync function _uploadObject(source, bucketName) {\n  if (path.extname(source.file) !== \".zip\") {\n    throw new FirebaseError(`Expected a file name ending in .zip, got ${source.file}`);\n  }\n\n  const location = `/${bucketName}/${path.basename(source.file)}`;\n  const result = await api.request(\"PUT\", location, {\n    auth: true,\n    data: source.stream,\n    headers: {\n      \"Content-Type\": \"application/zip\",\n      \"x-goog-content-length-range\": \"0,123289600\"\n    },\n    json: false,\n    origin: api.storageOrigin,\n    logOptions: {\n      skipRequestBody: true\n    }\n  });\n  return {\n    bucket: bucketName,\n    object: path.basename(source.file),\n    generation: result.response.headers[\"x-goog-generation\"]\n  };\n}\n\nfunction _deleteObject(location) {\n  return api.request(\"DELETE\", location, {\n    auth: true,\n    origin: api.storageOrigin\n  });\n}\n\nmodule.exports = {\n  getDefaultBucket: _getDefaultBucket,\n  deleteObject: _deleteObject,\n  upload: _uploadSource,\n  uploadObject: _uploadObject\n};","map":{"version":3,"sources":["/home/dev/Documentos/Projects/github-clone/node_modules/firebase-tools/lib/gcp/storage.js"],"names":["path","require","api","logger","FirebaseError","_getDefaultBucket","projectId","request","auth","origin","appengineOrigin","then","resp","body","defaultBucket","debug","Promise","reject","resolve","err","info","_uploadSource","source","uploadUrl","extraHeaders","url","URL","result","pathname","search","data","stream","headers","Object","assign","json","logOptions","skipRequestBody","generation","response","_uploadObject","bucketName","extname","file","location","basename","storageOrigin","bucket","object","_deleteObject","module","exports","getDefaultBucket","deleteObject","upload","uploadObject"],"mappings":"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","sourcesContent":["\"use strict\";\nvar path = require(\"path\");\nvar api = require(\"../api\");\nconst { logger } = require(\"../logger\");\nvar { FirebaseError } = require(\"../error\");\nfunction _getDefaultBucket(projectId) {\n    return api\n        .request(\"GET\", \"/v1/apps/\" + projectId, {\n        auth: true,\n        origin: api.appengineOrigin,\n    })\n        .then(function (resp) {\n        if (resp.body.defaultBucket === \"undefined\") {\n            logger.debug(\"Default storage bucket is undefined.\");\n            return Promise.reject(new FirebaseError(\"Your project is being set up. Please wait a minute before deploying again.\"));\n        }\n        return Promise.resolve(resp.body.defaultBucket);\n    }, function (err) {\n        logger.info(\"\\n\\nThere was an issue deploying your functions. Verify that your project has a Google App Engine instance setup at https://console.cloud.google.com/appengine and try again. If this issue persists, please contact support.\");\n        return Promise.reject(err);\n    });\n}\nasync function _uploadSource(source, uploadUrl, extraHeaders) {\n    const url = new URL(uploadUrl);\n    const result = await api.request(\"PUT\", url.pathname + url.search, {\n        data: source.stream,\n        headers: Object.assign({ \"Content-Type\": \"application/zip\" }, extraHeaders),\n        json: false,\n        origin: url.origin,\n        logOptions: { skipRequestBody: true },\n    });\n    return {\n        generation: result.response.headers[\"x-goog-generation\"],\n    };\n}\nasync function _uploadObject(source, bucketName) {\n    if (path.extname(source.file) !== \".zip\") {\n        throw new FirebaseError(`Expected a file name ending in .zip, got ${source.file}`);\n    }\n    const location = `/${bucketName}/${path.basename(source.file)}`;\n    const result = await api.request(\"PUT\", location, {\n        auth: true,\n        data: source.stream,\n        headers: {\n            \"Content-Type\": \"application/zip\",\n            \"x-goog-content-length-range\": \"0,123289600\",\n        },\n        json: false,\n        origin: api.storageOrigin,\n        logOptions: { skipRequestBody: true },\n    });\n    return {\n        bucket: bucketName,\n        object: path.basename(source.file),\n        generation: result.response.headers[\"x-goog-generation\"],\n    };\n}\nfunction _deleteObject(location) {\n    return api.request(\"DELETE\", location, {\n        auth: true,\n        origin: api.storageOrigin,\n    });\n}\nmodule.exports = {\n    getDefaultBucket: _getDefaultBucket,\n    deleteObject: _deleteObject,\n    upload: _uploadSource,\n    uploadObject: _uploadObject,\n};\n"]},"metadata":{},"sourceType":"script"}