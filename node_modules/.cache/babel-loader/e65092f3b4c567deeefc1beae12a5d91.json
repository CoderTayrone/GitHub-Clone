{"ast":null,"code":"\"use strict\";\n\nvar api = require(\"./api\");\n\nvar {\n  FirebaseError\n} = require(\"./error\");\n\nvar utils = require(\"./utils\");\n\nconst {\n  populateInstanceDetails\n} = require(\"./management/database\");\n\nconst {\n  realtimeOriginOrCustomUrl\n} = require(\"./database/api\");\n\nexports.updateRules = function (projectId, instance, src, options) {\n  options = options || {};\n  var path = \".settings/rules.json\";\n\n  if (options.dryRun) {\n    path += \"?dryRun=true\";\n  }\n\n  var downstreamOptions = {\n    instance: instance,\n    project: projectId\n  };\n  return populateInstanceDetails(downstreamOptions).then(function () {\n    const origin = utils.getDatabaseUrl(realtimeOriginOrCustomUrl(downstreamOptions.instanceDetails.databaseUrl), instance, \"\");\n    return api.request(\"PUT\", path, {\n      origin: origin,\n      auth: true,\n      data: src,\n      json: false,\n      resolveOnHTTPError: true\n    });\n  }).then(function (response) {\n    if (response.status === 400) {\n      throw new FirebaseError(\"Syntax error in database rules:\\n\\n\" + JSON.parse(response.body).error);\n    } else if (response.status > 400) {\n      throw new FirebaseError(\"Unexpected error while deploying database rules.\", {\n        exit: 2\n      });\n    }\n  });\n};","map":{"version":3,"sources":["/home/dev/Documentos/Projects/github-clone/node_modules/firebase-tools/lib/rtdb.js"],"names":["api","require","FirebaseError","utils","populateInstanceDetails","realtimeOriginOrCustomUrl","exports","updateRules","projectId","instance","src","options","path","dryRun","downstreamOptions","project","then","origin","getDatabaseUrl","instanceDetails","databaseUrl","request","auth","data","json","resolveOnHTTPError","response","status","JSON","parse","body","error","exit"],"mappings":"AAAA;;AACA,IAAIA,GAAG,GAAGC,OAAO,CAAC,OAAD,CAAjB;;AACA,IAAI;AAAEC,EAAAA;AAAF,IAAoBD,OAAO,CAAC,SAAD,CAA/B;;AACA,IAAIE,KAAK,GAAGF,OAAO,CAAC,SAAD,CAAnB;;AACA,MAAM;AAAEG,EAAAA;AAAF,IAA8BH,OAAO,CAAC,uBAAD,CAA3C;;AACA,MAAM;AAAEI,EAAAA;AAAF,IAAgCJ,OAAO,CAAC,gBAAD,CAA7C;;AACAK,OAAO,CAACC,WAAR,GAAsB,UAAUC,SAAV,EAAqBC,QAArB,EAA+BC,GAA/B,EAAoCC,OAApC,EAA6C;AAC/DA,EAAAA,OAAO,GAAGA,OAAO,IAAI,EAArB;AACA,MAAIC,IAAI,GAAG,sBAAX;;AACA,MAAID,OAAO,CAACE,MAAZ,EAAoB;AAChBD,IAAAA,IAAI,IAAI,cAAR;AACH;;AACD,MAAIE,iBAAiB,GAAG;AAAEL,IAAAA,QAAQ,EAAEA,QAAZ;AAAsBM,IAAAA,OAAO,EAAEP;AAA/B,GAAxB;AACA,SAAOJ,uBAAuB,CAACU,iBAAD,CAAvB,CACFE,IADE,CACG,YAAY;AAClB,UAAMC,MAAM,GAAGd,KAAK,CAACe,cAAN,CAAqBb,yBAAyB,CAACS,iBAAiB,CAACK,eAAlB,CAAkCC,WAAnC,CAA9C,EAA+FX,QAA/F,EAAyG,EAAzG,CAAf;AACA,WAAOT,GAAG,CAACqB,OAAJ,CAAY,KAAZ,EAAmBT,IAAnB,EAAyB;AAC5BK,MAAAA,MAAM,EAAEA,MADoB;AAE5BK,MAAAA,IAAI,EAAE,IAFsB;AAG5BC,MAAAA,IAAI,EAAEb,GAHsB;AAI5Bc,MAAAA,IAAI,EAAE,KAJsB;AAK5BC,MAAAA,kBAAkB,EAAE;AALQ,KAAzB,CAAP;AAOH,GAVM,EAWFT,IAXE,CAWG,UAAUU,QAAV,EAAoB;AAC1B,QAAIA,QAAQ,CAACC,MAAT,KAAoB,GAAxB,EAA6B;AACzB,YAAM,IAAIzB,aAAJ,CAAkB,wCAAwC0B,IAAI,CAACC,KAAL,CAAWH,QAAQ,CAACI,IAApB,EAA0BC,KAApF,CAAN;AACH,KAFD,MAGK,IAAIL,QAAQ,CAACC,MAAT,GAAkB,GAAtB,EAA2B;AAC5B,YAAM,IAAIzB,aAAJ,CAAkB,kDAAlB,EAAsE;AAAE8B,QAAAA,IAAI,EAAE;AAAR,OAAtE,CAAN;AACH;AACJ,GAlBM,CAAP;AAmBH,CA1BD","sourcesContent":["\"use strict\";\nvar api = require(\"./api\");\nvar { FirebaseError } = require(\"./error\");\nvar utils = require(\"./utils\");\nconst { populateInstanceDetails } = require(\"./management/database\");\nconst { realtimeOriginOrCustomUrl } = require(\"./database/api\");\nexports.updateRules = function (projectId, instance, src, options) {\n    options = options || {};\n    var path = \".settings/rules.json\";\n    if (options.dryRun) {\n        path += \"?dryRun=true\";\n    }\n    var downstreamOptions = { instance: instance, project: projectId };\n    return populateInstanceDetails(downstreamOptions)\n        .then(function () {\n        const origin = utils.getDatabaseUrl(realtimeOriginOrCustomUrl(downstreamOptions.instanceDetails.databaseUrl), instance, \"\");\n        return api.request(\"PUT\", path, {\n            origin: origin,\n            auth: true,\n            data: src,\n            json: false,\n            resolveOnHTTPError: true,\n        });\n    })\n        .then(function (response) {\n        if (response.status === 400) {\n            throw new FirebaseError(\"Syntax error in database rules:\\n\\n\" + JSON.parse(response.body).error);\n        }\n        else if (response.status > 400) {\n            throw new FirebaseError(\"Unexpected error while deploying database rules.\", { exit: 2 });\n        }\n    });\n};\n"]},"metadata":{},"sourceType":"script"}